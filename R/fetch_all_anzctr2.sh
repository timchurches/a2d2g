targetfile=/Users/tim.churches/g2d2t/data/anzctr_xml.zip
targetfile_semaphore=/Users/tim.churches/g2d2t/data/anzctr_xml.txt

rm -f $targetfile
rm -f $targetfile_semaphore

curl 'http://www.anzctr.org.au/TrialSearch.aspx?searchTxt=&conditionCategory=&conditionCode=&interventionCodeOperator=OR&interventionCode=&ageGroup=&healthyVolunteers=&gender=&allocationToIntervention=&dateOfRegistrationFrom=&dateOfRegistrationTo=&trialStartDateFrom=&trialStartDateTo=&recruitmentCountryOperator=OR&countryOfRecruitment=&primarySponsorType=&fundingSource=&healthCondition=&interventionDescription=&phase=&recruitmentStatus=&registry=ALL&ethicsReview=&studyType=&isBasic=False&postcode=&distance=' \
-o  $targetfile \
-XPOST \
-H 'Referer: http://www.anzctr.org.au/TrialSearch.aspx?searchTxt=&conditionCategory=&conditionCode=&interventionCodeOperator=OR&interventionCode=&ageGroup=&healthyVolunteers=&gender=&allocationToIntervention=&dateOfRegistrationFrom=&dateOfRegistrationTo=&trialStartDateFrom=&trialStartDateTo=&recruitmentCountryOperator=OR&countryOfRecruitment=&primarySponsorType=&fundingSource=&healthCondition=&interventionDescription=&phase=&recruitmentStatus=&registry=ALL&ethicsReview=&studyType=&isBasic=False&postcode=&distance=' \
-H 'Content-Type: application/x-www-form-urlencoded' \
-H 'Origin: http://www.anzctr.org.au' \
-H 'Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8' \
-H 'DNT: 1' \
-H 'User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_1) AppleWebKit/604.3.5 (KHTML, like Gecko) Version/11.0.1 Safari/604.3.5' \
-H 'Upgrade-Insecure-Requests: 1' \
--data 'ctl00_body_ToolkitScriptManager1_HiddenField=%3B%3BAjaxControlToolkit%2C+Version%3D3.5.60623.0%2C+Culture%3Dneutral%2C+PublicKeyToken%3D28f01b0e84b6d53e%3Aen-US%3A834c499a-b613-438c-a778-d32ab4976134%3A475a4ef5%3A5546a2b%3Ad2e10b12%3Aeffe2a26%3Af9e9a939&__EVENTTARGET=&__EVENTARGUMENT=&__VIEWSTATE=%%2BPGJyIC8%2BMS4gIE1hbGUgb3IgZmVtYWxlIGFnZWQgMTggdG8gPCA4MCB5ZWFycyA8YnIgLz4yLiAgUGFya2luc29u4oCZcyBkaXNlYXNlIGRpYWdub3NlZCBhY2NvcmRpbmcgdG8gVUsgUGFya2luc29u4oCZcyBEaXNlYXNlIFNvY2lldHkgQnJhaW4gQmFuayBDbGluaWNhbCBEaWFnbm9zdGljIENyaXRlcmlhIGFuZCBiYXNlZCBvbiB0aGUgcHJlc2VuY2Ugb2YgYXQgbGVhc3QgdHdvIG9mIHRoZSB0aHJlZSBjYXJkaW5hbCBmZWF0dXJlcyBvZiB0aGUgZGlzZWFzZSAocmVzdCB0cmVtb3IsIGJyYWR5a2luZXNpYSwgYW5kIHJpZ2lkaXR5KS4gSWYgcmVzdCB0cmVtb3IgaXMgbm90IHByZXNlbnQsIHBhdGllbnRzIG11c3QgaGF2ZSB1bmlsYXRlcmFsIG9uc2V0IG9mIHN5bXB0b21zLjxiciAvPjMuICBBYnNvbHV0ZSBuZXV0cm9waGlsIGNvdW50IChBTkMpIGdyZWF0ZXIgdGhhbiBvciBlcXVhbCB0byAxLjUgeCAxMF45L0wgKGdyZWF0ZXIgdGhhbiBvciBlcXVhbCB0byAxLjAgeCAxMF45L0wgZm9yIEJsYWNrIHBvcHVsYXRpb24pIDxiciAvPjxiciAvPkluY2x1c2lvbiBjcml0ZXJpb24gZm9yIHRyZWF0bWVudC1uYcOvdmUgcGF0aWVudHMgb25seTo8YnIgLz48YnIgLz4xLiBBdCBhbiBlYXJseSBzdGFnZSBvZiB0aGUgZGlzZWFzZSwgd2l0aG91dCBtb3RvciBmbHVjdHVhdGlvbnM8YnIgLz48YnIgLz5JbmNsdXNpb24gY3JpdGVyaWEgZm9yIG5vbi10cmVhdG1lbnQtbmHDr3ZlIHBhdGllbnRzIG9ubHk6PGJyIC8%2BPGJyIC8%2BMS4gIE9uIGEgc3RhYmxlIGRvc2UgZm9yIGF0IGxlYXN0IDMgbW9udGhzIHByaW9yIHRvIHRoZSBzY3JlZW5pbmcgdmlzaXQgb2YgYW55IG9mIHRoZSBmb2xsb3dpbmcgdHJlYXRtZW50cyBhdCBhbiBMLWRvcGEgZXF1aXZhbGVudCB0b3RhbCBkYWlseSBkb3NlIG9mIHVwIHRvIDYwMCBtZzo8YnIgLz4gICAgLSBEb3BhbWluZXJnaWMgYWdvbmlzdCBhbG9uZSA8YnIgLz4gICAgLSBMLWRvcGEgYWxvbmU8YnIgLz4gICAgLSBDb21iaW5hdGlvbiB0aGVyYXB5IHdpdGggZG9wYW1pbmVyZ2ljIGFnb25pc3QgYW5kIEwtZG9wYSA8YnIgLz4gICAgLSBSYXNhZ2lsaW5lPGJyIC8%2BMi4gIEF0IGFuIGVhcmx5IHN0YWdlIG9mIHRoZSBkaXNlYXNlLCB3aXRob3V0IG1vdG9yIGZsdWN0dWF0aW9ucyBhbmQvb3IgTC1kb3Bh4oCTaW5kdWNlZCBkeXNraW5lc2lhPGJyIC8%2BCDE4IFllYXJzCDc5IFllYXJzFkJvdGggbWFsZXMgYW5kIGZlbWFsZXPMDk1haW4gZXhjbHVzaW9uIGNyaXRlcmlhIChhbGwgcGF0aWVudHMpOjxiciAvPjxiciAvPjEuIERpYWdub3NpcyBvZiBQYXJraW5zb27igJlzIGRpc2Vhc2UgbW9yZSB0aGFuIDMgeWVhcnMgcHJpb3IgdG8gc2NyZWVuaW5nIHZpc2l0PGJyIC8%2BMi4gIEhvZWhuIGFuZCBZYWhyIHN0YWdlIGdyZWF0ZXIgdGhhbiBvciBlcXVhbCB0byAzIGluIHRoZSDigJxPZmbigJ0gc3RhdGUsIGluZGljYXRpbmcgdGhlIG5lZWQgZm9yIHdhbGtpbmcgYXNzaXN0YW5jZSBpbiB0aGUgYWJzZW5jZSBvZiB0cmVhdG1lbnQuPGJyIC8%2BMy4gIEF0eXBpY2FsIG9yIHNlY29uZGFyeSBQYXJraW5zb25pc20gd2l0aG91dCBkb3BhLXNlbnNpdGl2aXR5IChlLmcuLCB2YXNjdWxhciBwYXJraW5zb25pc20sIHN1cHJhbnVjbGVhciBwYWxzeSwgbXVsdGlzeXN0ZW0gYXRyb3BoeSk8YnIgLz40LiAgUHJvZ3Jlc3NpbmcgQXhpcyBJIHBzeWNoaWF0cmljIGRpc29yZGVycyAocHN5Y2hvc2lzLCBoYWxsdWNpbmF0aW9ucywgY29tcHVsc2l2ZSBkaXNvcmRlcnMsIHN1YnN0YW5jZSBhZGRpY3Rpb24sIGJpcG9sYXIgZGlzb3JkZXIsIHNldmVyZSBkZXByZXNzaW9uLCBhbnhpZXR5KSBhcyBhc3Nlc3NlZCBpbiBhIHNlbWktc3RydWN0dXJlZCBpbnRlcnZpZXcgaW4gYWNjb3JkYW5jZSB3aXRoIHRoZSBEaWFnbm9zdGljIGFuZCBTdGF0aXN0aWNhbCBNYW51YWwgb2YgTWVudGFsIERpc29yZGVyczxiciAvPjUuICBDdXJyZW50IHRyZWF0bWVudCB3aXRoIGJyb21vY3JpcHRpbmU8YnIgLz42LiAgQ3VycmVudCB0cmVhdG1lbnQgd2l0aCBjb2VuenltZSBRMTAgb3IgaWRlYmVub25lLiAgKFBhdGllbnRzIHdobyBhcmUgb24gdGhlc2UgbWVkaWNhdGlvbnMgYnV0IHN0b3AgdGFraW5nIHRoZW0gYXQgbGVhc3QgMiB3ZWVrcyBwcmlvciB0byBiYXNlbGluZSBtYXkgYmUgZW5yb2xsZWQuKTxiciAvPjcuICBDdXJyZW50IHVzZSBvZiBhIERlZXAgQnJhaW4gU3RpbXVsYXRpb24gKERCUykgc3lzdGVtLiAoUGF0aWVudHMgd2hvIHByZXZpb3VzbHkgaGFkIGEgREJTIHN5c3RlbSBidXQgaGF2ZSBoYWQgaXQgcmVtb3ZlZCBtYXkgYmUgZW5yb2xsZWQuKTxiciAvPjxiciAvPkV4Y2x1c2lvbiBjcml0ZXJpYSBmb3IgdHJlYXRtZW50LW5hw692ZSBwYXRpZW50cyBvbmx5OjxiciAvPjxiciAvPjEuIFByZXZpb3VzIG9yIGN1cnJlbnQgdHJlYXRtZW50IHdpdGggYW50aXBhcmtpbnNvbmlhbiBtZWRpY2F0aW9uLCBvciBsaWtlbHkgdG8gcmVxdWlyZSBzdWNoIG1lZGljYXRpb24gb3ZlciB0aGUgZHVyYXRpb24gb2YgdGhlIHRyaWFsPGJyIC8%2BMi4gIEN1cnJlbnQgdHJlYXRtZW50IHdpdGggY29lbnp5bWUgUTEwIGF0IGFueSBkb3NhZ2UuIChQYXRpZW50cyB3aG8gYXJlIG9uIHRoaXMgbWVkaWNhdGlvbiBhdCBhIGRvc2FnZSA8MzAwIG1nL2RheSBidXQgc3RvcCB0YWtpbmcgaXQgYXQgbGVhc3QgMiB3ZWVrcyBwcmlvciB0byB0aGUgZmlyc3QgZG9zZSBvZiBzdHVkeSBtZWRpY2F0aW9uIG1heSBiZSBlbnJvbGxlZC4pPGJyIC8%2BPGJyIC8%2BRXhjbHVzaW9uIGNyaXRlcmlhIGZvciBub24tdHJlYXRtZW50LW5hw692ZSBwYXRpZW50cyBvbmx5OjxiciAvPjxiciAvPjEuIE5vdCBzdGFiaWxpemVkIGluIHRlcm1zIG9mIHRoZSBjdXJyZW50IGFudGlwYXJraW5zb25pYW4gdGhlcmFwZXV0aWMgcmVnaW1lbiwgYW5kIGxpa2VseSB0byByZXF1aXJlIGFueSBjaGFuZ2UgaW4gZG9wYW1pbmUgdGhlcmFweSBvdmVyIHRoZSBkdXJhdGlvbiBvZiB0aGUgdHJpYWw8YnIgLz4yLiAgQ3VycmVudCB0cmVhdG1lbnQgd2l0aCBhbnkgYW50aXBhcmtpbnNvbmlhbiBkcnVnIG90aGVyIHRoYW4gdGhvc2UgbGlzdGVkIGluIHRoZSBpbmNsdXNpb24gY3JpdGVyaWEgPGJyIC8%2BDmV4cGFuZGFibGUtYm94GkNvbW1lcmNpYWwgc2VjdG9yL0luZHVzdHJ5DkFwb1BoYXJtYSBJbmMuNDIwMCBCYXJtYWMgRHJpdmU8YnIgLz5Ub3JvbnRvLCBPbnRhcmlvIE05TCAyWjc8YnIgLz4GQ2FuYWRhAkRyEUNhcm9saW5lIEZyYWRldHRlQkFwb1BoYXJtYSBJbmMuPGJyIC8%2BMjAwIEJhcm1hYyBEcml2ZTxiciAvPlRvcm9udG8sIE9udGFyaW8gTTlMIDJaNwZDYW5hZGEPKzEtNDE2LTQwMS03NTQzFmNmcmFkZXR0QGFwb3BoYXJtYS5jb20GaGlkZGVuZAIPDxQrAAQPFgQfBWUfA2dkZGQ8KwAEAQAWAh8CZWQCEQ8WAh8BaGQCEw9kFgYCAw8PFgIfDWVkZAIFDw8WAh8NBSQvVHJpYWxQZGYvVHJpYWxSZXZpZXctMzczODkzLnBkZj90PTFkZAIvDzwrAAQBAA8WAh8DZ2RkAgMPZBYWZg8VAhByZXN1bHRzLWhlYWRlci0xEVRyaWFsIGZyb20gQU5aQ1RSZAIBDw8WAh8NBT1%2BL1RyaWFsL1JlZ2lzdHJhdGlvbi9UcmlhbFJldmlldy5hc3B4P2lkPTM3Mzk2NyZpc1Jldmlldz10cnVlZGQCAw8PFgIfDQUkL1RyaWFsUGRmL1RyaWFsUmV2aWV3LTM3Mzk2Ny5wZGY%2FdD0xZGQCBw8PFgIfAgUGMzczOTY3ZGQCCQ8PFgIfAgUOMTI2MTcwMDE1NzczMDNkZAILDw8WAh8CZWRkAg0PDxYCHwIFBUZhbHNlZGQCDg8VLRByZXN1bHRzLWhlYWRlci0ynQFBIFBoYXNlIElJIHRyaWFsIGV2YWx1YXRpbmcgZXhlcmNpc2UgZm9yIHBhdGllbnRzIHdpdGggYnJhaW4gY2FuY2VyIC0gZGV0ZXJtaW5pbmcgdGhlIGZlYXNpYmlsaXR5IGFuZCBzYWZldHkgb2YgYW4gMTgtd2VlayBpbmRpdmlkdWFsaXNlZCBleGVyY2lzZSBwcm9ncmFtIC4gEk5vdCB5ZXQgcmVjcnVpdGluZwdpbmZvLWxpCEFwcHJvdmVkB2luZm8tbGkYUHJvc3BlY3RpdmVseSByZWdpc3RlcmVkMUhhcyB0aGUgdHJpYWwgYmVlbiB1cGRhdGVkIGluIHRoZSBsYXN0IDEyIG1vbnRocz8KVXAgdG8gZGF0ZQoyNC8xMS8yMDE3EnJlc3VsdHMtaGVhZGVyLTEwMAhBcHByb3ZlZApVcCB0byBkYXRlE0FDVFJOMTI2MTcwMDE1NzczMDMQMjQgTm92ZW1iZXIgMjAxNwRzaG93DEJyYWluIENhbmNlcgRzaG93CUF1c3RyYWxpYQRzaG93ClF1ZWVuc2xhbmQEc2hvdwRzaG93Ek5vdCB5ZXQgcmVjcnVpdGluZxAwMSBEZWNlbWJlciAyMDE3BHNob3cIQXBwcm92ZWTuC1RoZSBhaW0gb2YgdGhpcyBzdHVkeSBpcyB0byBkZXRlcm1pbmUgdGhlIHN1aXRhYmlsaXR5IGFuZCBzYWZldHkgb2YgYW4gMTgtd2VlayBleGVyY2lzZSBwcm9ncmFtIGZvciBwZW9wbGUgd2l0aCBicmFpbiBjYW5jZXIgYW5kIHRvIHRlc3Qgd2hldGhlciB0aGUgcHJvZ3JhbSBpbXByb3ZlcyBxdWFsaXR5IG9mIGxpZmUsIHdlbGwtYmVpbmcgYW5kIHBoeXNpY2FsIGhlYWx0aC4gPGJyIC8%2BPGJyIC8%2BV2hvIGlzIGl0IGZvcj88YnIgLz5Zb3UgbWF5IGJlIGVsaWdpYmxlIHRvIGpvaW4gdGhpcyBzdHVkeSBpZiB5b3UgYXJlIGFnZWQgMTggeWVhcnMgb3Igb3ZlciBhbmQgaGF2ZSBhIGRpYWdub3NpcyBvZiBwcmltYXJ5IG1hbGlnbmFudCBicmFpbiB0dW1vdXIgKGkuZS4gYnJhaW4gY2FuY2VyKS48YnIgLz48YnIgLz48YnIgLz5TdHVkeSBkZXRhaWxzPGJyIC8%2BRHVyaW5nIHRoZSAxOC13ZWVrIGludGVydmVudGlvbiwgQWNjcmVkaXRlZCBFeGVyY2lzZSBQaHlzaW9sb2dpc3RzIChBRVApIHdpbGwgcHJlc2NyaWJlIHdlZWtseSBleGVyY2lzZSB0aGF0IHdpbGwgYmUgaW5kaXZpZHVhbGlzZWQgYWNjb3JkaW5nIHRvIHRoZSB5b3VyIGludGVyZXN0cywgZml0bmVzcywgcHJlc2VuY2Ugb2YgdHJlYXRtZW50LXJlbGF0ZWQgc2lkZSBlZmZlY3RzIGFuZCBjby1tb3JiaWRpdGllcy4gVGhlIGV4ZXJjaXNlIHByb2dyYW0gd2lsbCBpbmNsdWRlIGFlcm9iaWMgKGNhcmRpb3Zhc2N1bGFyKSBleGVyY2lzZSwgYW5kIHJlc2lzdGFuY2UgKHN0cmVuZ3RoKSBiYXNlZCBleGVyY2lzZS4gVGhlIEFFUCB3aWxsIHByZXNjcmliZSBhbmQgbW9uaXRvciBleGVyY2lzZSB0eXBlLCBkdXJhdGlvbiBhbmQgZnJlcXVlbmN5IGV2ZXJ5IHdlZWsgYW5kIG1vZGlmeSBwcmVzY3JpcHRpb24gYWNjb3JkaW5nIHRvIHN5bXB0b21zIGFuZCBncmFkdWFsbHkgcHJvZ3Jlc3MgdGhlIGV4ZXJjaXNlIHByZXNjcmlwdGlvbi4gWW91IG1heSBjaG9vc2UgdG8gZG8gYWxsIGV4ZXJjaXNlIHNlc3Npb25zIHVuZGVyIHRoZSBzdXBlcnZpc2lvbiBvZiBhbiBBRVAgYXQgQXNwaXJlIEZpdG5lc3MgYW5kIFJlaGFiaWxpdGF0aW9uIChhdCBXb29sbG9vbmdhYmJhLCBCcmlzYmFuZSkgb3IgaGF2ZSBzb21lIGV4ZXJjaXNlIHNlc3Npb25zIHN1cGVydmlzZWQgYW5kIG90aGVyIHVuc3VwZXJ2aXNlZCAoYXQgaG9tZSBvciBhbm90aGVyIGNvbnZlbmllbnQgbG9jYXRpb24pLiBBc3Nlc3NtZW50cyAocXVlc3Rpb25uYWlyZXMgYW5kIHBoeXNpY2FsIGFzc2Vzc21lbnRzKSB3aWxsIGJlIGNvbmR1Y3RlZCBhdCBiYXNlbGluZSwgdGhlIG1pZGRsZSAod2VlayA5KSwgdGhlIGVuZCBvZiB0aGUgb2YgdGhlIHByb2dyYW0gKHdlZWsgMTgpIGFuZCA2IG1vbnRocyBsYXRlci4gPGJyIC8%2BPGJyIC8%2BV2UgaHlwb3RoZXNpc2UgdGhhdCBwYXJ0aWNpcGFudHMgd2lsbCBmZWFzaWJseSBhbmQgc2FmZWx5IHBhcnRpY2lwYXRlIGluIGFuIDE4LXdlZWsgaW5kaXZpZHVhbGlzZWQgZXhlcmNpc2UgaW50ZXJ2ZW50aW9uLjxiciAvPjxiciAvPr4HMS4JUGVvcGxlIHdpdGggYSBkaWFnbm9zaXMgb2YgcHJpbWFyeSBtYWxpZ25hbnQgYnJhaW4gdHVtb3VyIChpLmUuIGJyYWluIGNhbmNlcikgZS5nLiBnbGlvbWFzIChhc3Ryb2N5dG9tYXMsIGdsaW9ibGFzdG9tYXMsIG9saWdvZGVuZHJvZ2xpb21hcywgZXBlbmR5bW9tYXMgYW5kIG1peGVkIGNlbGwgdHlwZSBnbGlvbWFzKS4gPGJyIC8%2BMi4JQWdlIDE4IHllYXJzIG9yIG9sZGVyIDxiciAvPjMuCUVhc3Rlcm4gQ29vcGVyYXRpdmUgT25jb2xvZ3kgR3JvdXAgKEVDT0cpIHN0YXR1cyAwLTIuPGJyIC8%2BNC4JV2lsbGluZyBhbmQgYWJsZSB0byBjb21wbHkgd2l0aCBhbGwgc3R1ZHkgcmVxdWlyZW1lbnRzLCBpbmNsdWRpbmcgdGhlIGV4ZXJjaXNlIGludGVydmVudGlvbiwgdGltaW5nIGFuZC9vciBuYXR1cmUgb2YgcmVxdWlyZWQgYXNzZXNzbWVudHMuPGJyIC8%2BNS4JU3VmZmljaWVudGx5IGZsdWVudCBpbiBFbmdsaXNoIHRvIGZ1bGx5IHBhcnRpY2lwYXRlIGluIGRhdGEgY29sbGVjdGlvbiByZXF1aXJlbWVudHMgYW5kIGNvbXByZWhlbmQgaW50ZXJ2ZW50aW9uIHJlcXVpcmVtZW50cy4gPGJyIC8%2BNi4JQW50aWNpcGF0ZWQgc3Vydml2YWwgb2YgYSBtaW5pbXVtIG9mIDEyIG1vbnRocywgYXMgYXNzZXNzZWQgYnkgdGhlIHRyZWF0aW5nIGNsaW5pY2lhbiAoZS5nLiBtZWRpY2FsIG9uY29sb2dpc3QsIHJhZGlhdGlvbiBvbmNvbG9naXN0LCBvciBzdXJnZW9uKS4gPGJyIC8%2BNy4JQXJlIGJldHdlZW4gMTIgYW5kIDI2IHdlZWtzIHBvc3QtcmFkaW90aGVyYXB5IChyZWNlaXB0IG9mIG9yYWwgY2hlbW90aGVyYXB5IGR1cmluZyB0aGlzIHBlcmlvZCBpcyBhbGxvd2VkKS4gPGJyIC8%2BOC4JU2lnbmVkIHdyaXR0ZW4gaW5mb3JtZWQgY29uc2VudC4gPGJyIC8%2BOS4JRGVlbWVkIHN1aXRhYmxlIHRvIHBhcnRpY2lwYXRlIGluIHRoZSBzdHVkeSBieSB0cmVhdGluZyBjbGluaWNpYW4uIDxiciAvPggxOCBZZWFycwkgTm8gbGltaXQWQm90aCBtYWxlcyBhbmQgZmVtYWxlc%2FEGMS4JRGlhZ25vc2lzIG9mIHNlY29uZGFyeSBicmFpbiBjYW5jZXIgb3IgYnJhaW4gY2FuY2VyIHJlY3VycmVuY2UuIDxiciAvPjIuCURpYWdub3NpcyBvZiBjZW50cmFsIG5lcnZvdXMgc3lzdGVtIGx5bXBob21hLiA8YnIgLz4zLglIaXN0b3J5IG9mIGFub3RoZXIgbWFsaWduYW5jeSB3aXRoaW4gMiB5ZWFycyBwcmlvciB0byByZWdpc3RyYXRpb24uIFBhdGllbnRzIHdpdGggYSBoaXN0b3J5IG9mIG90aGVyIG1hbGlnbmFuY2llcyBhcmUgZWxpZ2libGUgaWYgdGhleSBoYXZlIGJlZW4gY29udGludW91c2x5IGRpc2Vhc2UtZnJlZSBmb3IgYXQgbGVhc3QgMiB5ZWFycyBhZnRlciBkZWZpbml0aXZlIHByaW1hcnkgdHJlYXRtZW50LiBQYXRpZW50cyB3aXRoIGEgZGlhZ25vc2lzIG9mIGJhc2FsIGNlbGwgY2FyY2lub21hIGFuZCBzcXVhbW91cyBjZWxsIGNhcmNpbm9tYXMgYW5kIHByZS1tYWxpZ25hbnQgY2FyY2lub21hcyAoZS5nLiBpbiBzaXR1KSBhcmUgYWxzbyBlbGlnaWJsZS4gPGJyIC8%2BNC4JQ29uY3VycmVudCBpbGxuZXNzLCBpbmNsdWRpbmcgc2V2ZXJlIGluZmVjdGlvbiBvciB1bnN0YWJsZSBhbmdpbmEgdGhhdCBtYXkgamVvcGFyZGlzZSB0aGUgYWJpbGl0eSBvZiB0aGUgcGF0aWVudCB0byB1bmRlcmdvIHRoZSBleGVyY2lzZSBpbnRlcnZlbnRpb24gb3V0bGluZWQgaW4gdGhpcyBwcm90b2NvbCB3aXRoIHJlYXNvbmFibGUgc2FmZXR5LjxiciAvPjUuCVNlcmlvdXMgbWVkaWNhbCBvciBwc3ljaGlhdHJpYyBjb25kaXRpb25zIHRoYXQgbWlnaHQgbGltaXQgdGhlIGFiaWxpdHkgb2YgdGhlIHBhdGllbnQgdG8gY29tcGx5IHdpdGggdGhlIHByb3RvY29sLCBhcyBkZXRlcm1pbmVkIGJ5IHRoZWlyIHRyZWF0aW5nIGNsaW5pY2lhbi48YnIgLz4OZXhwYW5kYWJsZS1ib3gfQ2hhcml0aWVzL1NvY2lldGllcy9Gb3VuZGF0aW9uc2NIYWVtYXRvbG9neSAmIE9uY29sb2d5IENsaW5pY3Mgb2YgQXVzdHJhbGlhIFJlc2VhcmNoIENlbnRyZSBMdGQgKFRyYWRpbmcgYXMgSWNvbiBDYW5jZXIgRm91bmRhdGlvbik0TGV2ZWwgMSwgMjIgQ29yZGVsaWEgU3Q8YnIgLz5Tb3V0aCBCcmlzYmFuZSBRTEQgNDEwMQlBdXN0cmFsaWECRHIQQ2Fyb2xpbmEgU2FuZGxlcoIBSW5zdGl0dXRlIG9mIEhlYWx0aCBhbmQgQmlvbWVkaWNhbCBJbm5vdmF0aW9uPGJyIC8%2BNjAgTXVzayBBdmVudWUsIEtlbHZpbiBHcm92ZTxiciAvPlF1ZWVuc2xhbmQgVW5pdmVyc2l0eSBvZiBUZWNobm9sb2d5IFFMRCA0MDU5IAlBdXN0cmFsaWEOKzYxNyAzMTM4IDY0NzIbY2Fyb2xpbmEuc2FuZGxlckBxdXQuZWR1LmF1BmhpZGRlbmQCDw8UKwAEDxYEHwVlHwNnZGRkPCsABAEAFgIfAmVkAhEPFgIfAWhkAhMPZBYGAgMPDxYCHw1lZGQCBQ8PFgIfDQUkL1RyaWFsUGRmL1RyaWFsUmV2aWV3LTM3Mzk2Ny5wZGY%2FdD0xZGQCLw88KwAEAQAPFgIfA2dkZAIFD2QWFmYPFQIQcmVzdWx0cy1oZWFkZXItMRFUcmlhbCBmcm9tIEFOWkNUUmQCAQ8PFgIfDQU9fi9UcmlhbC9SZWdpc3RyYXRpb24vVHJpYWxSZXZpZXcuYXNweD9pZD0zNzM4OTYmaXNSZXZpZXc9dHJ1ZWRkAgMPDxYCHw0FJC9UcmlhbFBkZi9UcmlhbFJldmlldy0zNzM4OTYucGRmP3Q9MWRkAgcPDxYCHwIFBjM3Mzg5NmRkAgkPDxYCHwIFDjEyNjE3MDAxNTc2MzE0ZGQCCw8PFgIfAmVkZAINDw8WAh8CBQVGYWxzZWRkAg4PFS0QcmVzdWx0cy1oZWFkZXItMnVBcHAtQmFzZWQgU3VwcGxlbWVudGFsIEV4ZXJjaXNlIER1cmluZyBJbnBhdGllbnQgUmVoYWJpbGl0YXRpb24gSW5jcmVhc2VzIEFjdGl2aXR5IExldmVsczogQSBSYW5kb21pc2VkIENvbnRyb2wgVHJpYWwSTm90IHlldCByZWNydWl0aW5nB2luZm8tbGkIQXBwcm92ZWQHaW5mby1saRhQcm9zcGVjdGl2ZWx5IHJlZ2lzdGVyZWQxSGFzIHRoZSB0cmlhbCBiZWVuIHVwZGF0ZWQgaW4gdGhlIGxhc3QgMTIgbW9udGhzPwpVcCB0byBkYXRlCjI0LzExLzIwMTcScmVzdWx0cy1oZWFkZXItMTAwCEFwcHJvdmVkClVwIHRvIGRhdGUTQUNUUk4xMjYxNzAwMTU3NjMxNBAyNCBOb3ZlbWJlciAyMDE3BHNob3dLUGh5c2ljYWwgTWVkaWNpbmUgLyBSZWhhYmlsaXRhdGlvbiwgT3N0ZW9hcnRocml0aXMsIE5ldXJvbG9naWNhbCBDb25kaXRpb25zBHNob3cJQXVzdHJhbGlhBHNob3cPTmV3IFNvdXRoIFdhbGVzBHNob3cEc2hvdxJOb3QgeWV0IHJlY3J1aXRpbmcQMDEgRGVjZW1iZXIgMjAxNwRzaG93CEFwcHJvdmVk7AdPYmplY3RpdmU6IFRvIGludmVzdGlnYXRlIHdoZXRoZXIgYW4gQXBwLWJhc2VkIHN1cHBsZW1lbnRhbCBleGVyY2lzZSBwcm9ncmFtIGluIGlucGF0aWVudCByZWhhYmlsaXRhdGlvbiB3aWxsIGluY3JlYXNlIGFjdGl2aXR5IGxldmVscyBhbmQgaW1wcm92ZSBmdW5jdGlvbmFsIG91dGNvbWVzIGFuZCBiZSBhY2NlcHRhYmxlIHRvIHBhcnRpY2lwYW50czxiciAvPkRlc2lnbjogU2luZ2xlLWNlbnRyZSwgc2luZ2xlLWJsaW5kIHBpbG90IHJhbmRvbWlzZWQgY29udHJvbCB0cmlhbCA8YnIgLz5TZXR0aW5nOiBJbnBhdGllbnQgcHJpdmF0ZSBnZW5lcmFsIHJlaGFiaWxpdGF0aW9uIHVuaXQ8YnIgLz5QYXJ0aWNpcGFudHM6IFVwIHRvIDMwMCBpbmRpdmlkdWFscyBhZG1pdHRlZCBmb3IgaW5wYXRpZW50IHJlaGFiaWxpdGF0aW9uIG92ZXIgMyBtb250aCBkdXJhdGlvbi4gPGJyIC8%2BSW50ZXJ2ZW50aW9uOiBQYXJ0aWNpcGFudHMgd2lsbCBiZSByYW5kb21pc2VkIHRvIHJlY2VpdmUgc3VwcGxlbWVudGFsIGV4ZXJjaXNlIHZpYSBhbiBBcHAgKFBUUGFsVE0pIG9uIGEgdGFibGV0IGRldmljZSBhZGRpdGlvbmFsIHRvIHVzdWFsIGNhcmUgb3IgdXN1YWwgY2FyZSBhbG9uZS4gPGJyIC8%2BTWFpbiBPdXRjb21lIE1lYXN1cmVzOiBUb3RhbCByZXBldGl0aW9ucyBvZiBlYWNoIGFjdGl2aXR5IGFuZCB0aW1lIGluIHN1cHBsZW1lbnRhbCBleGVyY2lzZSBwcm9ncmFtcywgcGFydGljaXBhbnQgc2F0aXNmYWN0aW9uIHdpdGggQXBwLWJhc2VkIHN1cHBsZW1lbnRhbCBleGVyY2lzZS4gU2Vjb25kYXJ5IG1lYXN1cmVzIHdlcmUgMTAgTWV0cmUgV2FsayBUZXN0ICgxME1XVCk7IDYgTWludXRlIFdhbGsgVGVzdCAoNk1XVCk7IFRpbWVkIFVwIGFuZCBHbyAoVFVHKTsgdG90YWwgYW1vdW50IG9mIGlucGF0aWVudCB0aGVyYXB5IGhvdXJzLCBGdW5jdGlvbmFsIEluZGVwZW5kZW5jZSBNZWFzdXJlIGFuZCBsZW5ndGggb2Ygc3RheSBhc3Nlc3NlZCBieSBhIGJsaW5kZWQgYXNzZXNzb3IuIJMFUGFydGljaXBhbnRzIHdpbGwgYmUgcmVjcnVpdGVkIGlmIHRoZXkgYXJlIGlucGF0aWVudHMgdW5kZXJnb2luZyB1c3VhbC1jYXJlIHJlaGFiaWxpdGF0aW9uLCBhZ2VkIG92ZXIgMTggeWVhcnMgb2YgYWdlLCBhYmxlIHRvIGNvbnNlbnQsIGhhZCBiZWVuIGFkbWl0dGVkIGZvciBpbnBhdGllbnQgcmVoYWJpbGl0YXRpb24sIGFuZCBhcmUgd2lsbGluZyB0byB1c2Ugb3IgYmUgZWR1Y2F0ZWQgb24gdGhlIHVzZSBvZiB0aGUgdGFibGV0IGRldmljZSBhbmQgaGF2ZSBubyBtZWRpY2FsIGNvbnRyYWluZGljYXRpb25zIHRvIGEgc3VwcGxlbWVudGFsIGV4ZXJjaXNlIHByb2dyYW0uIEVsaWdpYmxlIHBhcnRpY2lwYW50cyBtdXN0IGJlIHVuZGVyZ29pbmcgcmVoYWJpbGl0YXRpb24gaW4gYW55IGRpYWdub3N0aWMgY2F0ZWdvcnkgKG9ydGhvcGFlZGljLCBuZXVyb2xvZ2ljYWwsIHJlY29uZGl0aW9uaW5nKS4gIElmIHRoZSBpbmRpdmlkdWFsIGlzIHVuYWJsZSB0byBwcm92aWRlIGNvbnNlbnQgZHVlIHRvIGNvZ25pdGl2ZSBpbXBhaXJtZW50IGRlZmluZWQgYXMgYSBNaW5pIE1lbnRhbCBTdGF0ZSBFeGFtaW5hdGlvbiAoTU1TRSkgc2NvcmUgbGVzcyB0aGFuIDI0LzMwLCB0aGV5IHdpbGwgbm90IGJlIGFwcHJvYWNoZWQgdG8gdGFrZSBwYXJ0IGluIHRoZSBzdHVkeS4IMTggWWVhcnMJIE5vIGxpbWl0FkJvdGggbWFsZXMgYW5kIGZlbWFsZXNTQ29nbml0aXZlIGltcGFpcm1lbnQ8YnIgLz5NZWRpY2FsIGNvbnRyYWluZGljYXRpb24gdG8gc3VwcGxlbWVudGFsIGV4ZXJjaXNlIHByb2dyYW0OZXhwYW5kYWJsZS1ib3gISG9zcGl0YWwLUm95YWwgUmVoYWIiMjM1IE1vcnJpc29uIFJkPGJyIC8%2BUnlkZSBOU1cgMjExMglBdXN0cmFsaWECRHIIVHJhbSBCdWkzUm95YWwgUmVoYWI8YnIgLz4yMzUgTW9ycmlzb24gUmQ8YnIgLz5SeWRlIE5TVyAyMTEyCUF1c3RyYWxpYQ8rNjEgMiA5ODA4IDkyMjIadHJhbS5idWlAcm95YWxyZWhhYi5jb20uYXUGaGlkZGVuZAIPDxQrAAQPFgQfBWUfA2dkZGQ8KwAEAQAWAh8CZWQCEQ8WAh8BaGQCEw9kFgYCAw8PFgIfDWVkZAIFDw8WAh8NBSUvVHJpYWxQZGYvVHJpYWxSZXZpZXctMzczODk2LnBkZj90PTE3ZGQCLw88KwAEAQAPFgIfA2dkZAIHD2QWFmYPFQIQcmVzdWx0cy1oZWFkZXItMRFUcmlhbCBmcm9tIEFOWkNUUmQCAQ8PFgIfDQU9fi9UcmlhbC9SZWdpc3RyYXRpb24vVHJpYWxSZXZpZXcuYXNweD9pZD0zNzM5MzcmaXNSZXZpZXc9dHJ1ZWRkAgMPDxYCHw0FJS9UcmlhbFBkZi9UcmlhbFJldmlldy0zNzM5MzcucGRmP3Q9MTdkZAIHDw8WAh8CBQYzNzM5MzdkZAIJDw8WAh8CBQ4xMjYxNzAwMTU3NTMyNWRkAgsPDxYCHwJlZGQCDQ8PFgIfAgUFRmFsc2VkZAIODxUtEHJlc3VsdHMtaGVhZGVyLTJ%2FVGhlIE51dHJpdGlvbmFsIFN0YXR1cyBvZiBPbGRlciBOZXcgWmVhbGFuZCBBZHVsdHMgaW4gUmVzaWRlbnRpYWwgQ2FyZTogdGhlIE5ldyBaZWFsYW5kIE51dHJpdGlvbiBpbiBBZ2VkLWNhcmUgUHJvamVjdCAoTlpOQVBzKQlDb21wbGV0ZWQHaW5mby1saQhBcHByb3ZlZAdpbmZvLWxpGlJldHJvc3BlY3RpdmVseSByZWdpc3RlcmVkMUhhcyB0aGUgdHJpYWwgYmVlbiB1cGRhdGVkIGluIHRoZSBsYXN0IDEyIG1vbnRocz8KVXAgdG8gZGF0ZQoyNC8xMS8yMDE3EnJlc3VsdHMtaGVhZGVyLTEwMAhBcHByb3ZlZApVcCB0byBkYXRlE0FDVFJOMTI2MTcwMDE1NzUzMjUQMjQgTm92ZW1iZXIgMjAxNwRzaG93GE51dHJpdGlvbiBTdGF0dXMsIEFnZWluZwRzaG93C05ldyBaZWFsYW5kBmhpZGRlbgAEc2hvdwRzaG93CUNvbXBsZXRlZANuL2EEc2hvdwhBcHByb3ZlZMkJVGhpcyBwcm9qZWN0IHdpbGwgY29sbGVjdCBpbmZvcm1hdGlvbiBvbiB0aGUgZGlldGFyeSBpbnRha2VzIGFuZCBudXRyaXRpb25hbCBzdGF0dXMgb2YgTmV3IFplYWxhbmRlcnMgcmVzaWRpbmcgaW4gYWdlZC1jYXJlIHJlc3QgaG9tZXMsIGluIG9yZGVyIHRvIGluZm9ybSB0aGUgZGV2ZWxvcG1lbnQgb2Ygc2FmZSBhbmQgYXBwcm9wcmlhdGUgc3RyYXRlZ2llcyB0byBpbXByb3ZlIHRoZSBoZWFsdGggb2YgdGhlc2UgcmVzaWRlbnRzLjxiciAvPlBvb3IgbnV0cml0aW9uIGluIG9sZGVyIGFkdWx0cyBpcyBhIG1ham9yIGNhdXNlIG9mIGlsbCBoZWFsdGggYW5kIHJlZHVjZWQgcXVhbGl0eSBvZiBsaWZlLiAgVW5kZXJub3VyaXNoZWQgZWxkZXJseSBoYXZlIG1vcmUgZnJlcXVlbnQgYW5kIGxvbmdlciBob3NwaXRhbCB2aXNpdHMgYW5kIGhpZ2hlciByaXNrIG9mIHByb2dyZXNzaW5nIHRvIG51cnNpbmcgaG9tZSBjYXJlLiBTdHVkaWVzIGFjcm9zcyBBdXN0cmFsaWEsIEV1cm9wZSBhbmQgVUsgc2hvdyB0aGF0IHBvb3IgbnV0cmllbnQgaW50YWtlIGlzIGNvbW1vbiBpbiByZXN0IGhvbWVzLCBhZmZlY3RpbmcgMzUlLTg1JSBvZiByZXNpZGVudHMuIEhvd2V2ZXIsIHRoZXJlIGlzIGxpdHRsZSBpbmZvcm1hdGlvbiBvbiB0aGUgbnV0cml0aW9uYWwgc3RhdHVzIG9mIHJlc2lkZW50cyBpbiByZXN0IGhvbWVzIGluIE5aLjxiciAvPldlIHdpbGwgZXhhbWluZSBkaWV0YXJ5IGludGFrZXMgYW5kIGJsb29kIGxldmVscyBvZiBpcm9uOyBzZWxlbml1bTsgemluYzsgdml0YW1pbnMgRCwgQjEyLCBCNiBhbmQgZm9sYXRlLiBXZSB3aWxsIGFsc28gZXhhbWluZSBsZXZlbHMgb2YgaW9kaW5lIGFuZCBzb2RpdW0gKHNhbHQpIGluIHVyaW5lLiBUaGVzZSBudXRyaWVudHMgYXJlIGtub3duIHRvIGJlIGxvdyBpbiB0aGUgZGlldHMgb2YgaW5kZXBlbmRlbnQtbGl2aW5nIG9sZGVyIE5ldyBaZWFsYW5kZXJzLCBhbmQgbG93IGludGFrZXMgYXJlIGFzc29jaWF0ZWQgd2l0aCBpbGwgaGVhbHRoIGFuZCBkaXNhYmlsaXR5LiBXZSB3aWxsIGRldGVybWluZSB0aGUgcHJldmFsZW5jZSBvZiBudXRyaXRpb24tcmVsYXRlZCBoZWFsdGggY29uZGl0aW9ucyAoZS5nLiBhbmFlbWlhLCBmcmFpbHR5LCBwb29yIG9yYWwgaGVhbHRoKSwgYW5kIGludmVzdGlnYXRlIGhlYWx0aCBhbmQgbGlmZXN0eWxlIHBhdHRlcm5zIHRoYXQgbWF5IGxlYWQgdG8gbnV0cmllbnQgZGVmaWNpZW5jaWVzLkVyZXNpZGVudHMgb2YgTlogYWdlZC1jYXJlIGZhY2lsaXRpZXMgcmVzaWRpbmcgYXQgcmVzdC1ob21lIGxldmVsIGNhcmUINjUgWWVhcnMJIE5vIGxpbWl0FkJvdGggbWFsZXMgYW5kIGZlbWFsZXM9bGVzcyB0aGFuIDEyIHdlZWtzIHJlc2lkZW5jeSBpbiBhIE5aIGFnZWQtY2FyZSBmYWNpbGl0eTxiciAvPg5leHBhbmRhYmxlLWJveApJbmRpdmlkdWFsIUFzc29jaWF0ZSBQcm9mZXNzb3IgTGlzYSBIb3VnaHRvbmhEZXBhcnRtZW50IG9mIEh1bWFuIE51dHJpdGlvbjxiciAvPlVuaXZlcnNpdHkgb2YgT3RhZ288YnIgLz5QTyBCb3ggNTY8YnIgLz5EdW5lZGluIDkwNTQ8YnIgLz5OZXcgWmVhbGFuZAtOZXcgWmVhbGFuZANNcnMNU3VlIE1hY0RvbmVsbFdEZXBhcnRtZW50IG9mIEh1bWFuIE51dHJpdGlvbjxiciAvPlVuaXZlcnNpdHkgb2YgT3RhZ288YnIgLz5QTyBCb3ggNTY8YnIgLz5EdW5lZGluIDkwNTQLTmV3IFplYWxhbmQOKzY0IDIxIDQyMiAxMTkZc3VlLm1hY2RvbmVsbEBvdGFnby5hYy5uegZoaWRkZW5kAg8PFCsABA8WBB8FZR8DZ2RkZDwrAAQBABYCHwJlZAIRDxYCHwFoZAITD2QWBgIDDw8WAh8NZWRkAgUPDxYCHw0FJS9UcmlhbFBkZi9UcmlhbFJldmlldy0zNzM5MzcucGRmP3Q9MTdkZAIvDzwrAAQBAA8WAh8DZ2RkAgkPZBYWZg8VAhByZXN1bHRzLWhlYWRlci0xEVRyaWFsIGZyb20gQU5aQ1RSZAIBDw8WAh8NBT1%2BL1RyaWFsL1JlZ2lzdHJhdGlvbi9UcmlhbFJldmlldy5hc3B4P2lkPTM3Mzk0MiZpc1Jldmlldz10cnVlZGQCAw8PFgIfDQUlL1RyaWFsUGRmL1RyaWFsUmV2aWV3LTM3Mzk0Mi5wZGY%2FdD0xN2RkAgcPDxYCHwIFBjM3Mzk0MmRkAgkPDxYCHwIFDjEyNjE3MDAxNTc0MzM2ZGQCCw8PFgIfAmVkZAINDw8WAh8CBQVGYWxzZWRkAg4PFS0QcmVzdWx0cy1oZWFkZXItMnhUaGUgdXNlIG9mIG5lZ2F0aXZlIHByZXNzdXJlIGluIHRoZSB0cmVhdG1lbnQgb2Ygc2Vjb25kYXJ5IGFybSBseW1waG9lZGVtYSBhbmQgZmlicm9zaXMgaW4gcG9zdC1icmVhc3QgY2FuY2VyIHBhdGllbnRzICASTm90IHlldCByZWNydWl0aW5nB2luZm8tbGkIQXBwcm92ZWQHaW5mby1saRhQcm9zcGVjdGl2ZWx5IHJlZ2lzdGVyZWQxSGFzIHRoZSB0cmlhbCBiZWVuIHVwZGF0ZWQgaW4gdGhlIGxhc3QgMTIgbW9udGhzPwpVcCB0byBkYXRlCjIzLzExLzIwMTcScmVzdWx0cy1oZWFkZXItMTAwCEFwcHJvdmVkClVwIHRvIGRhdGUTQUNUUk4xMjYxNzAwMTU3NDMzNhAyMyBOb3ZlbWJlciAyMDE3BHNob3crbHltcGhvZWRlbWEsIHRpc3N1ZSBmaWJyb3NpcywgYnJlYXN0IGNhbmNlcgRzaG93CUF1c3RyYWxpYQRzaG93D1NvdXRoIEF1c3RyYWxpYQRzaG93BHNob3cSTm90IHlldCByZWNydWl0aW5nEDI3IE5vdmVtYmVyIDIwMTcEc2hvdwhBcHByb3ZlZOMIVGhlIG1haW4gYWltIG9mIHRoaXMgc3R1ZHkgaXMgdG8gYXNzZXNzIHRoZSB1c2Ugb2YgUGh5c2lvdG91Y2ggaW4gdHJlYXRpbmcgc2Vjb25kYXJ5IGFybSBseW1waG9lZGVtYSBhbmQgdGlzc3VlIGZpYnJvc2lzIGluIHBhdGllbnRzIHdobyBoYXZlIHVuZGVyZ29uZTxiciAvPnVuaWxhdGVyYWwgc3VyZ2ljYWwgdHJlYXRtZW50IGZvciBicmVhc3QgY2FuY2VyLjxiciAvPjxiciAvPlBhcnRpY2lwYW50cyB3aWxsIGJlIGZlbWFsZXMgd2hvIGhhdmUgaGFkIGJyZWFzdCBjYW5jZXIgYW5kIGhhdmUgdW5kZXJnb25lIHVuaWxhdGVyYWwgbWFzdGVjdG9teS4gS2V5IGV4Y2x1c2lvbiBjcml0ZXJpYSB3b21hbiB3aG86IGhhcyByZWNlaXZlZCBicmVhc3QtY2FuY2VyIHJlbGF0ZWQgdHJlYXRtZW50IHdpdGhpbiB0aGUgbGFzdCA2IG1vbnRocywgaXMgcHJlZ25hbnQsIHlvdW5nZXIgdGhhbiBhZ2UgMTgsIGhhdmUgaW1wbGFudGFibGUgZGV2aWNlcywgaGF2ZSBoZWFydCBwcm9ibGVtcywgaGF2ZSBhIHRlbmRlbmN5IHRvIGNsb3QsIG9yIGFyZSBwcmVkaXNwb3NlZCB0byBpbmZlY3Rpb24uPGJyIC8%2BPGJyIC8%2BU3R1ZHkgZGV0YWlsczo8YnIgLz5QYXJ0aWNpcGFudHMgd2lsbCBub3QgbmVlZCB0byBjaGFuZ2UgYW55IGN1cnJlbnQgY29uc2VydmF0aXZlIHRoZXJhcHkgdGhleSBhcmUgcmVjZWl2aW5nIGZvciB0aGVpciBseW1waG9lZGVtYSBvciB0aXNzdWUgZmlicm9zaXMuIFRoZSBQaHlzaW9Ub3VjaCBkZXZpY2Ugd2lsbCBiZSB1c2UgdG8gYWRtaW5pc3RlciB0cmVhdG1lbnQgYnkgcHJvZmVzc2lvbmFscyB0cmFpbmVkIGluIHRoZSB1c2Ugb2YgdGhpcyBkZXZpY2UuIEFsbCBwYXJ0aWNpcGFudHMgd2lsbCBiZSByZWNlaXZpbmcgdGhlIHNhbWUgdHJlYXRtZW50LiA8YnIgLz48YnIgLz5UaGlzIHN0dWR5IHdpbGwgYXNzZXNzIHRoZSBwb3NzaWJpbGl0eSBvZiBQaHlzaW90b3VjaCwgYW5kIG5lZ2F0aXZlIHByZXNzdXJlLCBiZWluZyB1c2VkIGFzIGFuIGFsdGVybmF0aXZlIHRoZXJhcHkgdG8gdGhlIGN1cnJlbnQgY29uc2VydmF0aXZlIG1hbmFnZW1lbnQgZm9yIGx5bXBob2VkZW1hIGFuZCB0aXNzdWUgZmlicm9zaXMgd2hpY2ggb25seSB1c2VzIHBvc2l0aXZlIHByZXNzdXJlLrQDLSBVbmlsYXRlcmFsIGFybSBseW1waG9lZGVtYSBmb2xsb3dpbmcgYnJlYXN0IGNhbmNlciB3aXRoIG5vIHByZWV4aXN0aW5nPGJyIC8%2Bcmlza3Mgb3Igc3VyZ2VyeSBvbiB0aGUgb3RoZXIgc2lkZTxiciAvPk9SPGJyIC8%2BLSBDaGVzdCB3YWxsIHNjYXIgdGlzc3VlIGFuZC9vciBmaWJyb3NpcyBmb2xsb3dpbmcgYnJlYXN0IGNhbmNlciB3aXRoIG5vIHByZWV4aXN0aW5nIHJpc2tzPGJyIC8%2BPGJyIC8%2BQU5EPGJyIC8%2BLSBTdGFnZSAyIGFybSBseW1waG9lZGVtYSBpbiBhIGZlbWFsZSBmb2xsb3dpbmcgdHJlYXRtZW50IGZvciBicmVhc3QgY2FuY2VyPGJyIC8%2BLSBNdXN0IGJlIDYgbW9udGhzIHBvc3RzdXJnZXJ5LCBjaGVtb3RoZXJhcHkgYW5kIG9yIHJhZGlhdGlvbiB0cmVhdG1lbnQgZm9yIGJyZWFzdCBjYW5jZXI8YnIgLz4tIEFnZSBvdmVyIDE4IHllYXJzIG9sZAgxOCBZZWFycwkgTm8gbGltaXQHRmVtYWxlc9cHLSBEaWFnbm9zaXMgb2YgYWN0aXZlIG9yIHJlY3VycmVudCBjYW5jZXIsIG9yIGxlc3MgdGhhbiA2IG1vbnRocyBhdCB0aGUgdGltZSBvZiBpbml0aWFsIGV2YWx1YXRpb24gZnJvbSBjb21wbGV0aW9uIG9mIGNoZW1vdGhlcmFweSwgcmFkaWF0aW9uIHRoZXJhcHkgb3IgcHJpbWFyeSBzdXJnZXJ5IGZvciB0aGU8YnIgLz50cmVhdG1lbnQgb2YgY2FuY2VyLjxiciAvPi0gRGlhZ25vc2lzIG9yIHN1c3BlY3RlZCBhY3V0ZSBpbmZlY3Rpb248YnIgLz4tIEluZGl2aWR1YWxzIHdpdGggcGFjZW1ha2VyIG9yIG90aGVyIGltcGxhbnRlZCBlbGVjdHJvbmljIGRldmljZXM8YnIgLz4tIERpYWdub3NpcyBvZiBhY3V0ZSB0aHJvbWJvcGhsZWJpdGlzIChpbiBsYXN0IDIgbW9udGhzKTxiciAvPi0gUmVjZWl2aW5nIGNvcnRpY29zdGVyb2lkcyBvciBpbW11bmUgc3VwcHJlc3NhbnRzPGJyIC8%2BLSBQcmVzZW5jZSBvZiBvcGVuIHdvdW5kIG9yIGFueSBza2luIGluZmxhbW1hdGlvbiwgaXJyaXRhdGlvbiBvZiBza2luIGFsbGVyZ2llczxiciAvPi0gRGlhZ25vc2lzIG9mIHB1bG1vbmFyeSBlbWJvbGlzbSBvciBkZWVwIHZlaW4gdGhyb21ib3NpcyB3aXRoaW4gdGhlIHByZXZpb3VzIDYgbW9udGhzPGJyIC8%2BLSBEaWFnbm9zaXMgb2YgcHVsbW9uYXJ5IG9lZGVtYTxiciAvPi0gRGlhZ25vc2lzIG9mIGNvbmdlc3RpdmUgaGVhcnQgZmFpbHVyZTxiciAvPi0gUHJlZ25hbmN5PGJyIC8%2BLSBBbnkgY29uZGl0aW9uIHdoZXJlIGluY3JlYXNlZCB2ZW5vdXMgb3IgbHltcGhhdGljIHJldHVybiBpcyB1bmRlc2lyYWJsZTxiciAvPi0gSW5hYmlsaXR5IG9yIHVud2lsbGluZ25lc3MgdG8gcGFydGljaXBhdGUgaW4gYWxsIGFzcGVjdHMgb2Ygc3R1ZHkgcHJvdG9jb2wgYW5kIG9yIGluYWJpbGl0eSB0byBwcm92aWRlIGluZm9ybWVkIGNvbnNlbnQ8YnIgLz4tIEN1cnJlbnRseSBwYXJ0aWNpcGF0aW5nIGluIGFub3RoZXIgY2xpbmljYWwgdHJpYWw8YnIgLz4OZXhwYW5kYWJsZS1ib3gKSW5kaXZpZHVhbAxOZWlsIFBpbGxlciBOTGV2ZWwgMywgRmxpbmRlcnMgTWVkaWNhbCBDZW50cmU8YnIgLz5GbGluZGVycyBEcml2ZTxiciAvPkJlZGZvcmQgUGFyayBTQSA1MDQyCUF1c3RyYWxpYQJNcwtLYXRobGVlbiBMeV9GbGluZGVycyBDZW50cmUgZm9yIElubm92YXRpb24gaW4gQ2FuY2VyLCBMZXZlbCA0PGJyIC8%2BRmxpbmRlcnMgRHJpdmU8YnIgLz5CZWRmb3JkIFBhcmsgU0EgNTA0MglBdXN0cmFsaWENKzYxIDQwNDMxNDE2NBZseTAwNDFAZmxpbmRlcnMuZWR1LmF1BmhpZGRlbmQCDw8UKwAEDxYEHwVlHwNnZGRkPCsABAEAFgIfAmVkAhEPFgIfAWhkAhMPZBYGAgMPDxYCHw1lZGQCBQ8PFgIfDQUlL1RyaWFsUGRmL1RyaWFsUmV2aWV3LTM3Mzk0Mi5wZGY%2FdD0xN2RkAi8PPCsABAEADxYCHwNnZGQCCw9kFhZmDxUCEHJlc3VsdHMtaGVhZGVyLTERVHJpYWwgZnJvbSBBTlpDVFJkAgEPDxYCHw0FPX4vVHJpYWwvUmVnaXN0cmF0aW9uL1RyaWFsUmV2aWV3LmFzcHg%2FaWQ9MzczODY5JmlzUmV2aWV3PXRydWVkZAIDDw8WAh8NBSUvVHJpYWxQZGYvVHJpYWxSZXZpZXctMzczODY5LnBkZj90PTE3ZGQCBw8PFgIfAgUGMzczODY5ZGQCCQ8PFgIfAgUOMTI2MTcwMDE1NzMzNDdkZAILDw8WAh8CZWRkAg0PDxYCHwIFBUZhbHNlZGQCDg8VLRByZXN1bHRzLWhlYWRlci0y6gFBbiBvcGVuLWxhYmVsLCBtdWx0aS1jZW50cmUgUGhhc2UgSWIgc3R1ZHkgb2YgdGhlIHNhZmV0eSBhbmQgdG9sZXJhYmlsaXR5IG9mIElWIGluZnVzZWQgUEc1NDUgaW4gY29tYmluYXRpb24gd2l0aCBuaXZvbHVtYWIgaW4gcGF0aWVudHMgd2l0aCBhZHZhbmNlZCBzb2xpZCB0dW1vdXJzIHdpdGggYW4gZXhwYW5zaW9uIGNvaG9ydCBpbiBwYXRpZW50cyB3aXRoIG1ldGFzdGF0aWMgcGFuY3JlYXRpYyBjYW5jZXIKUmVjcnVpdGluZwdpbmZvLWxpCEFwcHJvdmVkB2luZm8tbGkaUmV0cm9zcGVjdGl2ZWx5IHJlZ2lzdGVyZWQxSGFzIHRoZSB0cmlhbCBiZWVuIHVwZGF0ZWQgaW4gdGhlIGxhc3QgMTIgbW9udGhzPwpVcCB0byBkYXRlCjIyLzExLzIwMTcScmVzdWx0cy1oZWFkZXItMTAwCEFwcHJvdmVkClVwIHRvIGRhdGUTQUNUUk4xMjYxNzAwMTU3MzM0NxAyMiBOb3ZlbWJlciAyMDE3BHNob3cpQWR2YW5jZWQgc29saWQgdHVtb3VycywgUGFuY3JlYXRpYyBDYW5jZXIEc2hvdwlBdXN0cmFsaWEEc2hvdw9OZXcgU291dGggV2FsZXMEc2hvdwRzaG93ClJlY3J1aXRpbmcDbi9hBHNob3cIQXBwcm92ZWSWClRoaXMgc3R1ZHkgd2lsbCBkZXRlcm1pbmUgdGhlIHNhZmV0eSBhbmQgdG9sZXJhYmlsaXR5IG9mIFBHNTQ1IGluIGNvbWJpbmF0aW9uIHdpdGggTml2b2x1bWFiIGluIHBhdGllbnRzIHdpdGggYWR2YW5jZWQgc29saWQgdHVtb3VycyBvciBtZXRhc3RhdGljIHBhbmNyZWF0aWMgY2FuY2VyLiA8YnIgLz48YnIgLz5XaG8gaXMgaXQgZm9yPzxiciAvPllvdSBtYXkgYmUgZWxpZ2libGUgdG8gam9pbiB0aGlzIHN0dWR5IGlmIHlvdSBhcmUgYWdlZCAxOCB5ZWFycyBvbGQgb3IgYWJvdmUgYW5kIGhhdmUgYSBub24tIGhhZW1hdG9sb2dpY2FsLCBtYWxpZ25hbnQgc29saWQgdHVtb3VyIChmb3IgU3RhZ2UgMSkgb3IgbWV0YXN0YXRpYyBhZGVub2NhcmNpbm9tYSBvZiB0aGUgcGFuY3JlYXMgKGZvciBTdGFnZSAyKS48YnIgLz48YnIgLz5TdHVkeSBkZXRhaWxzPGJyIC8%2BVGhpcyBzdHVkeSBoYXMgdHdvIHN0YWdlczogU3RhZ2UgMSB0byBlc3RhYmxpc2ggdGhlIG1heGltdW0gdG9sZXJhdGVkIHdlZWtseSBkb3NlIG9mIFBHNTQ1IGludHJhdmVub3VzIChJVikgaW5mdXNpb24gaW4gY29tYmluYXRpb24gd2l0aCBmb3J0bmlnaHRseSBOaXZvbHVtYWIgSVYgaW5mdXNpb24sIGFuZCBzdGFnZSAyIHRvIHNhZmV0eSBhbmQgdG9sZXJhYmlsaXR5IG9mIHRoZSByZWNvbW1lbmRlZCBkb3NlIGZyb20gc3RhZ2UgMSBvZiBQRzU0NSBJViBpbmZ1c2lvbiBpbiBjb21iaW5hdGlvbiB3aXRoIGZvcnRuaWdodGx5IE5pdm9sdW1hYiBJViBpbmZ1c2lvbi4gVHJlYXRtZW50IGluIGJvdGggc3RhZ2VzIHdpbGwgY29udGludWUgdW50aWwgZGlzZWFzZSBwcm9ncmVzc2lvbiwgdW5hY2NlcHRhYmxlIHRveGljaXR5IG9yIHBhcnRpY2lwYW50IHdpdGhkcmF3YWwuPGJyIC8%2BPGJyIC8%2BUGFydGljaXBhbnRzIHdpbGwgYmUgcmVndWxhcmx5IGFzc2Vzc2VkIHRocm91Z2hvdXQgdGhlIHN0dWR5IGluIG9yZGVyIHRvIG1vbml0b3Igc2FmZXR5IGFuZCB0dW1vdXIgcmVzcG9uc2UuPGJyIC8%2BPGJyIC8%2BSXQgaXMgZW52aXNhZ2VkIHRoYXQgdGhlIGNvbWJpbmF0aW9uIG9mIFBHNTQ1IGFuZCBOaXZvbHVtYWIgd2lsbCBpbXByb3ZlIG9uIHRoZSBsaW1pdGVkIHRyZWF0bWVudCBvcHRpb25zIGN1cnJlbnRseSBhdmFpbGFibGUgZm9yIHBhdGllbnRzIHdpdGggcGFuY3JlYXMgY2FuY2VyLiBPbmNlIGRlbW9uc3RyYXRlZCB0byBiZSBzYWZlLCB0aGUgY29tYmluYXRpb24gY2FuIHRoZW4gYmUgZXhwbG9yZWQgaW4gbGFyZ2VyIGNsaW5pY2FsIHN0dWRpZXMgaW4gcGFuY3JlYXMgY2FuY2VyIGFuZCBvdGhlciB0dW1vdXIgdHlwZXMuIOcNU3RhZ2UgMTxiciAvPjEuCUhpc3RvbG9naWNhbCBvciBjeXRvbG9naWNhbCBkb2N1bWVudGF0aW9uIG9mIG5vbiBoYWVtYXRvbG9naWNhbCwgbWFsaWduYW50IHNvbGlkIHR1bW91ciwgZXhjbHVkaW5nIHByaW1hcnkgYnJhaW4gb3Igc3BpbmFsIHR1bW91cnMuPGJyIC8%2BMi4JU3ViamVjdHMgd2l0aCBhZHZhbmNlZCBzb2xpZCB0dW1vdXJzIHdobyBoYXZlIGV4cGVyaWVuY2VkIGZhaWx1cmUgb2YgYWxsIHN0YW5kYXJkIHRoZXJhcGllcywgbm8gbG9uZ2VyIGFyZSBjYW5kaWRhdGVzIGZvciBzdGFuZGFyZCB0aGVyYXB5LCBoYXZlIG5vIHN0YW5kYXJkIHRoZXJhcHkgYXZhaWxhYmxlLCBvciBjaG9vc2Ugbm90IHRvIHB1cnN1ZSBzdGFuZGFyZCB0aGVyYXB5ICh0aGUgbGF0dGVyIGlzIHRvIGJlIGRvY3VtZW50ZWQpLjxiciAvPlN0YWdlIDI6PGJyIC8%2BMS4JSGlzdG9sb2dpY2FsbHktIG9yIGN5dG9sb2dpY2FsbHktcHJvdmVuIG1ldGFzdGF0aWMgYWRlbm9jYXJjaW5vbWEgb2YgdGhlIHBhbmNyZWFzLjxiciAvPjIuCVBhdGllbnTigJlzIGFjY2VwdGFuY2UgdG8gaGF2ZSBhIHR1bW91ciBiaW9wc3kgb2YgYW4gYWNjZXNzaWJsZSBsZXNpb24gYXQgYmFzZWxpbmUgYW5kIG9uIHRyZWF0bWVudCBpZiB0aGUgbGVzaW9uIGNhbiBiZSBiaW9wc2llZCB3aXRoIGFjY2VwdGFibGUgY2xpbmljYWwgcmlzayAoYXMganVkZ2VkIGJ5IHRoZSBpbnZlc3RpZ2F0b3IpLiBUaGUgbGVzaW9uIHRvIGJlIGJpb3BzaWVkIGNhbm5vdCBiZSB1c2VkIGFzIGEgdGFyZ2V0IGxlc2lvbiBmb3IgUkVDSVNUIGFzc2Vzc21lbnQuPGJyIC8%2BR2VuZXJhbDxiciAvPjMuCUFnZSAxOCB5ZWFycyBhbmQgb2xkZXIuPGJyIC8%2BNC4JTWVhc3VyYWJsZSBkaXNlYXNlIChhdCBsZWFzdCAxIHRhcmdldCBsZXNpb24pIGFjY29yZGluZyB0byBSRUNJU1QgdjEuMS48YnIgLz41LglMaWZlIGV4cGVjdGFuY3kgb2YgYXQgbGVhc3QgMTIgd2Vla3MuPGJyIC8%2BNi4JRUNPRyBQZXJmb3JtYW5jZSBTdGF0dXMgb2YgMCBvciAxLjxiciAvPjcuCVVuZGVyc3RhbmQsIHNpZ24gYW5kIGRhdGUgaW5mb3JtZWQgY29uc2VudCB0byBwYXJ0aWNpcGF0ZSBpbiBzdHVkeS48YnIgLz44LglBYmxlIGFuZCB3aWxsaW5nIHRvIG1lZXQgYWxsIHByb3RvY29sLXJlcXVpcmVkIHRyZWF0bWVudHMsIGludmVzdGlnYXRpb25zIGFuZCB2aXNpdHMuPGJyIC8%2BOS4JSGF2ZSBhZGVxdWF0ZSBvcmdhbiBmdW5jdGlvbiBpbmNsdWRpbmc6IEJvbmUgTWFycm93IFJlc2VydmU6IEFic29sdXRlIG5ldXRyb3BoaWwgY291bnQgKEFOQykgbm90IGxlc3MgdGhhbiAoTkxUKSAxNTAwIGNlbGxzL8K1TCwgcGxhdGVsZXRzIE5MVCAxMDAsMDAwL8K1TCwgaGFlbW9nbG9iaW4gTiA5IGcvZEw7IEhlcGF0aWM6IEJpbGlydWJpbiBub3QgbW9yZSB0aGFuIChOTVQpIDEuNSB4IHVwcGVyIGxpbWl0cyBvZiBub3JtYWwgKFVMTiksIGFsYW5pbmUgdHJhbnNhbWluYXNlIChBTFQpIGFuZCBhc3BhcnRhdGUgdHJhbnNhbWluYXNlIChBU1QpIE5NVCAyLjUgeCBVTE4gKEFTVCBhbmQgQUxUIDw1IHRpbWVzIGlmIGxpdmVyIG1ldGFzdGFzZXMgYXJlIHByZXNlbnQpOyBSZW5hbDogPiA2MCBtTC9taW51dGUgIGNyZWF0aW5pbmUgY2xlYXJhbmNlIChDb2Nrcm9mdCBhbmQgR2F1bHQgZXF1YXRpb24pOyBDb2FndWxhdGlvbjogQWN0aXZhdGVkIHBhcnRpYWwgdGhyb21ib3BsYXN0aW4gdGltZSAoQVBUVCkgTk1UIDEuMiB4IFVMTiBhbmQgSW50ZXJuYXRpb25hbCBOb3JtYWxpc2VkIFJhdGlvIChJTlIpIE5NVCAxLjQuCDE4IFllYXJzCSBObyBsaW1pdBZCb3RoIG1hbGVzIGFuZCBmZW1hbGVzwx9TdGFnZSAyOjxiciAvPjEuCVN1YmplY3RzIHdobyBoYXZlIHJlY2VpdmVkIG1vcmUgdGhhbiBvbmUgcHJpb3IgY2hlbW90aGVyYXB5IHJlZ2ltZW4uPGJyIC8%2BR2VuZXJhbDxiciAvPjIuCUNsaW5pY2FsbHkgc2lnbmlmaWNhbnQgbm9uLW1hbGlnbmFudCBkaXNlYXNlIGluY2x1ZGluZywgYnV0IG5vdCBsaW1pdGVkIHRvLCBoZXBhdGl0aXMgQiBvciBDLCBtYWpvciBzdXJnZXJ5IHdpdGhpbiA2IHdlZWtzIG9mIGVucm9sbWVudCwgYWN0aXZlIGNsaW5pY2FsbHkgc2lnbmlmaWNhbnQgaW5mZWN0aW9uLCBteW9jYXJkaWFsIGluZmFyY3Rpb24gd2l0aGluIDYgbW9udGhzIHByaW9yIHRvIGVucm9sbWVudCwgY2VyZWJyb3Zhc2N1bGFyIGV2ZW50IG9yIHRyYW5zaWVudCBpc2NoYWVtaWMgYXR0YWNrIHdpdGhpbiA2IG1vbnRocyBwcmlvciB0byBlbnJvbG1lbnQsIG9yIGEgY29uZGl0aW9uIHJlcXVpcmluZyBzeXN0ZW1pYyB0cmVhdG1lbnQgd2l0aCBjb3J0aWNvc3Rlcm9pZHMgKD4gMTAgbWcgZGFpbHkgcHJlZG5pc29uZSBlcXVpdmFsZW50cykuPGJyIC8%2BMy4JQ2xpbmljYWxseSBzaWduaWZpY2FudCBnYXN0cm9pbnRlc3RpbmFsIGJsZWVkaW5nIHdpdGhpbiA0IHdlZWtzIHByaW9yIHRvIGVucm9sbWVudCBvciBjbGluaWNhbGx5LXNpZ25pZmljYW50IGJsZWVkaW5nIGZyb20gdGhlIHR1bW91ciB3aXRoaW4gNCB3ZWVrcyBwcmlvciB0byBlbnJvbG1lbnQuPGJyIC8%2BNC4JQW50aS1jYW5jZXIgdGhlcmFweSB3aXRoaW4gNCB3ZWVrcyBvZiBDeWNsZSAxIGRheSAxIChleGNsdWRpbmcgR25SSCBhZ29uaXN0cyBmb3IgcHJvc3RhdGUgY2FuY2VyKSBvciBmaXZlIHRpbWVzIHRoZSBoYWxmLWxpZmUgb2YgdGhlIGFnZW50IChpZiBzaG9ydGVyKS48YnIgLz41LglQYWxsaWF0aXZlIHJhZGlhdGlvbiBmb3IgYm9uZSBtZXRhc3Rhc2VzIHdpdGhpbiAyIHdlZWtzIG9mIEN5Y2xlIDEgZGF5IDEuPGJyIC8%2BNi4JQWN0aXZlIG9yIHByaW9yIENOUyBtZXRhc3Rhc2VzLjxiciAvPjcuCVN1YmplY3RzIHdobyBoYXZlIHJlY2VpdmVkIHByaW9yIGltbXVuZSBjaGVja3BvaW50IHRhcmdldGluZyBkcnVncyAoZS5nLiwgYW50aSBQRDEsIGFuZCBQREwxLCBhbnRpLUtJUiwgYW50aSBDRDEzNywgZXRjKTxiciAvPjguCVN1YmplY3RzIHdpdGggdW5jb250cm9sbGVkIGh5cGVydGVuc2lvbiAoZGVmaW5lZCBhcyBlaXRoZXIgcmVzdGluZyBzeXN0b2xpYyA%2BIDE1MCBtbUhnIG9yIHJlc3RpbmcgZGlhc3RvbGljID4gMTAwIG1tSGc7IGFzIG1lYXN1cmVkIGF0IHNjcmVlbmluZyAoYXZlcmFnZSBvZiB0aHJlZSBtZWFzdXJlbWVudHMpLjxiciAvPjkuCUhpc3Rvcnkgb2YgYWxsZXJneSBhbmQvb3IgaHlwZXJzZW5zaXRpdml0eSBhbmQvb3Igb3RoZXIgY2xpbmljYWxseSBzaWduaWZpY2FudCBhZHZlcnNlIGRydWcgcmVhY3Rpb24gdG8gaGVwYXJpbiBvciBvdGhlciBhbnRpLWNvYWd1bGFudCBhZ2VudHMsIG9yIHRvIGFueSBtb25vY2xvbmFsIGFudGlib2R5LjxiciAvPjEwLglIaXN0b3J5IG9mIGltbXVuZS1tZWRpYXRlZCB0aHJvbWJvY3l0b3BhZW5pYSBvciBvdGhlciBwbGF0ZWxldCBhYm5vcm1hbGl0aWVzIG9yIG90aGVyIGhlcmVkaXRhcnkgb3IgYWNxdWlyZWQgY29hZ3Vsb3BhdGhpZXMsIG9yIGxhYm9yYXRvcnkgZXZpZGVuY2Ugb2YgYW50aS1oZXBhcmluIGFudGlib2RpZXMsIG9yIGFueSBwcmV2aW91cyBoaXN0b3J5IG9mIGhhdmluZyB0ZXN0ZWQgcG9zaXRpdmUgZm9yIGFudGktaGVwYXJpbiBhbnRpYm9kaWVzLjxiciAvPjExLglVc2Ugb2YgaGVwYXJpbiB3aXRoaW4gdHdvIHdlZWtzIHByaW9yIHRvIGVucm9sbWVudC4gUGF0aWVudHMgYWxyZWFkeSByZWNlaXZpbmcgbG93IG1vbGVjdWxhciB3ZWlnaHQgaGVwYXJpbiAoTE1XSCkgY29tcG91bmRzIHdobyBoYXZlIHRlc3RlZCBuZWdhdGl2ZSBmb3IgYW50aS1oZXBhcmluIGFudGlib2RpZXMgYXQgc2NyZWVuaW5nIG1heSBiZSBlbnJvbGxlZCBhbmQgY29udGludWUgTE1XSCB0aGVyYXB5LjxiciAvPjEyLglQYXRpZW50cyBvbiBpbW11bm9zdXBwcmVzc2l2ZSBhZ2VudHMgZXhjZXB0IGZvciBzeXN0ZW1pYyBwcmVkbmlzb25lIChvciBlcXVpdmFsZW50KSBvZiBOTVQgMTAgbWcvZGF5LjxiciAvPjEzLglIaXN0b3J5IG9mIHNldmVyZSBhbGxlcmdpYywgYW5hcGh5bGFjdGljIG9yIG90aGVyIHNpZ25pZmljYW50IGFkdmVyc2UgcmVhY3Rpb24gdG8gcmFkaW9ncmFwaGljIGNvbnRyYXN0IG1lZGlhIChpb2RpbmF0ZWQgb3Igbm9uLWlvZGluYXRlZCksIHdoaWNoIGNhbm5vdCBiZSBtYW5hZ2VkIGJ5IHByZSB0cmVhdG1lbnQgd2l0aCBhZ2VudHMgc3VjaCBhbnRpIGhpc3RhbWluZXMsIGFuZCB3aGljaCwgaW4gdGhlIG9waW5pb24gb2YgdGhlIEludmVzdGlnYXRvciwgcmVuZGVycyB0aGUgc3ViamVjdCB1bnN1aXRhYmxlIGZvciByb3V0aW5lIENUIG9yIE1SSSBzY2FubmluZy4gU3ViamVjdHMgd2hvIGFyZSBjb250cmEtaW5kaWNhdGVkIGZvciBDVCBvciBNUkkgc2Nhbm5pbmcgZm9yIG90aGVyIHJlYXNvbnMgKGUuZy4gZmVycm9tYWduZXRpYyBpbXBsYW50cywgcHJvZm91bmQgY2xhdXN0cm9waG9iaWEpLCBzaG91bGQgbm90IGJlIGVucm9sbGVkLjxiciAvPjE0LglBdXRvaW1tdW5lIGRpc29yZGVycyBvciBhbnkgb3RoZXIgcHJlLWV4aXN0aW5nIGltbXVub2RlZmljaWVuY3kgY29uZGl0aW9uIChpbmNsdWRpbmcga25vd24gSElWIGluZmVjdGlvbikuPGJyIC8%2BMTUuCVdvbWVuIHdobyBhcmUgcHJlZ25hbnQgb3IgYnJlYXN0LWZlZWRpbmcuPGJyIC8%2BMTYuCVdvbWVuIG9mIGNoaWxkLWJlYXJpbmcgcG90ZW50aWFsIGFuZCBtYWxlIHN1YmplY3RzIHdobyBhcmUgcGFydG5lcnMgb2Ygd29tZW4gb2YgY2hpbGRiZWFyaW5nIHBvdGVudGlhbCB3aG8gYXJlIHVuYWJsZSBvciB1bndpbGxpbmcgdG8gcHJhY3RpY2UgYSBoaWdobHkgZWZmZWN0aXZlIG1lYW5zIG9mIGNvbnRyYWNlcHRpb24uIEVmZmVjdGl2ZSBiaXJ0aCBjb250cm9sIGluY2x1ZGVzOiBhKSBiaXJ0aCBjb250cm9sIHBpbGxzLCBkZXBvdCBwcm9nZXN0ZXJvbmUsIG9yIGFuIGludHJhdXRlcmluZSBkZXZpY2UgcGx1cyBvbmUgYmFycmllciBtZXRob2QsIG9yIGIpIHR3byBiYXJyaWVyIG1ldGhvZHMuIEVmZmVjdGl2ZSBiYXJyaWVyIG1ldGhvZHMgYXJlOiBtYWxlIGFuZCBmZW1hbGUgY29uZG9tcywgZGlhcGhyYWdtcywgYW5kIHNwZXJtaWNpZGVzIChjcmVhbXMgb3IgZ2VscyB0aGF0IGNvbnRhaW4gYSBjaGVtaWNhbCB0byBraWxsIHNwZXJtKS4gV29tZW4gb2YgY2hpbGQtYmVhcmluZyBwb3RlbnRpYWwgbXVzdCBwcmFjdGljZSBhIGhpZ2hseSBlZmZlY3RpdmUgbWVhbnMgb2YgY29udHJhY2VwdGlvbiBmb3IgYXQgbGVhc3QgNSBtb250aHMgcG9zdCBsYXN0IHRyZWF0bWVudDsgbWVuIGZvciBhdCBsZWFzdCA3IG1vbnRocyBwb3N0IGxhc3QgdHJlYXRtZW50LjxiciAvPjE3LglBY3RpdmUgc3Vic3RhbmNlIGFidXNlLCBpbmNsdWRpbmcgYWxjb2hvbCwgd2hpY2gsIGluIHRoZSBvcGluaW9uIG9mIHRoZSBJbnZlc3RpZ2F0b3IsIHJpc2tzIGltcGFpcmluZyB0aGUgYWJpbGl0eSBvZiB0aGUgc3ViamVjdCB0byBjb21wbHkgd2l0aCB0aGUgcHJvdG9jb2wuPGJyIC8%2BMTguCVN1YmplY3RzIHdobyBoYXZlIHJlY2VpdmVkIGFuIGludmVzdGlnYXRpb25hbCBhZ2VudCB3aXRoaW4gMjggZGF5cyBwcmlvciB0byBDeWNsZSAxIERheSAxIG9yIGZpdmUgdGltZXMgdGhlIGhhbGYtbGlmZSBvZiB0aGUgaW52ZXN0aWdhdGlvbmFsIGFnZW50IChpZiBzaG9ydGVyKTsgb3IgYXJlIGN1cnJlbnRseSBwYXJ0aWNpcGF0aW5nIGluIGFueSBvdGhlciBjbGluaWNhbCBzdHVkeSBvciByZXNlYXJjaCBwcm9qZWN0IHdoaWNoIGludm9sdmVzIGFkbWluaXN0cmF0aW9uIG9mIGEgcGhhcm1hY2V1dGljYWwgcHJvZHVjdCBvciBleHBlcmltZW50YWwgdHJlYXRtZW50LCBvciB3aGljaCBpbnZvbHZlcyBwcm90b2NvbC1zcGVjaWZpZWQgbGFib3JhdG9yeSB0ZXN0cywgaW1hZ2luZyBzdHVkaWVzIG9yIG90aGVyIGludmVzdGlnYXRpb25zLiAOZXhwYW5kYWJsZS1ib3gaQ29tbWVyY2lhbCBzZWN0b3IvSW5kdXN0cnkiU2NpZW50aWEgQ2xpbmljYWwgUmVzZWFyY2ggTGltaXRlZFNMZXZlbHMgNSBhbmQgNiwgVGhlIEJyaWdodCBCdWlsZGluZywgQ29ybmVyIEhpZ2ggYW5kIEF2b2NhIFN0LCBSYW5kd2ljaywgTlNXLCAyMDMxLglBdXN0cmFsaWECTXMOTGVzbGV5IENsZW1lbnRvU2NpZW50aWEgQ2xpbmljYWwgUmVzZWFyY2gsIEJyaWdodCBCdWlsZGluZywgTGV2ZWwgNSwgQ29ybmVyIG9mIEhpZ2ggJiBBdm9jYSBTdHJlZXRzLCBSYW5kd2ljaywgU3lkbmV5IE5TVyAyMDMxCUF1c3RyYWxpYRErNjEgKDAyKSA5MzgyNTgwMCljb250YWN0dXNAc2NpZW50aWFjbGluaWNhbHJlc2VhcmNoLmNvbS5hdQZoaWRkZW5kAg8PFCsABA8WBB8FZR8DZ2RkZDwrAAQBABYCHwJlZAIRDxYCHwFoZAITD2QWBgIDDw8WAh8NZWRkAgUPDxYCHw0FJS9UcmlhbFBkZi9UcmlhbFJldmlldy0zNzM4NjkucGRmP3Q9MTdkZAIvDzwrAAQBAA8WAh8DZ2RkAg0PZBYWZg8VAhByZXN1bHRzLWhlYWRlci0xEVRyaWFsIGZyb20gQU5aQ1RSZAIBDw8WAh8NBT1%2BL1RyaWFsL1JlZ2lzdHJhdGlvbi9UcmlhbFJldmlldy5hc3B4P2lkPTM3Mzk3NSZpc1Jldmlldz10cnVlZGQCAw8PFgIfDQUlL1RyaWFsUGRmL1RyaWFsUmV2aWV3LTM3Mzk3NS5wZGY%2FdD0xN2RkAgcPDxYCHwIFBjM3Mzk3NWRkAgkPDxYCHwIFDjEyNjE3MDAxNTcyMzU4ZGQCCw8PFgIfAmVkZAINDw8WAh8CBQVGYWxzZWRkAg4PFS0QcmVzdWx0cy1oZWFkZXItMmtBIGNsaW5pY2FsIHRyaWFsIHRvIGFzY2VydGFpbiBpZiBzdW5zY3JlZW4gaW5kaWNhdG9ycyBmYWNpbGl0YXRlIHN1biBwcm90ZWN0aW9uIGJlaGF2aW91ciBpbiBoZWFsdGh5IGFkdWx0cxJOb3QgeWV0IHJlY3J1aXRpbmcHaW5mby1saQhBcHByb3ZlZAdpbmZvLWxpGFByb3NwZWN0aXZlbHkgcmVnaXN0ZXJlZDFIYXMgdGhlIHRyaWFsIGJlZW4gdXBkYXRlZCBpbiB0aGUgbGFzdCAxMiBtb250aHM%2FClVwIHRvIGRhdGUKMjIvMTEvMjAxNxJyZXN1bHRzLWhlYWRlci0xMDAIQXBwcm92ZWQKVXAgdG8gZGF0ZRNBQ1RSTjEyNjE3MDAxNTcyMzU4EDIyIE5vdmVtYmVyIDIwMTcEc2hvdxVzdW5idXJuLCBzdW4gZXhwb3N1cmUEc2hvdwlBdXN0cmFsaWEEc2hvdwpRdWVlbnNsYW5kBHNob3cEc2hvdxJOb3QgeWV0IHJlY3J1aXRpbmcQMjMgTm92ZW1iZXIgMjAxNwRzaG93CEFwcHJvdmVk0wlUaGUgZ29hbCBvZiB0aGlzIHN0dWR5IGlzIHRvIGludmVzdGlnYXRlIHdoZXRoZXIgY29tbWVyY2lhbGx5IGF2YWlsYWJsZSBVViBpbmRpY2F0aW5nIHN0aWNrZXJzIGFyZSBhY2NlcHRhYmxlIHRvIHVzZXJzIGFuZCBlbmNvdXJhZ2VzIHN1biBwcm90ZWN0aW9uLiA8YnIgLz5Db21tZXJjaWFsbHkgYXZhaWxhYmxlIGNvc21ldGljIHByb2R1Y3RzIGhhdmUgYmVlbiBkZXZlbG9wZWQgYW5kIG1hcmtldGVkIGRpcmVjdCB0byBjb25zdW1lcnMsIHdoaWNoIHVzZSBhIFVWIGxpZ2h0IGFjdGl2YXRlZCAocGhvdG9jaHJvbWljKSBpbmsgdG8gaWxsdXN0cmF0ZSB0aGF0IHN1bnNjcmVlbiBpcyBubyBsb25nZXIgcHJvdGVjdGluZyB0aGVpciBza2luIGFkZXF1YXRlbHkuIFRvIGFzc2VzcyB0aGlzIHByb2R1Y3QgYW5kIGlmIGl0IGFkZHMgYW55IGJlbmVmaXQgZm9yIGZ1dHVyZSBwdWJsaWMgaGVhbHRoIHByb2dyYW1zIHdlIGFyZSBjb25kdWN0aW5nIGEgc3R1ZHkgYXQgdGhlIEFzaGVzIENyaWNrZXQgVGVzdCBhdCB0aGUgQnJpc2JhbmUgQ3JpY2tldCBHcm91bmQsIGNvbW1vbmx5IGtub3duIGFzIHRoZSBHYWJiYSwgd2hpY2ggaXMgYSBtYWpvciBzcG9ydHMgc3RhZGl1bSBpbiBCcmlzYmFuZS4gIFRoZSBldmVudCBpcyBiZWluZyBoZWxkIE5vdmVtYmVyIDIzcmQg4oCTIE5vdmVtYmVyIDI3dGggMjAxNy4gVGhlIHJlc2VhcmNoZXJzIHdpbGwgYmUgYXQgdGhlIHZlbnVlIGVudHJ5IGFuZCB3aWxsIGFzayBpbnRlcmVzdGVkIG1lbWJlcnMgb2YgdGhlIHB1YmxpYyB0byBjb25zZW50IHRvIHBhcnRpY2lwYXRlIGJlZm9yZSB0aGV5IGVudGVyIHRoZSBzdGFkaXVtLiBQYXJ0aWNpcGFudHMgaW4gdGhlIGludGVydmVudGlvbiBncm91cCB3aWxsIGJlIGFza2VkIHRvIGNvbXBsZXRlIGEgYnJpZWYgYmFzZWxpbmUgc3VydmV5IGFuZCBiZSBwcm92aWRlZCB3aXRoIDEgc3RpY2tlciBhbmQgc3Vuc2NyZWVuLiBBZnRlciB1c2luZyB0aGUgc3RpY2tlciBhdCB0aGUgY3JpY2tldCwgcGFydGljaXBhbnRzIHdpbGwgYmUgZW1haWxlZCBhbiBldmFsdWF0aW9uIHN1cnZleSB0byBjb21wbGV0ZS4gUGFydGljaXBhbnRzIHdpbGwgaGF2ZSA3IGRheXMgYWZ0ZXIgdXNpbmcgdGhlIHN0aWNrZXIgdG8gY29tcGxldGUgdGhlIGV2YWx1YXRpb24gc3VydmV5LiAgQSBjb21wYXJhdGl2ZSBjb250cm9sIGdyb3VwIHdpbGwgYmUgcHJvdmlkZWQgd2l0aCBzdW5zY3JlZW4gb25seSAobm8gc3RpY2tlcnMpLpYBMTgrIE1hbGVzIGFuZCBGZW1hbGVzLCBhYmxlIHRvIGNvbW11bmljYXRlIGluIEVuZ2xpc2guPGJyIC8%2BUGFydGljaXBhbnRzIG11c3QgYmUgYXR0ZW5kaW5nIHRoZSBBc2hlcyBDcmlja2V0IHRlc3QgYXMgYSBzcGVjdGF0b3IgdG8gcGFydGljaXBhdGUuPGJyIC8%2BCDE4IFllYXJzCSBObyBsaW1pdBZCb3RoIG1hbGVzIGFuZCBmZW1hbGVzFUFsbGVyZ2ljIHRvIHN1bnNjcmVlbg5leHBhbmRhYmxlLWJveApVbml2ZXJzaXR5I1F1ZWVuc2xhbmQgVW5pdmVyc2l0eSBvZiBUZWNobm9sb2d5JjYwIE11c2sgQXZlbnVlLCBLZWx2aW4gR3JvdmUsIFFMRCA0MDU5CUF1c3RyYWxpYQJEcgtFbGtlIEhhY2tlcn9RdWVlbnNsYW5kIFVuaXZlcnNpdHkgb2YgVGVjaG5vbG9neSwgSW5zdGl0dXRlIG9mIEhlYWx0aCBhbmQgQmlvbWVkaWNhbCBJbm5vdmF0aW9uIChJSEJJKSwgNjAgTXVzayBBdmUsIEtlbHZpbiBHcm92ZSwgUUxELCA0MDU5CUF1c3RyYWxpYQ8rNjEgNyAzMTM4IDk2NzQWZWxrZS5oYWNrZXJAcXV0LmVkdS5hdQZoaWRkZW5kAg8PFCsABA8WBB8FZR8DZ2RkZDwrAAQBABYCHwJlZAIRDxYCHwFoZAITD2QWBgIDDw8WAh8NZWRkAgUPDxYCHw0FJS9UcmlhbFBkZi9UcmlhbFJldmlldy0zNzM5NzUucGRmP3Q9MTdkZAIvDzwrAAQBAA8WAh8DZ2RkAg8PZBYWZg8VAhByZXN1bHRzLWhlYWRlci0xEVRyaWFsIGZyb20gQU5aQ1RSZAIBDw8WAh8NBT1%2BL1RyaWFsL1JlZ2lzdHJhdGlvbi9UcmlhbFJldmlldy5hc3B4P2lkPTM3MzMzOSZpc1Jldmlldz10cnVlZGQCAw8PFgIfDQUlL1RyaWFsUGRmL1RyaWFsUmV2aWV3LTM3MzMzOS5wZGY%2FdD0xN2RkAgcPDxYCHwIFBjM3MzMzOWRkAgkPDxYCHwIFDjEyNjE3MDAxNTcxMzY5ZGQCCw8PFgIfAmVkZAINDw8WAh8CBQVGYWxzZWRkAg4PFS0QcmVzdWx0cy1oZWFkZXItMsUBRWZmZWN0IG9mIFN0ZXJlb3RhY3RpYyBhYmxhdGl2ZSBib2R5IHJhZGlvdGhlcmFweSBmb3IgVW5yZXNlY3RhYmxlIFBhbmNyZWF0aWMgY2FuY2VyIHdpdGggRW5kb3Njb3BpYyB1bHRyYXNvdW5kIGluc2VydGVkIGZpZHVjaWFsIG1hcmtlcnMgYW5kIGNvbmN1UnJlbnQgY2hlbW90aGVyYXB5IG9uIHN1cnZpdmFsIHJhdGVzOiBTVVBFUiB0cmlhbC4STm90IHlldCByZWNydWl0aW5nB2luZm8tbGkIQXBwcm92ZWQHaW5mby1saRhQcm9zcGVjdGl2ZWx5IHJlZ2lzdGVyZWQxSGFzIHRoZSB0cmlhbCBiZWVuIHVwZGF0ZWQgaW4gdGhlIGxhc3QgMTIgbW9udGhzPwpVcCB0byBkYXRlCjIyLzExLzIwMTcScmVzdWx0cy1oZWFkZXItMTAwCEFwcHJvdmVkClVwIHRvIGRhdGUTQUNUUk4xMjYxNzAwMTU3MTM2ORAyMiBOb3ZlbWJlciAyMDE3BHNob3cZUGFuY3JlYXRpYyBjYW5jZXIgdHVtb3VycwRzaG93CUF1c3RyYWxpYQRzaG93D1NvdXRoIEF1c3RyYWxpYQRzaG93BHNob3cSTm90IHlldCByZWNydWl0aW5nEDAxIERlY2VtYmVyIDIwMTcEc2hvdwhBcHByb3ZlZPwOVGhpcyBzdHVkeSB3aWxsIGRldGVybWluZSB0aGUgZWZmZWN0IG9mIHN0ZXJlb3RhY3RpYyBhYmxhdGl2ZSBib2R5IHJhZGlvdGhlcmFweSAoU0JSVCkgd2l0aCBlbmRvc2NvcGljIHVsdHJhc291bmQgaW5zZXJ0ZWQgZmlkdWNpYWwgbWFya2VycyBmb3IgdW5yZXNlY3RhYmxlIHBhbmNyZWF0aWMgY2FuY2VyLiA8YnIgLz48YnIgLz5XaG8gaXMgaXQgZm9yPzxiciAvPllvdSBtYXkgYmUgZWxpZ2libGUgdG8gam9pbiB0aGlzIHN0dWR5IGlmIHlvdSBhcmUgYWdlZCAxOCB5ZWFycyBvciBhYm92ZSwgaGF2ZSBhZGVub2NhcmNpbm9tYSBvZiB0aGUgcGFuY3JlYXMgd2hpY2ggaGFzIGJlZW4gZGVlbWVkIGlub3BlcmFibGUgYW5kIGFyZSBwbGFubmluZyBmb3IgdHJlYXRtZW50IHdpdGggY29tYmluZWQgY2hlbW90aGVyYXB5LjxiciAvPjxiciAvPlN0dWR5IGRldGFpbHM8YnIgLz5QYXJ0aWNpcGFudHMgaW4gdGhpcyBzdHVkeSBhcmUgcmFuZG9tbHkgYWxsb2NhdGVkIChieSBjaGFuY2UpIHRvIG9uZSBvZiB0d28gZ3JvdXBzLiBQYXJ0aWNpcGFudHMgaW4gb25lIGdyb3VwIHdpbGwgcmVjZWl2ZSBjaGVtb3RoZXJhcHkgb25seSBJbiB0aGlzIHRyaWFsLCBwYXRpZW50cyByZWNlaXZlIGEgRk9MRklSSU5PWCBiYXNlZCByZWdpbWUgZ2l2ZW4gb3ZlciBhIDQgbW9udGggcGVyaW9kIChveGFsaXBsYXRpbiwgaXJpbm90ZWNhbiwgbGV1Y292b3JpbiwgZmx1b3JvdXJhY2lsIGV2ZXJ5IDIgd2Vla3MsIHRvdGFsbGluZyA4IGN5Y2xlcykuIFdoaWxlIHBhcnRpY2lwYW50cyBpbiB0aGUgb3RoZXIgZ3JvdXAgd2lsbCByZWNlaXZlIGNoZW1vdGhlcmFweSBvZiBGb2xmaXJpbm94IGJhc2VkIHJlZ2ltZSBhbmQgdGhleSB3aWxsIGFsc28gcmVjZWl2ZSAyIHdlZWtzIG9mIENhcGVjaXRhYmluZSBhcyBhIHJhZGlvLXNlbnNpdGl6ZXIgKDg1MCBtZy9tMiB0d2ljZSBkYWlseSBmb3IgNSBkYXlzIG9mIGVhY2ggd2VlayAoTW9uZGF5IHRvIEZyaWRheSkpLCBwcmlvciB0byBmaWR1Y2lhbCBndWlkZWQgU0JSVCAgKDI1R3kgaW4gNSBmcmFjdGlvbnMgZGVsaXZlcmVkIHRvIGdyb3NzIHR1bW91ciBhbmQgc2ltdWx0YW5lb3VzIGludGVncmF0ZWQgYm9vc3Qgb2YgMzVHeSBpbiA1IGZyYWN0aW9ucyB0byByZWdpb24gb2YgdmVzc2VsIGVuY2FzZW1lbnQpLiAgPGJyIC8%2BUGFydGljaXBhbnRzIHdpbGwgYmUgZm9sbG93ZWQtdXAgZm9yIHVwIHRvIDEyIG1vbnRocyBwb3N0LWNvbXBsZXRpb24gb2YgdHJlYXRtZW50IHRvIGRldGVybWluZSBzdXJ2aXZhbCByYXRlcywgcmVzZWN0YWJpbGl0eSByYXRlcywgdGVjaG5pY2FsIHN1Y2Nlc3Mgb2YgZmlkdWNpYWwgcGxhY2VtZW50LCBwYWluIGFuZCBxdWFsaXR5IG9mIGxpZmUuPGJyIC8%2BPGJyIC8%2BVGhlIHVzZSBvZiByYWRpb3RoZXJhcHksIGVpdGhlciBhbG9uZSBvciBpbiBjb21iaW5lZCB3aXRoIGNoZW1vdGhlcmFweSwgaGFzIGJlZW4gZXZhbHVhdGVkIGluIHRoZSBwYXN0IGJ1dCBldmlkZW5jZSBpcyBsaW1pdGVkIGR1ZSB0aGUgbGFjayBvZiBhYmlsaXR5IHRvIGRlbGl2ZXIgdGhlIHJhZGlhdGlvbiB0byB0aGUgcGFuY3JlYXRpYyBtYXNzIHdpdGhvdXQgY2F1c2luZyBhZHZlcnNlIGVmZmVjdHMgdG8gc3Vycm91bmRpbmcgb3JnYW5zLiAgT25lIG9mIHRoZSBhcHByb2FjaGVzIHRvIG92ZXJjb21lIHRoaXMgcHJvYmxlbSBpcyB0byB1c2UgbWFya2VyLWd1aWRlZCBzdGVyZW90YWN0aWMgcmFkaW90aGVyYXB5LCB3aGljaCBpcyBpbmNyZWFzaW5nbHkgYXBwbGllZCBpbiB0aGUgZmllbGQgb2YgcmFkaWF0aW9uIG9uY29sb2d5LiAgVGhlIG1ham9yaXR5IG9mIHN0dWRpZXMgaGF2ZSBsb29rZWQgYXQgdGVjaG5pY2FsIHN1Y2Nlc3MgYW5kIHNhZmV0eSByYXRoZXIgdGhhbiBwYXRpZW50IHN1cnZpdmFsIGFuZCBxdWFsaXR5IG9mIGxpZmUuICA8YnIgLz7VCTEuIEhpc3RvbG9naWNhbGx5IG9yIGN5dG9sb2dpY2FsbHkgY29uZmlybWVkIGFkZW5vY2FyY2lub21hIG9mIHRoZSBwYW5jcmVhcy48YnIgLz48YnIgLz4yLiAgTG9jYWxseSBhZHZhbmNlZCBkaXNlYXNlLCB3aGljaCBpcyBkZWVtZWQ6PGJyIC8%2BYSkgVW5yZXNlY3RhYmxlOyBvcjxiciAvPmIpIEJvcmRlcmxpbmUgcmVzZWN0YWJsZSAsIHdoaWNoIGluY2x1ZGVzIHRoZXNlIHR1bW91ciBjaGFyYWN0ZXJpc3RpY3M6PGJyIC8%2BKGkpIC0gaW52b2x2ZW1lbnQgb2Ygc3VwZXJpb3IgbWVzZW50ZXJpYyBvciBwb3J0YWwgdmVpbiBidXQgd2l0aCBzdWZmaWNpZW50IHZlc3NlbCBwcm94aW1hbCBhbmQgZGlzdGFsIHRvIHRoZSBhcmVhIG9mIHZlc3NlbCBpbnZvbHZlbWVudCAod2hpY2ggYWxsb3dzIHNhZmUgcmVzZWN0aW9uIGFuZCByZWNvbnN0cnVjdGlvbik8YnIgLz4oaWkpIC0gZ2FzdHJvZHVvZGVuYWwgYXJ0ZXJ5IGVuY2FzZW1lbnQgdXAgdG8gdGhlIGhlcGF0aWMgYXJ0ZXJ5IGFuZCBpbnZvbHZlbWVudCBvZiB0aGUgaGVwYXRpYyBhcnRlcnkgd2l0aG91dCBleHRlbnNpb24gdG8gdGhlIGNlbGlhYyBheGlzPGJyIC8%2BKGlpaSkgLSBzdXBlcmlvciBtZXNlbnRlcmljIGFydGVyeSBpbnZvbHZlbWVudCBsZXNzIHRoYW4gMTgwIGRlZ3JlZXM8YnIgLz48YnIgLz4zLiBQYXRpZW50cyBzaG91bGQgaGF2ZSBhIHByb2plY3RlZCBsaWZlIGV4cGVjdGFuY3kgb2YgYXQgbGVhc3QgNiB3ZWVrczxiciAvPjxiciAvPjQuIEVDT0cgcGVyZm9ybWFuY2Ugc3RhdHVzIGxlc3MgdGhhbiBvciBlcXVhbCB0byAyPGJyIC8%2BPGJyIC8%2BNS4gMTggeWVhcnMgb2xkIG9yIG9sZGVyPGJyIC8%2BPGJyIC8%2BNi4gTWVhc3VyYWJsZSBkaXNlYXNlIGFzIGRlZmluZWQgYnkgUkVDSVNUIDEuMS48YnIgLz48YnIgLz43LiBTZXJ1bSBiaWxpcnViaW4gbGVzcyB0aGFuIDMwIMK1bW9sL0wsIGFmdGVyIHN1Y2Nlc3NmdWwgYmlsaWFyeSBkZWNvbXByZXNzaW9uIHdpdGggc3RlbnRzPGJyIC8%2BPGJyIC8%2BOC4gQWRlcXVhdGUgYm9uZSBtYXJyb3cgZnVuY3Rpb24sIFdDQyBncmVhdGVyIHRoYW4gMyB4IDEwXjkvTCwgcGxhdGVsZXRzIGdyZWF0ZXIgdGhhbjEwMCB4IDEwXjkvTDxiciAvPjxiciAvPjkuIFdyaXR0ZW4gaW5mb3JtZWQgY29uc2VudDxiciAvPjxiciAvPjEwLiBUaG9zZSBkZWVtZWQgZm9yIGNvbWJpbmVkIGNoZW1vcmFkaW90aGVyYXB5IGFzIHBlciBtdWx0aS1kaXNjaXBsaW5hcnkgdGVhbSBjb25zZW5zdXMIMTggWWVhcnMJIE5vIGxpbWl0FkJvdGggbWFsZXMgYW5kIGZlbWFsZXOGBTEuIE1ldGFzdGF0aWMgZGlzZWFzZSBmcm9tIHBhbmNyZWF0aWMgY2FuY2VyPGJyIC8%2BPGJyIC8%2BMi4gUHJpb3IgY2hlbW90aGVyYXB5IG9yIHJhZGlvdGhlcmFweTxiciAvPjxiciAvPjMuIEhpc3Rvcnkgb2Ygb3RoZXIgbWFsaWduYW50IGRpc2Vhc2VzIG90aGVyIHRoYW4gbm9uLW1lbGFub21hdG91cyBza2luIGNhbmNlciBvciBpbi1zaXR1IGNhcmNpbm9tYSBvZiB0aGUgdXRlcmluZSBjZXJ2aXg8YnIgLz48YnIgLz40LiBDbGluaWNhbCBldmlkZW5jZSBvZiB1bmNvbnRyb2xsZWQgYW5naW5hIHBlY3RvcmlzLCBjYXJkaWFjIGZhaWx1cmUsIGNsaW5pY2FsbHkgc2lnbmlmaWNhbnQgY2FyZGlhYyBhcnJoeXRobWlhLCBvciBvdGhlciBzZXJpb3VzIHVuY29udHJvbGxlZCBtZWRpY2FsIGNvbmRpdGlvbjxiciAvPjxiciAvPjUuIFByZWduYW50IG9yIGxhY3RhdGluZyAoYW55IHdvbWFuIG9mIGNoaWxkYmVhcmluZyBwb3RlbnRpYWwgbXVzdCBoYXZlIGEgcHJlZ25hbmN5IHRlc3QgcHJpb3IgdG8gcmFuZG9taXphdGlvbiBhbmQgbXVzdCB0YWtlIGFkZXF1YXRlIHByZWNhdXRpb25zIHRvIHByZXZlbnQgcHJlZ25hbmN5IGR1cmluZyB0cmVhdG1lbnQpPGJyIC8%2BPGJyIC8%2BNi4gVHVtb3VyIHNpemUgZ3JlYXRlciB0aGFuIDc1bW08YnIgLz4OZXhwYW5kYWJsZS1ib3gISG9zcGl0YWwXUm95YWwgQWRlbGFpZGUgSG9zcGl0YWxuRGVwYXJ0bWVudCBvZiBHYXN0cm9lbnRlcm9sb2d5IGFuZCBIZXBhdG9sb2d5LDxiciAvPlJveWFsIEFkZWxhaWRlIEhvc3BpdGFsLCBOb3J0aCBUZXJyYWNlLCBBZGVsYWlkZSwgU0EsIDUwMDAJQXVzdHJhbGlhAk1zD1JvbWluYSBTYWZhZWlhbm5EZXBhcnRtZW50IG9mIEdhc3Ryb2VudGVyb2xvZ3kgYW5kIEhlcGF0b2xvZ3ksPGJyIC8%2BUm95YWwgQWRlbGFpZGUgSG9zcGl0YWwsIE5vcnRoIFRlcnJhY2UsIEFkZWxhaWRlLCBTQSwgNTAwMAlBdXN0cmFsaWEPKzYxIDggODIyMiA1MjE0GXJvbWluYS5zYWZhZWlhbkBzYS5nb3YuYXUGaGlkZGVuZAIPDxQrAAQPFgQfBWUfA2dkZGQ8KwAEAQAWAh8CZWQCEQ8WAh8BaGQCEw9kFgYCAw8PFgIfDWVkZAIFDw8WAh8NBSUvVHJpYWxQZGYvVHJpYWxSZXZpZXctMzczMzM5LnBkZj90PTE3ZGQCLw88KwAEAQAPFgIfA2dkZAIRD2QWFmYPFQIQcmVzdWx0cy1oZWFkZXItMRFUcmlhbCBmcm9tIEFOWkNUUmQCAQ8PFgIfDQU9fi9UcmlhbC9SZWdpc3RyYXRpb24vVHJpYWxSZXZpZXcuYXNweD9pZD0zNzM5MTImaXNSZXZpZXc9dHJ1ZWRkAgMPDxYCHw0FJS9UcmlhbFBkZi9UcmlhbFJldmlldy0zNzM5MTIucGRmP3Q9MTdkZAIHDw8WAh8CBQYzNzM5MTJkZAIJDw8WAh8CBQ4xMjYxNzAwMTU3MDM3MGRkAgsPDxYCHwJlZGQCDQ8PFgIfAgUFRmFsc2VkZAIODxUtEHJlc3VsdHMtaGVhZGVyLTK1AUF0IHRoZWlyIGZpbmdlcnRpcHM6IFRoZSBlZmZlY3RzIG9mIGNoaWxkLWxlZCBkaXN0cmFjdGlvbiB1c2luZyBhIHRhYmxldCBjb21wdXRlciBvbiBjaGlsZHJlbuKAmXMgZGlzdHJlc3MgYW5kIHBhaW4gZHVyaW5nIHBhaW5mdWwgbWVkaWNhbCBwcm9jZWR1cmVzOyBhIHJhbmRvbWlzZWQgY29udHJvbGxlZCB0cmlhbC4KUmVjcnVpdGluZwdpbmZvLWxpCEFwcHJvdmVkB2luZm8tbGkaUmV0cm9zcGVjdGl2ZWx5IHJlZ2lzdGVyZWQxSGFzIHRoZSB0cmlhbCBiZWVuIHVwZGF0ZWQgaW4gdGhlIGxhc3QgMTIgbW9udGhzPwpVcCB0byBkYXRlCjIyLzExLzIwMTcScmVzdWx0cy1oZWFkZXItMTAwCEFwcHJvdmVkClVwIHRvIGRhdGUTQUNUUk4xMjYxNzAwMTU3MDM3MBAyMiBOb3ZlbWJlciAyMDE3BHNob3cXRGlzdHJlc3MsIFBhaW4sIEFueGlldHkEc2hvdwlBdXN0cmFsaWEEc2hvdxFXZXN0ZXJuIEF1c3RyYWxpYQRzaG93BHNob3cKUmVjcnVpdGluZwNuL2EEc2hvdwhBcHByb3ZlZLIJTWFuYWdpbmcgcGFpbiBhbmQgZGlzdHJlc3MgZm9yIGhvc3BpdGFsaXNlZCBjaGlsZHJlbiB1bmRlcmdvaW5nIG1lZGljYWwgcHJvY2VkdXJlcyBpcyB2ZXJ5IGltcG9ydGFudCBhcyBpdCByZWR1Y2VzIHRoZSBvY2N1cnJlbmNlIG9mIHBhZWRpYXRyaWMgbWVkaWNhbCB0cmF1bWF0aWMgc3RyZXNzIGFuZCBvdGhlciBzaWduaWZpY2FudCBuZWdhdGl2ZSBvdXRjb21lcyAoTGluZGVrZSBldCBhbC4sIDIwMDYpLiBFdmlkZW5jZSBoYXMgc2hvd24gdGhhdCBub24tcGhhcm1hY29sb2dpY2FsIGludGVydmVudGlvbnMgc3VjaCBhcyBkaXN0cmFjdGlvbiBhcmUgYSBoaWdobHkgc3VjY2Vzc2Z1bCBtZXRob2QgaW4gcmVkdWNpbmcgZGlzdHJlc3MgYW5kIHBhaW4gaW4gYWR1bHQgYW5kIHBhZWRpYXRyaWMgcGF0aWVudHMuIEF0IHByZXNlbnQsIHBhZWRpYXRyaWMgcGF0aWVudHMgdW5kZXJnb2luZyBwYWluZnVsIHByb2NlZHVyZXMgZG8gbm90IHJvdXRpbmVseSByZWNlaXZlIGRpc3RyYWN0aW9uIHRoZXJhcHkgZHVlIHRvIGxpbWl0YXRpb25zIHN1Y2ggYXMgdGltZS4gV2l0aCBtb2Rlcm4gdGVjaG5vbG9neSByYXBpZGx5IGV2b2x2aW5nLCByZXNlYXJjaCBkZXNpZ25lZCB0byBhc3Nlc3MgdGhlIGVmZmVjdGl2ZW5lc3Mgb2YgY2hpbGQtbGVkIGRpc3RyYWN0aW9uIHVzaW5nIGEgdGFibGV0IGNvbXB1dGVyIGluIHJlZHVjaW5nIGRpc3RyZXNzIGFuZCBwYWluIGluIGNoaWxkcmVuIHVuZGVyZ29pbmcgcGFpbmZ1bCBtZWRpY2FsIHByb2NlZHVyZXMgaXMgZXNzZW50aWFsLiBUaHJvdWdoIGV4cGxvcmluZyB0aGlzLCBhIHZhbHVhYmxlIGNvbnRyaWJ1dGlvbiBtYXkgcHJvbW90ZSB0aGUgdGhlcmFwZXV0aWMgcHJhY3RpY2UgYW5kIGltcHJvdmUgaGVhbHRoIGNhcmUgb3V0Y29tZXMgZm9yIGNoaWxkcmVuIGFuZCB0aGVpciBmYW1pbGllcy4gVGhlIHJlc3VsdHMgb2YgdGhpcyBzdHVkeSB3aWxsIGFzc2lzdCBpbiBkZXRlcm1pbmluZyB3aGV0aGVyIGNoaWxkLWxlZCBkaXN0cmFjdGlvbiB0aHJvdWdoIHRoZSB1c2Ugb2YgYSB0YWJsZXQgY29tcHV0ZXIgKEFwcGxlIGlQYWQpIHJlZHVjZXMgZGlzdHJlc3MsIHBhaW4gYW5kIHByb2NlZHVyYWwgdGltZSBieSBpbmNvcnBvcmF0aW5nIGEgd2lkZSByYW5nZSBvZiBkaXN0cmFjdGlvbiBtZXRob2RzIGluIG9uZSBjb252ZW5pZW50IGFuZCBjb3N0LWVmZmVjdGl2ZSBkZXZpY2UuICD5AlBhcnRpY2lwYW50cyB3aWxsIGJlIHlvdW5nIGNoaWxkcmVuIGFnZWQgYmV0d2VlbiAxOCBtb250aHMgdXAgdG8gdGhlaXIgMTN0aCBiaXJ0aGRheSByZXF1aXJpbmcgaW50cmF2ZW5vdXMgY2FubnVsYXRpb24uPGJyIC8%2BLURldmVsb3BtZW50YWxseSBhcHByb3ByaWF0ZSB0byBsZWFkIHRoZSBkaXN0cmFjdGlvbjsgYW5kIDxiciAvPi0gbXVzdCBoYXZlIHBhcnRpY2lwYW50IGFzc2VudCB3aGVyZSBzdWl0YWJsZSBhbmQgcGFyZW50YWwvZ3VhcmRpYW4gY29uc2VudC4gPGJyIC8%2BLSBBbGwgY2hpbGRyZW4gbXVzdCBoYXZlIHRvcGljYWwgYW5hZXN0aGV0aWMgY3JlYW0gKEVNTEEpIGFwcGxpZWQgZm9yIDYwIG1pbnV0ZXMgcHJpb3IgdG8gdGhlIHByb2NlZHVyZS4gCTE4IE1vbnRocwgxMyBZZWFycxZCb3RoIG1hbGVzIGFuZCBmZW1hbGVzrgMtIENoaWxkcmVuIHdobyByZXF1aXJlIG9yIGhhdmUgcmVjZWl2ZWQgc2VkYXRpb247IDxiciAvPi0gQ2hpbGRyZW4gd2hvIGhhdmUgdGFrZW4gc3Rlcm9pZHMgb3IgQURIRCBtZWRpY2F0aW9ucyB3aXRoaW4gdGhlIGxhc3QgbW9udGg7IDxiciAvPi0gQ2hpbGRyZW4gd2hlcmUgcmVzcG9uc2UgdG8gcGFpbmZ1bCBzdGltdWxpIG1heWJlIGFsdGVyZWQgYnkgbmV1cm9tdXNjdWxhciBkaXNlYXNlIChlLmcuOiBDZXJlYnJhbCBwYWxzeSk7IDxiciAvPi0gQ2hpbGRyZW4gd2l0aG91dCB0b3BpY2FsIGFuYWVzdGhldGljIGNyZWFtOyA8YnIgLz4tIE5vbi1FbmdsaXNoIHNwZWFraW5nIGNoaWxkcmVuIGFuZC9vciBwYXJlbnRzL2d1YXJkaWFuczsgYW5kIDxiciAvPi0gQ2hpbGRyZW4gd2hvIGhhdmUgYmVlbiBkaWFnbm9zZWQgd2l0aCBhbnhpZXR5IG9yIEFESEQuDmV4cGFuZGFibGUtYm94CEhvc3BpdGFsJ1ByaW5jZXNzIE1hcmdhcmV0IEhvc3BpdGFsIGZvciBDaGlsZHJlbiFSb2JlcnRzIFJkLCA8YnIgLz5TdWJpYWNvIFdBIDYwMDgJQXVzdHJhbGlhBE1pc3MMSmFkZSBGZXJ1bGxvjwJQcmluY2VzcyBNYXJnYXJldCBIb3NwaXRhbCBmb3IgQ2hpbGRyZW48YnIgLz5OdXJzaW5nIFJlc2VhcmNoIERlcGFydG1lbnQsPGJyIC8%2BUm9iZXJ0cyBSb2FkLDxiciAvPlN1YmlhY28sIFdBIDYwMDguIDxiciAvPjxiciAvPkN1cnRpbiBVbml2ZXJzaXR5PGJyIC8%2BTnVyc2luZywgTWlkd2lmZXJ5IGFuZCBQYXJhbWVkaWNpbmUgPGJyIC8%2BYy9vIFByb2Zlc3NvciBHYXZpbiBMZXNsaWU8YnIgLz5HUE8gVTE5ODcgPGJyIC8%2BUGVydGgsIFdlc3Rlcm4gQXVzdHJhbGlhIDYwMTIuCUF1c3RyYWxpYQwrNjE0MjM5ODg5NTQaamFkZS5mZXJ1bGxvQGN1cnRpbi5lZHUuYXUGaGlkZGVuZAIPDxQrAAQPFgQfBWUfA2dkZGQ8KwAEAQAWAh8CZWQCEQ8WAh8BaGQCEw9kFgYCAw8PFgIfDWVkZAIFDw8WAh8NBSUvVHJpYWxQZGYvVHJpYWxSZXZpZXctMzczOTEyLnBkZj90PTE3ZGQCLw88KwAEAQAPFgIfA2dkZAITD2QWFmYPFQIQcmVzdWx0cy1oZWFkZXItMRFUcmlhbCBmcm9tIEFOWkNUUmQCAQ8PFgIfDQU9fi9UcmlhbC9SZWdpc3RyYXRpb24vVHJpYWxSZXZpZXcuYXNweD9pZD0zNzM5NjMmaXNSZXZpZXc9dHJ1ZWRkAgMPDxYCHw0FJS9UcmlhbFBkZi9UcmlhbFJldmlldy0zNzM5NjMucGRmP3Q9MTdkZAIHDw8WAh8CBQYzNzM5NjNkZAIJDw8WAh8CBQ4xMjYxNzAwMTU2OTM5MmRkAgsPDxYCHwJlZGQCDQ8PFgIfAgUFRmFsc2VkZAIODxUtEHJlc3VsdHMtaGVhZGVyLTLPAVBvaW50IG9mIGNhcmUgdWx0cmFzb3VuZC1ndWlkZWQgY2FubnVsYXRpb24gdmVyc3VzIHN0YW5kYXJkIGNhbm51bGF0aW9uIGluIGhhZW1vZGlhbHlzaXMuIEFmZmVjdHMgb24gbmVlZGxlIHBsYWNlbWVudCBhbmQgY2FubnVsYXRpb24gc3VjY2Vzcy4gQSBjb250cm9sbGVkIHJhbmRvbSBvcmRlciBjcm9zc292ZXIgcGlsb3QgYW5kIGZlYXNpYmlsaXR5IHN0dWR5LhJOb3QgeWV0IHJlY3J1aXRpbmcHaW5mby1saQhBcHByb3ZlZAdpbmZvLWxpGFByb3NwZWN0aXZlbHkgcmVnaXN0ZXJlZDFIYXMgdGhlIHRyaWFsIGJlZW4gdXBkYXRlZCBpbiB0aGUgbGFzdCAxMiBtb250aHM%2FClVwIHRvIGRhdGUKMjEvMTEvMjAxNxJyZXN1bHRzLWhlYWRlci0xMDAIQXBwcm92ZWQKVXAgdG8gZGF0ZRNBQ1RSTjEyNjE3MDAxNTY5MzkyEDIxIE5vdmVtYmVyIDIwMTcEc2hvdz1lbmQgc3RhZ2UgcmVuYWwgZmFpbHVyZSwgaGFlbW9kaWFseXNpcywgQXJ0ZXJpb3Zlbm91cyBmaXN0dWxhBHNob3cJQXVzdHJhbGlhBHNob3cIVmljdG9yaWEEc2hvdwRzaG93Ek5vdCB5ZXQgcmVjcnVpdGluZxAwMSBEZWNlbWJlciAyMDE3BHNob3cIQXBwcm92ZWS4A0NvbXBhcmluZyB0aGUgdXNlIG9mIHVsdHJhc291bmQgZm9yIGNhbm51bGF0aW9uIG9mIGFydGVyaW92ZW5vdXMgZmlzdHVsYSBmb3IgaGFlbW9kaWFseXNpcyBjb21wYXJlZCB0byB0aGUgc3RhbmRhcmQgcHJhY3RpY2Ugb2YgY2FubnVsYXRpbmcgJ2JsaW5kJyAod2l0aG91dCBhc3Npc3RhbmNlIG9mIHVsdHJhc291bmQpIGFuZCBtZWFzdXJpbmcgdGhlIG91dGNvbWVzIGluIHJlbGF0aW9uIHRvIHRoZSBhbW91bnQgb2Ygc3VjY2VzcyB3aXRoIGVhY2ggY29uZGl0aW9uIGFuZCB0aGUgbmVlZGxlIHRpcCBwb3NpdGlvbiBpbnNpZGUgdGhlIHZlc3NlbC4gPGJyIC8%2BPGJyIC8%2BQWxsIG51cnNlcyBpbiB0aGUgc3R1ZHkgd2lsbCBjYW5udWxhdGUgYWxsIHBhdGllbnRzIHdpdGggYm90aCB1bHRyYXNvdW5kIGd1aWRlZCBjYW5udWxhdGlvbiBhbmQgYmxpbmQgY2FubnVsYXRpb24u%2FAFQYXRpZW50cyByZWNlaXZpbmcgaGVtb2RpYWx5c2lzIHRocmVlIG9yIG1vcmUgdGltZXMgcGVyIHdlZWsgdmlhIGEgbmF0aXZlIGFydHJpb3Zlbm91cyBmaXN0dWxhPGJyIC8%2BVGhlIGFydGVyaW92ZW5vdXMgZmlzdHVsYSBtdXN0IGJlID4gdGhhbiAyIG1vbnRocyBvbGQgPGJyIC8%2BUGF0aWVudHMgY2FubnVsYXRlZCB3aXRoIG1ldGFsIG5lZWRsZXMuIDxiciAvPjxiciAvPk51cnNlcyBlbXBsb3llZCBmdWxsIG9yIHBhcnQgdGltZSA8YnIgLz4IMTggWWVhcnMJIE5vIGxpbWl0FkJvdGggbWFsZXMgYW5kIGZlbWFsZXP9AVBhdGllbnRzIHdobyBoYXZlIGFydGVyaW92ZW5vdXMgZmlzdHVsYSA8IDIgbW9udGhzIG9sZDxiciAvPlBhdGllbnRzIHVuZGVydGFraW5nIGhhZW1vZGlhbHlzaXMgd2l0aCBhbiBhcnRlcmlvdmVub3VzIGdyYWZ0IG9yIGNlbnRyYWwgdmVub3VzIGNhdGhldGVyPGJyIC8%2BUGF0aWVudHMgd2hvIGNhbm5vdCBnaXZlIGNvbnNlbnQ8YnIgLz5OdXJzZXMgd2hvIGhhdmUgbm90IGNvbXBsZXRlZCBpbml0aWFsIGhhZW1vZGlhbHlzaXMgdHJhaW5pbmcOZXhwYW5kYWJsZS1ib3gKVW5pdmVyc2l0eRFEZWFraW4gVW5pdmVyc2l0eUJXYXRlcmZyb250IGNhbXB1czxiciAvPjEgR2hlcmluZ2hhcCBzdCBHZWVsb25nPGJyIC8%2BVmljdG9yaWEsIDMyMjAJQXVzdHJhbGlhA01ycw1Nb25pY2EgU2Nob2NoWURlYWtpbiBVbml2ZXJzaXR5PGJyIC8%2BV2F0ZXJmcm9udCBDYW1wdXM8YnIgLz4xIEdoZXJpbmdoYXAgc3Q8YnIgLz5HZWVsb25nLCBWaWN0b3JpYSAzMjIwCUF1c3RyYWxpYQ4rNjEgMyA1MjI3ODM0Nxttb25pY2Euc2Nob2NoQGRlYWtpbi5lZHUuYXUGaGlkZGVuZAIPDxQrAAQPFgQfBWUfA2dkZGQ8KwAEAQAWAh8CZWQCEQ8WAh8BaGQCEw9kFgYCAw8PFgIfDWVkZAIFDw8WAh8NBSUvVHJpYWxQZGYvVHJpYWxSZXZpZXctMzczOTYzLnBkZj90PTE3ZGQCLw88KwAEAQAPFgIfA2dkZAIVD2QWFmYPFQIQcmVzdWx0cy1oZWFkZXItMRFUcmlhbCBmcm9tIEFOWkNUUmQCAQ8PFgIfDQU9fi9UcmlhbC9SZWdpc3RyYXRpb24vVHJpYWxSZXZpZXcuYXNweD9pZD0zNzM5NTMmaXNSZXZpZXc9dHJ1ZWRkAgMPDxYCHw0FJS9UcmlhbFBkZi9UcmlhbFJldmlldy0zNzM5NTMucGRmP3Q9MTdkZAIHDw8WAh8CBQYzNzM5NTNkZAIJDw8WAh8CBQ4xMjYxNzAwMTU2ODMwM2RkAgsPDxYCHwJlZGQCDQ8PFgIfAgUFRmFsc2VkZAIODxUtEHJlc3VsdHMtaGVhZGVyLTLIAUV2YWx1YXRpb24gb2YgdGhlIFByZXNjaG9vbCBTaXR1YXRpb25hbCBTZWxmLVJlZ3VsYXRpb24gVG9vbGtpdCAoUFJTSVNUKSBQcm9ncmFtIGZvciBTdXBwb3J0aW5nIENoaWxkcmVu4oCZcyBFYXJseSBTZWxmLVJlZ3VsYXRpb24gRGV2ZWxvcG1lbnQ6IFN0dWR5IHByb3RvY29sIGZvciBhIGNsdXN0ZXIgcmFuZG9taXplZCBjb250cm9sbGVkIHRyaWFsEk5vdCB5ZXQgcmVjcnVpdGluZwdpbmZvLWxpCEFwcHJvdmVkB2luZm8tbGkYUHJvc3BlY3RpdmVseSByZWdpc3RlcmVkMUhhcyB0aGUgdHJpYWwgYmVlbiB1cGRhdGVkIGluIHRoZSBsYXN0IDEyIG1vbnRocz8KVXAgdG8gZGF0ZQoyMS8xMS8yMDE3EnJlc3VsdHMtaGVhZGVyLTEwMAhBcHByb3ZlZApVcCB0byBkYXRlE0FDVFJOMTI2MTcwMDE1NjgzMDMQMjEgTm92ZW1iZXIgMjAxNwRzaG93KEVhcmx5IGNoaWxkIGRldmVsb3BtZW50LCBTZWxmLXJlZ3VsYXRpb24Ec2hvdwlBdXN0cmFsaWEEc2hvdw9OZXcgU291dGggV2FsZXMEc2hvdwRzaG93Ek5vdCB5ZXQgcmVjcnVpdGluZw8yMiBKYW51YXJ5IDIwMTgEc2hvdwhBcHByb3ZlZMgHVXNpbmcgQ29tbXVuaXR5LUJhc2VkIFBhcnRpY2lwYXRvcnkgUmVzZWFyY2ggKENCUFIpIG1ldGhvZHMsIHRoZSBjb21wbGV0ZWQgZmlyc3QgUGhhc2Ugb2YgdGhlIEVhcmx5IFN0YXJ0IHRvIFNlbGYtUmVndWxhdGlvbiBwcm9qZWN0IGVuZ2FnZWQga2V5IHN0YWtlaG9sZGVycyBpbiBmb3JtYXRpdmUgcmVzZWFyY2ggKFBoYXNlIDE7IEhFMjAxNy8wMjkpIHRvIGluZm9ybSB0aGUgZGVzaWduIGFuZCBwaWxvdGluZyBvZiBhIHNlbGYtcmVndWxhdGlvbiBpbnRlcnZlbnRpb24gKFBoYXNlIDI7IEhFMjAxNy8zNDcpLiAgVGhpcyBuZXh0IHBoYXNlIGludm9sdmVzIGltcGxlbWVudGF0aW9uIGFuZCBldmFsdWF0aW9uIG9mIG91ciBzZWxmLXJlZ3VsYXRpb24gcHJvZ3JhbSAoUGhhc2UgMykuIFBoYXNlIDMgd2lsbCBpbnZvbHZlIHJlY3J1aXRpbmcgNTAgcHJlLXNjaG9vbCBjZW50cmVzLCBoYWxmIG9mIHdoaWNoIHdpbGwgaW1wbGVtZW50IHRoZSBQUlNJU1Qgc2VsZi1yZWd1bGF0aW9uIHByb2dyYW0gd2hpbGUgdGhlIG90aGVyIGhhbGYgY29udGludWVzIHdpdGggbm9ybWFsIHByYWN0aWNlLiBEYXRhIG9uIGNoaWxkcmVu4oCZcyBzZWxmLXJlZ3VsYXRpb24sIGFzIHdlbGwgYXMgcmVsYXRlZCBhYmlsaXRpZXMsIHdpbGwgYmUgY29sbGVjdGVkIGZyb20gcGFydGljaXBhdGluZyBjaGlsZHJlbiBiZWZvcmUgYW5kIGFmdGVyIGltcGxlbWVudGF0aW9uIG9mIHRoZSBwcm9ncmFtIHRvIGV2YWx1YXRlIGl0cyBpbXBhY3QuIERhdGEgd2lsbCBhbHNvIGJlIGNvbGxlY3RlZCBmcm9tIHBhcnRpY2lwYXRpbmcgZWR1Y2F0b3JzIHJlZ2FyZGluZyB0aGVpciBwZXJjZWl2ZWQgc2VsZi1yZWd1bGF0b3J5IGtub3dsZWRnZSwgYXR0aXR1ZGVzIGFuZCBzZWxmLWVmZmljYWN5IHJlbGF0ZWQgdG8gc2VsZi1yZWd1bGF0aW9uLCBib3RoIGJlZm9yZSBhbmQgYWZ0ZXIgdGhlIHByb2dyYW0sIHRvIGV2YWx1YXRlIGNoYW5nZS7OBEZpZnR5IHByZS1zY2hvb2wgY2VudHJlcyB3aWxsIGJlIHJlY3J1aXRlZCB0byBlbnN1cmUgYSBicm9hZCByYW5nZSBvZiBjZW50cmUgY2hhcmFjdGVyaXN0aWNzIGFyZSByZXByZXNlbnRlZCwgbmFtZWx5OiBOYXRpb25hbCBRdWFsaXR5IFN0YW5kYXJkcyByYXRpbmdzIChpLmUuLCB3b3JraW5nIHRvd2FyZHMsIG1lZXRpbmcsIGV4Y2VlZGluZyksIGdlb2dyYXBoaWMgbG9jYXRpb24gKG1ldHJvcG9saXRhbiBhbmQgcmVnaW9uYWwpLCBhbmQgc29jaW8tZWNvbm9taWMgYXJlYXMgKERlY2lsZXMgMS04LCBhY2NvcmRpbmcgdG8gU0VJRkEgQWR2YW50YWdlIGFuZCBEaXNhZHZhbnRhZ2UgaW5kaWNlcykuIFRoZSBzYW1wbGUgaGFzIGJlZW4gc2VsZWN0ZWQgdG8gZW5zdXJlIHJlcHJlc2VudGF0aW9uIGFjcm9zcyB0aGVzZSB2YXJpYWJsZXMsIGJ1dCBpdCB3aWxsIG5vdCBiZSBmdWxseSByZXByZXNlbnRhdGl2ZSBvZiB0aGUgcG9wdWxhdGlvbi4gUGFydGljaXBhdGluZyBjZW50cmVzIG11c3QgYWxzbyBub3QgYmUgcGFydGljaXBhdGluZyBpbiBvdGhlciByZXNlYXJjaCBmb3IgdGhlIGR1cmF0aW9uIG9mIHRoZSBldmFsdWF0aW9uIHllYXIuBzMgWWVhcnMINjUgWWVhcnMWQm90aCBtYWxlcyBhbmQgZmVtYWxlc3BDZW50cmVzIHdpbGwgYmUgZXhjbHVkZWQgaWYgdGhleSBhcmUgbG9jYXRlZCBvdXQgb2Ygc3RhdGUgb3IgZG8gbm90IGhhdmUgZGF0YSBvbiB0aGVzZSBzdHJhdGlmaWNhdGlvbiB2YXJpYWJsZXMuDmV4cGFuZGFibGUtYm94ClVuaXZlcnNpdHkYVW5pdmVyc2l0eSBvZiBXb2xsb25nb25nYEVhcmx5IFN0YXJ0PGJyIC8%2BVW5pdmVyc2l0eSBvZiBXb2xsb25nb25nPGJyIC8%2BTm9ydGhmaWVsZHMgQXZlbnVlPGJyIC8%2BV29sbG9uZ29uZywgTlNXPGJyIC8%2BMjUyMglBdXN0cmFsaWECRHINU3RldmVuIEhvd2FyZGBFYXJseSBTdGFydDxiciAvPlVuaXZlcnNpdHkgb2YgV29sbG9uZ29uZzxiciAvPk5vcnRoZmllbGRzIEF2ZW51ZTxiciAvPldvbGxvbmdvbmcsIE5TVzxiciAvPjI1MjIJQXVzdHJhbGlhDCs2MTI0MjIxNTE2NRJzdGV2ZW5oQHVvdy5lZHUuYXUGaGlkZGVuZAIPDxQrAAQPFgQfBWUfA2dkZGQ8KwAEAQAWAh8CZWQCEQ8WAh8BaGQCEw9kFgYCAw8PFgIfDWVkZAIFDw8WAh8NBSUvVHJpYWxQZGYvVHJpYWxSZXZpZXctMzczOTUzLnBkZj90PTE3ZGQCLw88KwAEAQAPFgIfA2dkZAIXD2QWFmYPFQIQcmVzdWx0cy1oZWFkZXItMRFUcmlhbCBmcm9tIEFOWkNUUmQCAQ8PFgIfDQU9fi9UcmlhbC9SZWdpc3RyYXRpb24vVHJpYWxSZXZpZXcuYXNweD9pZD0zNzM5MjEmaXNSZXZpZXc9dHJ1ZWRkAgMPDxYCHw0FJS9UcmlhbFBkZi9UcmlhbFJldmlldy0zNzM5MjEucGRmP3Q9MTdkZAIHDw8WAh8CBQYzNzM5MjFkZAIJDw8WAh8CBQ4xMjYxNzAwMTU2NzMxNGRkAgsPDxYCHwJlZGQCDQ8PFgIfAgUFRmFsc2VkZAIODxUtEHJlc3VsdHMtaGVhZGVyLTJ%2FVmFsaWRhdGluZyB0aGUgb3B0aW1hbCBkb3NlIG9mIG5vcm1hbCBpbW11bm9nbG9idWxpbiBmb3IgcHJvdGVjdGlvbiBhZ2FpbnN0IGhlcGF0aXRpcyBBOiBwaGFybWFjb2tpbmV0aWNzIGluIGhlYWx0aHkgdm9sdW50ZWVycxJOb3QgeWV0IHJlY3J1aXRpbmcHaW5mby1saQhBcHByb3ZlZAdpbmZvLWxpGFByb3NwZWN0aXZlbHkgcmVnaXN0ZXJlZDFIYXMgdGhlIHRyaWFsIGJlZW4gdXBkYXRlZCBpbiB0aGUgbGFzdCAxMiBtb250aHM%2FClVwIHRvIGRhdGUKMjEvMTEvMjAxNxJyZXN1bHRzLWhlYWRlci0xMDAIQXBwcm92ZWQKVXAgdG8gZGF0ZRNBQ1RSTjEyNjE3MDAxNTY3MzE0EDIxIE5vdmVtYmVyIDIwMTcEc2hvdwtoZXBhdGl0aXMgQQRzaG93CUF1c3RyYWxpYQRzaG93ClF1ZWVuc2xhbmQEc2hvdwRzaG93Ek5vdCB5ZXQgcmVjcnVpdGluZw8xMSBKYW51YXJ5IDIwMTgEc2hvdwhBcHByb3ZlZOgKTm9uLWltbXVuZSBwZW9wbGUgZXhwb3NlZCB0byBoZXBhdGl0aXMgQSBhcmUgcmVjb21tZW5kZWQgdG8gcmVjZWl2ZSBlaXRoZXIgaGVwYXRpdGlzIEEgdmFjY2luZSBvciBub3JtYWwgaW1tdW5vZ2xvYnVsaW4gKHdoaWNoIGNvbnRhaW5zIGhlcGF0aXRpcyBBIGFudGlib2RpZXMpLCB3aXRoIHRoZSBsYXR0ZXIgcmVjb21tZW5kZWQgZm9yIHRob3NlIGluIHRoZSBtb3N0IHZ1bG5lcmFibGUgZ3JvdXBzLiBXZSBoYXZlIHByZXZpb3VzbHkgY29tcGxldGVkIGEgcGhhcm1hY29raW5ldGljIG1vZGVsaW5nIHN0dWR5IHVzaW5nIHB1Ymxpc2hlZCBkYXRhIHRvIGVzdGltYXRlIHRoZSBtaW5pbXVtIGRvc2Ugb2YgaGVwYXRpdGlzIEEgYW50aWJvZGllcyB0aGF0IHdvdWxkIGJlIHByb3RlY3RpdmUgYWdhaW5zdCBoZXBhdGl0aXMgQSB1cCB0byBkYXkgNTAgYWZ0ZXIgaW5qZWN0aW9uLiBUaGlzIG1vZGVsaW5nIHN0dWR5IHN1cHBvcnRlZCB0aGUgaHlwb3RoZXNpcyB0aGF0IHRoZSBjdXJyZW50IG5hdGlvbmFsIGd1aWRlbGluZSBwcm92aWRlcyBpbnN1ZmZpY2llbnQgYW50aWJvZGllcyBmb3IgcGVvcGxlIHdobyB3ZWlnaCBvdmVyIDg1a2cuIFRoZSBjdXJyZW50IHN0dWR5IHNlZWtzIHRvIHZhbGlkYXRlIHRoZXNlIG1vZGVsbGluZyByZXN1bHRzIGluIG9yZGVyIHRvIHJlY29tbWVuZCB0aGUgb3B0aW1hbCBkb3NlIG9mIG5vcm1hbCBpbW11bm9nbG9idWxpbiBmb3IgdGhlIHByZXZlbnRpb24gb2YgaGVwYXRpdGlzIEEuIFRoaXMgc3R1ZHkgd2lsbCBjb21wYXJlIHRoZSBsZXZlbCBvZiBhbnRpYm9kaWVzIHByZXNlbnQgaW4gYmxvb2QgYXMgYSByZXN1bHQgb2YgcGFzc2l2ZSBpbW11bmlzYXRpb24gd2l0aCB0aGUgcmVjb21tZW5kZWQgZG9zZSBvZiBub3JtYWwgaW1tdW5vZ2xvYnVsaW4gdG8gdGhlIGxldmVsIG9mIGFudGlib2RpZXMgaW4gYmxvb2QgYXMgYSByZXN1bHQgb2YgZG9zaW5nIGJ5IHdlaWdodCB3aXRoIHRoZSBzYW1lIHByb2R1Y3QgaW4gaGVhbHRoeSBhZHVsdHMuIFRvIGRvIHRoaXMsIHdlIHdpbGwgY29uZHVjdCBhIHJhbmRvbWlzZWQgY29udHJvbGxlZCB0cmlhbCB3aGVyZSB0aGUgdXN1YWwgY2FyZSBncm91cCB3aWxsIHJlY2VpdmUgMm1MIG5vcm1hbCBpbW11bm9nbG9idWxpbiBpcnJlc3BlY3RpdmUgb2Ygd2VpZ2h0LCBhbmQgdGhlIHRlc3QgZG9zZSBncm91cCB3aWxsIHJlY2VpdmVkIDAuMDI1bUwva2cgdG8gYSBtYXhpbXVtIG9mIDVtTCBvZiBub3JtYWwgaW1tdW5vZ2xvYnVsaW4uIEJsb29kIHNhbXBsZXMgd2lsbCBiZSB0YWtlbiBmcm9tIGJvdGggZ3JvdXBzIGF0IGRheXMgMCwgMSwgMywgNywgMjggYW5kIDUwIGFuZCB0aGUgZ3JvdXBzIG1lYW4gaGVwYXRpdGlzIEEgYW50aWJvZHkgdGl0cmVzIGNvbXBhcmVkLscDSGVhbHRoeSBhZHVsdCB2b2x1bnRlZXJzIHdobyBwcm92aWRlIGluZm9ybWVkIGNvbnNlbnQsIGFuZCBtZWV0IHRoZSBmb2xsb3dpbmcgY3JpdGVyaWEgd2lsbCBiZSBlbGlnaWJsZTo8YnIgLz5vIGFyZSBpbW11bmUgdG8gbWVhc2xlcyBhbmQgcnViZWxsYSBhY2NvcmRpbmcgdG8gY29tbWVyY2lhbCBzZXJvbG9neSB0ZXN0PGJyIC8%2BbyBhcmUgbm90IGltbXVuZSB0byBoZXBhdGl0aXMgQSBhY2NvcmRpbmcgdG8gY29tbWVyY2lhbCBzZXJvbG9neSB0ZXN0PGJyIC8%2BbyBhcmUgbm90IGVsaWdpYmxlIGZvciBmcmVlIGhlcGF0aXRpcyBBIHZhY2NpbmF0aW9uIGFuZCB1bmxpa2VseSB0byByZXF1aXJlIGhlcGF0aXRpcyBBIHZhY2NpbmF0aW9uIGR1cmluZyB0aGUgY291cnNlIG9mIHN0dWR5IChpZSBubyBwbGFubmVkIG92ZXJzZWFzIHRyYXZlbCk8YnIgLz5vIHdlaWdoIGF0IGxlYXN0IDUxa2c8YnIgLz4IMTggWWVhcnMJIE5vIGxpbWl0FkJvdGggbWFsZXMgYW5kIGZlbWFsZXPiA28gaGF2ZSBiZWVuIGluIGFub3RoZXIgY2xpbmljYWwgdHJpYWwgd2l0aGluIHRoZSBsYXN0IDMgbW9udGhzIHByaW9yIHRvIHJlY3J1aXRtZW50IHRvIHRoaXMgc3R1ZHk8YnIgLz5vIGhhdmUgaGlzdG9yeSBvZiBoeXBlcnNlbnNpdGl2aXR5LCBhbGxlcmd5IHRvIGJsb29kIHByb2R1Y3RzIG9yIGhhZW1hdG9sb2dpY2FsIGRpc29yZGVyPGJyIC8%2BbyBoYXZlIHJlY2VpdmVkIGEgYmxvb2QgcHJvZHVjdCB3aXRoIHRoZSAzIG1vbnRocyBwcmlvciB0byByZWNydWl0bWVudCB0byB0aGlzIHN0dWR5PGJyIC8%2BbyBoYXZlIGJlZW4gLyBhcmUgdG8gYmUgYWRtaW5pc3RlcmVkIGEgbGl2ZSB2aXJ1cyB2YWNjaW5lIHdpdGhpbiB0aGUgdGhyZWUgd2Vla3MgcHJpb3IgdG8gTkhJRyBhZG1pbmlzdHJhdGlvbjxiciAvPm8gYXJlIHByZWduYW50PGJyIC8%2BbyBoYXZlIGFibm9ybWFsIHJlc3VsdHMgb24gc2NyZWVuaW5nIEZ1bGwgYmxvb2QgY291bnQuPGJyIC8%2BDmV4cGFuZGFibGUtYm94ClVuaXZlcnNpdHkTR3JpZmZpdGggVW5pdmVyc2l0eSlHb2xkIENvYXN0IENhbXB1czxiciAvPlNvdXRocG9ydCBRTEQgNDIxNQlBdXN0cmFsaWECRHILTWVnYW4gWW91bmdcU2Nob29sIG9mIE1lZGljaW5lIDxiciAvPkdvbGQgQ29hc3QgQ2FtcHVzPGJyIC8%2BR3JpZmZpdGggVW5pdmVyc2l0eSA8YnIgLz5Tb3V0aHBvcnQgUUxEIDQyMTUJQXVzdHJhbGlhDCs2MTc1Njc4MDYyNBttZWdhbi55b3VuZ0BncmlmZml0aC5lZHUuYXUGaGlkZGVuZAIPDxQrAAQPFgQfBWUfA2dkZGQ8KwAEAQAWAh8CZWQCEQ8WAh8BaGQCEw9kFgYCAw8PFgIfDWVkZAIFDw8WAh8NBSUvVHJpYWxQZGYvVHJpYWxSZXZpZXctMzczOTIxLnBkZj90PTE3ZGQCLw88KwAEAQAPFgIfA2dkZAIZD2QWFmYPFQIQcmVzdWx0cy1oZWFkZXItMRFUcmlhbCBmcm9tIEFOWkNUUmQCAQ8PFgIfDQU9fi9UcmlhbC9SZWdpc3RyYXRpb24vVHJpYWxSZXZpZXcuYXNweD9pZD0zNzM5NDgmaXNSZXZpZXc9dHJ1ZWRkAgMPDxYCHw0FJS9UcmlhbFBkZi9UcmlhbFJldmlldy0zNzM5NDgucGRmP3Q9MTdkZAIHDw8WAh8CBQYzNzM5NDhkZAIJDw8WAh8CBQ4xMjYxNzAwMTU2NjMyNWRkAgsPDxYCHwJlZGQCDQ8PFgIfAgUFRmFsc2VkZAIODxUtEHJlc3VsdHMtaGVhZGVyLTKgAUNpcmN1bGF0aW5nIFR1bW91ciBETkEgQW5hbHlzaXMgSW5mb3JtaW5nIEFkanV2YW50IENoZW1vdGhlcmFweSBpbiBTdGFnZSBJSUkgQ29sb24gQ2FuY2VyOiAgQSBNdWx0aWNlbnRyZSBQaGFzZSBJSS9JSUkgUmFuZG9taXNlZCBDb250cm9sbGVkIFN0dWR5IChEWU5BTUlDLUlJSSkKUmVjcnVpdGluZwdpbmZvLWxpCEFwcHJvdmVkB2luZm8tbGkaUmV0cm9zcGVjdGl2ZWx5IHJlZ2lzdGVyZWQxSGFzIHRoZSB0cmlhbCBiZWVuIHVwZGF0ZWQgaW4gdGhlIGxhc3QgMTIgbW9udGhzPwpVcCB0byBkYXRlCjIxLzExLzIwMTcScmVzdWx0cy1oZWFkZXItMTAwCEFwcHJvdmVkClVwIHRvIGRhdGUTQUNUUk4xMjYxNzAwMTU2NjMyNRAyMSBOb3ZlbWJlciAyMDE3BHNob3cRQ29sb3JlY3RhbCBDYW5jZXIEc2hvdxZBdXN0cmFsaWEsIE5ldyBaZWFsYW5kBHNob3dxQXVzdHJhbGlhbiBDYXBpdGFsIFRlcnJpdG9yeSwgTmV3IFNvdXRoIFdhbGVzLCBRdWVlbnNsYW5kLCBTb3V0aCBBdXN0cmFsaWEsIFRhc21hbmlhLCBXZXN0ZXJuIEF1c3RyYWxpYSwgVmljdG9yaWEEc2hvdwRzaG93ClJlY3J1aXRpbmcDbi9hBHNob3cIQXBwcm92ZWTbCVRoZSBhaW0gb2YgdGhpcyBzdHVkeSBpcyB0byBjb21wYXJlIHRyZWF0bWVudCBpbmZvcm1lZCBieSBjdEROQSByZXN1bHRzIHRvIHN0YW5kYXJkIGNhcmUgaW4gcGF0aWVudHMgd2l0aCBzdGFnZSBJSUkgY29sb24gY2FuY2VyLiA8YnIgLz48YnIgLz5XaG8gaXMgaXQgZm9yPzxiciAvPllvdSBtYXkgYmUgZWxpZ2libGUgdG8gam9pbiB0aGlzIHN0dWR5IGlmIHlvdSBhcmUgYWdlZCAxOCB5ZWFycyBvciBtb3JlIGFuZCBoYXZlIHVuZGVyZ29uZSBjdXJhdGl2ZSBzdXJnZXJ5IGZvciBzdGFnZSBJSUkgY29sb24gY2FuY2VyLjxiciAvPjxiciAvPlN0dWR5IGRldGFpbHM8YnIgLz5BbGwgcGFydGljaXBhbnRzIGluIHRoaXMgc3R1ZHkgd2lsbCBoYXZlIGEgYmxvb2QgZHJhdyBkdXJpbmcgd2VlayA1LTYgcG9zdCBzdXJnZXJ5IGZvciBjdEROQSBhbmFseXNpcy4gVGhleSB3aWxsIHRoZW4gYmUgcmFuZG9tbHkgYWxsb2NhdGVkIHRvIG9uZSBvZiB0d28gdHJlYXRtZW50IGdyb3Vwcy4gT25lIGdyb3VwIHdpbGwgcmVjZWl2ZSBzdGFuZGFyZCBvZiBjYXJlIHRyZWF0bWVudCBhcyBzZWxlY3RlZCBieSB0aGVpciBjbGluaWNpYW46IGVpdGhlciBubyBjaGVtb3RoZXJhcHksIHNpbmdsZSBhZ2VudCBmbHVvcm9weXJpbWlkaW5lIGNoZW1vdGhlcmFweSBvciBjb21iaW5hdGlvbiBmbHVvcm9weXJpbWlkaW5lIHBsdXMgb3hhbGlwbGF0aW4gY2hlbW90aGVyYXB5LiBUcmVhdG1lbnQgc2VsZWN0aW9uIGluIHRoZSBvdGhlciBncm91cCB3aWxsIGJlIGluZm9ybWVkIGJ5IGN0RE5BIGJsb29kIHRlc3QgcmVzdWx0cy4gPGJyIC8%2BPGJyIC8%2BQWxsIHBhdGllbnRzIHdpbGwgYmUgZm9sbG93ZWQgdXAgZXZlcnkgMyBtb250aHMgZm9yIDIgeWVhcnMsIHRoZW4gZXZlcnkgNiBtb250aHMgZm9yIDMgeWVhcnMgaW4gb3JkZXIgdG8gZXZhbHVhdGUgdHJlYXRtZW50IHNhZmV0eSBhbmQgZWZmaWNhY3kuIEZvbGxvdy11cCBpbnZvbHZlcyBhZGRpdGlvbmFsIGJsb29kIHRlc3RzIGFuZCByYWRpb2xvZ2ljYWwgYXNzZXNzbWVudHMuIEl0IGlzIGhvcGVkIHRoYXQgdGhlIGZpbmRpbmdzIGZyb20gdGhpcyBzdHVkeSB3aWxsIGRlbW9uc3RyYXRlIHRoYXQgdXNpbmcgY3RETkEgcmVzdWx0cyB0byBoZWxwIG1ha2UgYSBkZWNpc2lvbiByZWdhcmRpbmcgYWRqdXZhbnQgY2hlbW90aGVyYXB5IGlzIG5vdCBpbmZlcmlvciB0byBzdGFuZGFyZCBvZiBjYXJlIGluIHRlcm1zIG9mIHJlY3VycmVuY2UtZnJlZSBzdXJ2aXZhbC65BDEuCVBhdGllbnRzIGFnZWQgZ3JlYXRlciB0aGFuIG9yIGVxdWFsIHRvIDE4IHllYXJzIG9mIGFnZTxiciAvPjIuCVN1YmplY3RzIHdpdGggY3VyYXRpdmVseSByZXNlY3RlZCBzdGFnZSBJSUkgKEFueSBULCBOMSBvciBOMiwgTTApIGNvbG9uIGNhbmNlcjxiciAvPjMuCVBhdGllbnRzIHdpdGggcmVjdGFsIGNhbmNlciB3aWxsIGJlIGVsaWdpYmxlIHVubGVzcyB0aGV5IGhhdmUgaGFkIHByZS1vcGVyYXRpdmUgY29tYmluZWQgY2hlbW90aGVyYXB5IGFuZCByYWRpb3RoZXJhcHksIG9yIGFyZSBzY2hlZHVsZWQgZm9yIHBvc3Qtb3BlcmF0aXZlIGNvbWJpbmVkIGNoZW1vdGhlcmFweSBhbmQgcmFkaW90aGVyYXB5LjxiciAvPjQuCUEgcmVwcmVzZW50YXRpdmUgdHVtb3VyIHNhbXBsZSBpcyBhdmFpbGFibGUgZm9yIG1vbGVjdWxhciB0ZXN0aW5nIHdpdGhpbiAyOCBkYXlzIGFmdGVyIHN1cmdlcnk8YnIgLz41LglGaXQgZm9yIGF0IGxlYXN0IDMgbW9udGhzIG9mIGZsdW9yb3B5cmltaWRpbmUgYWRqdXZhbnQgY2hlbW90aGVyYXB5PGJyIC8%2BNi4JRUNPRyBwZXJmb3JtYW5jZSBzdGF0dXMgMC0yPGJyIC8%2BCDE4IFllYXJzCSBObyBsaW1pdBZCb3RoIG1hbGVzIGFuZCBmZW1hbGVzkgUxLglIaXN0b3J5IG9mIGFub3RoZXIgcHJpbWFyeSBjYW5jZXIgd2l0aGluIHRoZSBsYXN0IDMgeWVhcnMsIHdpdGggdGhlIGV4Y2VwdGlvbiBvZiBub24tbWVsYW5vbWF0b3VzIHNraW4gY2FuY2VyIGFuZCBjYXJjaW5vbWEgaW4gc2l0dTxiciAvPjIuCVBhdGllbnRzIHdpdGggbXVsdGlwbGUgcHJpbWFyeSBjb2xvcmVjdGFsIGNhbmNlcnM8YnIgLz4zLglJbmFkZXF1YXRlIG9yZ2FuIGZ1bmN0aW9uOjxiciAvPmEuCU1vZGVyYXRlL3NldmVyZSByZW5hbCBpbXBhaXJtZW50IChHRlI8MzAgbWwvbWluKSwgYXMgY2FsY3VsYXRlZCBieSB0aGUgQ29ja2Nyb2Z0IGFuZCBHYXVsdCBlcXVhdGlvbjxiciAvPmIuCUFic29sdXRlIG5ldXRyb3BoaWwgY291bnQgPDEuMHgxMDkvTDxiciAvPmMuCVBsYXRlbGV0IGNvdW50IDw3NXgxMDkvTDxiciAvPmQuCUhhZW1vZ2xvYmluIDw4MCBnL0w8YnIgLz5lLgkgQXNwYXJ0YXRlIGFtaW5vdHJhbnNmZXJhc2UvQWxhbmluZSBhbWlub3RyYW5zZmVyYXNlID4yLjUgeCB1cHBlciBsaW1pdCBvZiBub3JtYWw8YnIgLz40LglNZWRpY2FsIG9yIHBzeWNoaWF0cmljIGNvbmRpdGlvbiBvciBvY2N1cGF0aW9uYWwgcmVzcG9uc2liaWxpdGllcyB0aGF0IG1heSBwcmVjbHVkZSBjb21wbGlhbmNlIHdpdGggdGhlIHByb3RvY29sPGJyIC8%2BDmV4cGFuZGFibGUtYm94Gk90aGVyIENvbGxhYm9yYXRpdmUgZ3JvdXBzK0F1c3RyYWxhc2lhbiBHYXN0cm8tSW50ZXN0aW5hbCBUcmlhbHMgR3JvdXBaR0kgQ2FuY2VyIEluc3RpdHV0ZSBATGlmZWhvdXNlPGJyIC8%2BTGV2ZWwgNiwgMTE5LTE0MyBNaXNzZW5kZW4gUmQ8YnIgLz5DYW1wZXJkb3duIE5TVyAyMDUwCUF1c3RyYWxpYQJEchFNYXJseXNlIERlYnJpbmNhdGlUaGUgV2FsdGVyIGFuZCBFbGl6YSBIYWxsIEluc3RpdHV0ZSBvZiBNZWRpY2FsIFJlc2VhcmNoPGJyIC8%2BMUcgUm95YWwgUGFyYWRlPGJyIC8%2BUGFya3ZpbGxlPGJyIC8%2BVklDIDMwNTIJQXVzdHJhbGlhDys2MSAzIDkzNDUgMjg5NRttYXJseXNlLmRlYnJpbmNhdEBtaC5vcmcuYXUGaGlkZGVuZAIPDxQrAAQPFgQfBWUfA2dkZGQ8KwAEAQAWAh8CZWQCEQ8WAh8BaGQCEw9kFgYCAw8PFgIfDWVkZAIFDw8WAh8NBSUvVHJpYWxQZGYvVHJpYWxSZXZpZXctMzczOTQ4LnBkZj90PTE3ZGQCLw88KwAEAQAPFgIfA2dkZAIbD2QWFmYPFQIQcmVzdWx0cy1oZWFkZXItMRFUcmlhbCBmcm9tIEFOWkNUUmQCAQ8PFgIfDQU9fi9UcmlhbC9SZWdpc3RyYXRpb24vVHJpYWxSZXZpZXcuYXNweD9pZD0zNzM5OTMmaXNSZXZpZXc9dHJ1ZWRkAgMPDxYCHw0FJS9UcmlhbFBkZi9UcmlhbFJldmlldy0zNzM5OTMucGRmP3Q9MTdkZAIHDw8WAh8CBQYzNzM5OTNkZAIJDw8WAh8CBQ4xMjYxNzAwMTU2NTMzNmRkAgsPDxYCHwJlZGQCDQ8PFgIfAgUFRmFsc2VkZAIODxUtEHJlc3VsdHMtaGVhZGVyLTL0AUEgc2luZ2xlIGRvc2UsIHJhbmRvbWl6ZWQsIGJsaW5kZWQsIGJpb2VxdWl2YWxlbmNlIHN0dWR5IG9mIGEgdGVzdCBmb3JtdWxhdGlvbiBvZiBtZXNhbGF6aW5lIHRhYmxldCBpbiBhIDMgd2F5IGNyb3Nzb3ZlciBjb21wYXJpc29uIGFnYWluc3QgdGhlIGlubm92YXRvciBtZXNhbGF6aW5lIHRhYmxldCBjb25kdWN0ZWQgdW5kZXIgZmFzdGluZyBjb25kaXRpb25zIGluIGhlYWx0aHkgbWFsZSBhbmQgZmVtYWxlIHZvbHVudGVlcnMSTm90IHlldCByZWNydWl0aW5nB2luZm8tbGkIQXBwcm92ZWQHaW5mby1saRhQcm9zcGVjdGl2ZWx5IHJlZ2lzdGVyZWQxSGFzIHRoZSB0cmlhbCBiZWVuIHVwZGF0ZWQgaW4gdGhlIGxhc3QgMTIgbW9udGhzPwpVcCB0byBkYXRlCjIxLzExLzIwMTcScmVzdWx0cy1oZWFkZXItMTAwCEFwcHJvdmVkClVwIHRvIGRhdGUTQUNUUk4xMjYxNzAwMTU2NTMzNhAyMSBOb3ZlbWJlciAyMDE3BHNob3edA0Jpb2VxdWl2YWxlbmNlIHN0dWR5IGNvbmR1Y3RlZCBpbiBoZWFsdGh5IHZvbHVudGVlcnMgY29tcGFyaW5nIHR3byBmb3JtdWxhdGlvbnMgb2YgbWVzYWxhemluZSB0YWJsZXQgd2l0aCBubyBoZWFsdGggY29uZGl0aW9uIG9yIHByb2JsZW0gc3R1ZGllZC4gDQoNCkFsdGhvdWdoIHRoaXMgc3R1ZHkgaXMgYmVpbmcgY29uZHVjdGVkIGluIGhlYWx0aHkgdm9sdW50ZWVycyB3aG8gYXJlIG5vdCBiZWluZyB0cmVhdGVkIGZvciB0aGUgY29uZGl0aW9uIHRvIHdoaWNoIHRoZSBtZWRpY2luZSBpcyB1c2VkLCBtZXphbGF6aW5lIGlzIHVzZWQgZm9yIHRoZSBpbmR1Y3Rpb24gYW5kIG1haW50ZW5hbmNlIG9mIHJlbWlzc2lvbiBpbiBwYXRpZW50cyB3aXRoIG1pbGQgdG8gbW9kZXJhdGUsIGFjdGl2ZSB1bGNlcmF0aXZlIGNvbGl0aXMuBHNob3cLTmV3IFplYWxhbmQGaGlkZGVuAARzaG93BHNob3cSTm90IHlldCByZWNydWl0aW5nEDI4IE5vdmVtYmVyIDIwMTcEc2hvdwhBcHByb3ZlZMMCVGhlIG9iamVjdGl2ZSBvZiB0aGlzIHN0dWR5IGlzIHRvIGV2YWx1YXRlIHRoZSBiaW9lcXVpdmFsZW5jZSBvZiB0aGUgdGVzdCAobmV3KSBmb3JtdWxhdGlvbiBvZiAxIHggMS4yIGcgbWVzYWxhemluZSB0YWJsZXQgYWdhaW5zdCB0aGUgcmVmZXJlbmNlIGZvcm11bGF0aW9uIChpbm5vdmF0b3IgYnJhbmQgb2YgMSB4IDEuMiBnIG1lc2FsYXppbmUgdGFibGV0KSBmb2xsb3dpbmcgb3JhbCBhZG1pbmlzdHJhdGlvbiBvZiBhIHNpbmdsZSBkb3NlIG9mIDEuMiBnIGluIGhlYWx0aHkgbWFsZSBhbmQgZmVtYWxlIHN1YmplY3RzIHVuZGVyIGZhc3RpbmcgY29uZGl0aW9ucy6mAkhlYWx0aHkgbWFsZSBhbmQgbm9uLXByZWduYW50IGZlbWFsZXM8YnIgLz5BZ2VkIGJldHdlZW4gMTggYW5kIDU1PGJyIC8%2BTm9uLXNtb2tlcjxiciAvPkJNSSBiZXR3ZWVuIDE4IGFuZCAzMyBpbmNsdXNpdmU8YnIgLz5Ob3JtYWwsIGhlYWx0aHkgaW5kaXZpZHVhbHMgYXMgZGV0ZXJtaW5lZCBieSBtZWRpY2FsIGhpc3RvcnksIHBoeXNpY2FsIGV4YW1pbmF0aW9uLCBFQ0csIGJsb29kIHByZXNzdXJlIGFuZCBsYWJvcmF0b3J5IHRlc3RzPGJyIC8%2BQWJsZSB0byBwcm92aWRlIHdyaXR0ZW4gaW5mb3JtZWQgY29uc2VudAgxOCBZZWFycwg1NSBZZWFycxZCb3RoIG1hbGVzIGFuZCBmZW1hbGVzvgVBbnkgaGlzdG9yeSBvZiByZWNlbnQgcmVjdXJyZW50IGF0dGFja3Mgb2YgYnJvbmNoaXRpcywgYXN0aG1hLCBtaWdyYWluZSBoZWFkYWNoZXM8YnIgLz5Db25jb21pdGFudCBkcnVnIHRoZXJhcHkgb2YgYW55IGtpbmQ8YnIgLz5TZW5zaXRpdml0eSB0byB0aGUgc3R1ZHkgZHJ1ZzxiciAvPkhpc3Rvcnkgb2YgYW55IGNvbmRpdGlvbnMgdGhhdCBtaWdodCBpbnRlcmZlcmUgd2l0aCB0aGUgYWJzb3JwdGlvbiwgZGlzdHJpYnV0aW9uLCBtZXRhYm9saXNtIG9yIGV4Y3JldGlvbiBvZiB0aGUgZHJ1ZzxiciAvPkZlbWFsZXMgd2hvIGFyZSBwcmVnbmFudCBhbmQvb3IgYXJlIGJyZWFzdGZlZWRpbmc8YnIgLz5TbW9rZXIgKGFueW9uZSB3aG8gaGFzIHNtb2tlZCBpbiB0aGUgbGFzdCA2IG1vbnRocyk8YnIgLz5IaXN0b3J5IG9mIGFsY29ob2wgb3IgZHJ1ZyBhYnVzZSBvciBkZXBlbmRlbmN5PGJyIC8%2BUGFydGljaXBhdGlvbiBpbiBhIGRydWcgc3R1ZHkgd2l0aGluIDYwIGRheXMgb2YgdGhlIHN0YXJ0IG9mIHRoZSBzdHVkeSBvciBkb25hdGVkIGJsb29kIGluIHRoZSA2MCBkYXlzIHByZWNlZGluZyB0aGUgc3R1ZHkuPGJyIC8%2BVm9sdW50ZWVycyBmb3Igd2hvbSB0aGUgQ2xpbmljYWwgSW52ZXN0aWdhdG9yIGJlbGlldmVzLCBmb3IgYW55IHJlYXNvbiwgdGhhdCBwYXJ0aWNpcGF0aW9uIHdvdWxkIG5vdCBiZSBhbiBhY2NlcHRhYmxlIHJpc2sOZXhwYW5kYWJsZS1ib3gaQ29tbWVyY2lhbCBzZWN0b3IvSW5kdXN0cnkaWmVuaXRoIFRlY2hub2xvZ3kgQ29ycCBMdGQiMTU2IEZyZWRlcmljayBTdDxiciAvPkR1bmVkaW4gOTAxNgtOZXcgWmVhbGFuZANNcnMNTGluZGEgRm9sbGFuZF9aZW5pdGggVGVjaG5vbG9neSBDb3Jwb3JhdGlvbiBMaW1pdGVkPGJyIC8%2BMTU2IEZyZWRlcmljayBTdHJlZXQgKFBPIEJveCAxNzc3KTxiciAvPkR1bmVkaW4gOTAxNgtOZXcgWmVhbGFuZAsrNjQzNDc3OTY2OSRsaW5kYS5mb2xsYW5kQHplbml0aHRlY2hub2xvZ3kuY28ubnoGaGlkZGVuZAIPDxQrAAQPFgQfBWUfA2dkZGQ8KwAEAQAWAh8CZWQCEQ8WAh8BaGQCEw9kFgYCAw8PFgIfDWVkZAIFDw8WAh8NBSUvVHJpYWxQZGYvVHJpYWxSZXZpZXctMzczOTkzLnBkZj90PTE3ZGQCLw88KwAEAQAPFgIfA2dkZAIdD2QWFmYPFQIQcmVzdWx0cy1oZWFkZXItMRFUcmlhbCBmcm9tIEFOWkNUUmQCAQ8PFgIfDQU9fi9UcmlhbC9SZWdpc3RyYXRpb24vVHJpYWxSZXZpZXcuYXNweD9pZD0zNzM5MjAmaXNSZXZpZXc9dHJ1ZWRkAgMPDxYCHw0FJS9UcmlhbFBkZi9UcmlhbFJldmlldy0zNzM5MjAucGRmP3Q9MTdkZAIHDw8WAh8CBQYzNzM5MjBkZAIJDw8WAh8CBQ4xMjYxNzAwMTU2NDM0N2RkAgsPDxYCHwJlZGQCDQ8PFgIfAgUFRmFsc2VkZAIODxUtEHJlc3VsdHMtaGVhZGVyLTKDAUEgU2luZ2xlIEFzY2VuZGluZyBEb3NlIGFuZCBNdWx0aXBsZSBBc2NlbmRpbmcgRG9zZSBQaGFzZSBJIFN0dWR5IG9mIFBYUy01MzgyQSBBZG1pbmlzdGVyZWQgT3JhbGx5IGluIEhlYWx0aHkgTWFsZSBBZHVsdCBWb2x1bnRlZXJzClJlY3J1aXRpbmcHaW5mby1saQhBcHByb3ZlZAdpbmZvLWxpGlJldHJvc3BlY3RpdmVseSByZWdpc3RlcmVkMUhhcyB0aGUgdHJpYWwgYmVlbiB1cGRhdGVkIGluIHRoZSBsYXN0IDEyIG1vbnRocz8KVXAgdG8gZGF0ZQoyMS8xMS8yMDE3EnJlc3VsdHMtaGVhZGVyLTEwMAhBcHByb3ZlZApVcCB0byBkYXRlE0FDVFJOMTI2MTcwMDE1NjQzNDcQMjEgTm92ZW1iZXIgMjAxNwRzaG93XklkaW9wYXRoaWMgUHVsbW9uYXJ5IEZpYnJvc2lzLCBOb24tIGFsY29ob2xpYyBTdGVhdG9oZXBhdGl0aXMsIExpdmVyIEZpYnJvc2lzLCBLaWRuZXkgRmlicm9zaXMEc2hvdwlBdXN0cmFsaWEEc2hvdxFXZXN0ZXJuIEF1c3RyYWxpYQRzaG93BHNob3cKUmVjcnVpdGluZwNuL2EEc2hvdwhBcHByb3ZlZJkLVGhlIHByaW1hcnkgcHVycG9zZSBvZiB0aGUgc3R1ZHkgaXMgdG8gZGV0ZXJtaW5lIHRoZSBzYWZldHksIHRvbGVyYWJpbGl0eSwgcGhhcm1hY29raW5ldGljcyAoUEspIGFuZCBwaGFybWFjb2R5bmFtaWNzIChQRCkgb2YgUFhTLTUzODJBIGFmdGVyIG9yYWwgYWRtaW5pc3RyYXRpb248YnIgLz48YnIgLz5TQUQ8YnIgLz5UaGlzIGlzIGEgcmFuZG9taXNlZCwgZG91YmxlLWJsaW5kLCBwbGFjZWJvIGNvbnRyb2xsZWQsIGRvc2UgZXNjYWxhdGluZyBzdHVkeSB3aXRoIHNpbmdsZSBhc2NlbmRpbmcgZG9zZSBvZiBQWFMtNTM4MkEuPGJyIC8%2BVGhlcmUgd2lsbCBiZSA2IGNvaG9ydHMgY29uc2lzdGluZyBvZiA4IHN1YmplY3RzIGVhY2guIFN1YmplY3RzIHdpdGhpbiBhIGNvaG9ydCB3aWxsIGJlIHJhbmRvbWx5IGFzc2lnbmVkIHRvIG9uZSBvZiB0aGUgdHdvIGdyb3VwcyAoUFhTLTUzODJBIG9yIHBsYWNlYm8pIGluIGEgMzoxIHJhdGlvIHJlc3BlY3RpdmVseS4gU2VudGluZWwgZG9zaW5nIHdpbGwgYmUgY29uZHVjdGVkIGZvciBlYWNoIGNvaG9ydCwgc3VjaCB0aGF0OzxiciAvPlNlbnRpbmVsIGRvc2luZyDigJMgVG90YWwgTiA9IDIsIHdoZXJlPGJyIC8%2BTj0xID0gUFhTLTUzODJBPGJyIC8%2BTj0xID0gUGxhY2VibzxiciAvPk1haW4gQ29ob3J0IOKAkyBUb3RhbCBOID0gNiwgd2hlcmU8YnIgLz5OPTUgPSBQWFMtNTM4MkE8YnIgLz5OPTEgPSBQbGFjZWJvPGJyIC8%2BPGJyIC8%2BRG9zZXMgd2lsbCBiZSBlc2NhbGF0ZWQgYWNyb3NzIHRoZSBjb2hvcnRzIGJ1dCBub3Qgd2l0aGluIGVhY2ggY29ob3J0LiBUaGUgc3RhcnRpbmcgZG9zZSBhbmQgaW5jcmVtZW50YWwgZG9zZSBpbmNyZWFzZSB0aHJvdWdoIHRoZSBjb2hvcnRzIGhhcyBiZWVuIGRldGVybWluZWQgYmFzZWQgb24gdGhlIHJlc3VsdHMgb2YgdGhlIHByZS1jbGluaWNhbCBzdHVkaWVzLjxiciAvPk1BRDxiciAvPk11bHRpcGxlIGFzY2VuZGluZyBkb3NlcyBvZiBQWFMtNTM4MkEgd2lsbCBiZSBhc3Nlc3NlZCBkdXJpbmcgdGhlIE1BRCBwaGFzZSBvZiB0aGUgc3R1ZHkuIFdpdGhpbiBlYWNoIGNvaG9ydCwgZWFjaCBzdWJqZWN0IHdpbGwgYmUgcmFuZG9tbHkgYXNzaWduZWQgdG8gb25lIG9mIHRoZSB0d28gZ3JvdXBzIChQWFMtNTM4MkEgb3IgcGxhY2VibykgaW4gYSAzOjEgcmF0aW8gcmVzcGVjdGl2ZWx5IHdoZXJlaW4gZWFjaCBzdWJqZWN0IHdpbGwgcmVjZWl2ZSB0aGUgYWN0aXZlIGRydWcgb3IgcGxhY2VibyBvbmNlIGRhaWx5LiBUaGUgZG9zZXMgYW5kIGRvc2luZyBkdXJhdGlvbiBjaG9zZW4gZm9yIE1BRCB3aWxsIGJlIGJhc2VkIG9uIGV2YWx1YXRpb24gb2YgdGhlIFBLIGRhdGEgYW5kIGFsbCBzYWZldHkgaW5mb3JtYXRpb24gYXMgd2VsbCBhcyBhbnkgb3RoZXIgcmVsZXZhbnQgZGF0YSB0aGF0IGlzIGF2YWlsYWJsZSBmcm9tIHRoZSBTQUQgcGhhc2WpCkhlYWx0aHkgbWFsZXMsIGFnZWQgYmV0d2VlbiAxOCBhbmQgNjAgeWVhcnMgKGluY2x1c2l2ZSkuPGJyIC8%2BMi4gRWxpZ2liaWxpdHkgb2YgdGhlIHN1YmplY3RzIHdpbGwgYmUgYmFzZWQgb24gY2xpbmljYWwgaGlzdG9yeSwgcGh5c2ljYWwgZXhhbWluYXRpb24sIEVDRyBhbmQgTGFiIHJlc3VsdHM8YnIgLz4zLiBCTUkgYmV0d2VlbiAxOC41IGtnL20yIGFuZCAzMC4wIGtnL20yIGluY2x1c2l2ZS48YnIgLz40LiBObyBjbGluaWNhbGx5IHJlbGV2YW50IGFibm9ybWFsaXR5IGluIGFuIEVDRzsgUVRjRiAoRnJlZGVyaWNpYeKAmXMgY29ycmVjdGVkIFFUKSA%2BIG9yIGVxdWFscyB0byA0NTAgbXMsIFBSIGludGVydmFsIG9mIDEyMC0yMTAgbXMgYW5kIGEgUVJTIGR1cmF0aW9uIDwgb3IgZXF1YWxzIHRvIDEyMCBtcy48YnIgLz41LiBBZGVxdWF0ZSB2ZW5vdXMgYWNjZXNzIGluIHRoZSBsZWZ0IG9yIHJpZ2h0IGFybSB0byBhbGxvdyBjb2xsZWN0aW9uIG9mIGEgbnVtYmVyIG9mIGJsb29kIHNhbXBsZXMuPGJyIC8%2BNi4gTWFsZSBzdWJqZWN0cyB3aXRoIGZlbWFsZSBwYXJ0bmVycyBvZiBjaGlsZGJlYXJpbmcgcG90ZW50aWFsIG1heSBiZSBlbnJvbGxlZCBpZiB0aGV5OjxiciAvPmEuIGFyZSBkb2N1bWVudGVkIHRvIGJlIHN1cmdpY2FsbHkgc3RlcmlsZSAodmFzZWN0b215IGF0IGxlYXN0IHNpeCBtb250aHMgcHJpb3IgdG8gZG9zaW5nKSwgb3I8YnIgLz5iLiBwcmFjdGljZSB0cnVlIGFic3RpbmVuY2UgZm9yIDMwIGRheXMgYWZ0ZXIgdGhlIHN0dWR5IGRydWcgYWRtaW5pc3RyYXRpb24sIG9yPGJyIC8%2BYy4gYWdyZWUgdG8gdXNlIGEgYmFycmllciBtZXRob2Qgb2YgY29udHJhY2VwdGlvbiAoZS5nLiBjb25kb20pIGZyb20gU2NyZWVuaW5nIGFuZCB1bnRpbCAzMCBkYXlzIGFmdGVyIGFkbWluaXN0cmF0aW9uIG9mIHRoZSBzdHVkeS4gQWRkaXRpb25hbGx5LCB0aGUgZmVtYWxlIHBhcnRuZXIgbXVzdCB1c2UgYSBoaWdobHkgZWZmZWN0aXZlIGhvcm1vbmFsIG1ldGhvZCwgc3VjaCBhcyBiaXJ0aCBjb250cm9sIHBpbGxzLCBwYXRjaGVzLCBpbXBsYW50cyBvciBpbmplY3Rpb25zOyBvciB1c2UgYW4gaW50cmEgdXRlcmluZSBkZXZpY2UgKElVRCkuPGJyIC8%2BQ29udHJhY2VwdGl2ZSByZXF1aXJlbWVudHMgZG8gbm90IGFwcGx5IHRvIHN1YmplY3RzIHdobyBhcmUgZXhjbHVzaXZlbHkgaW4gc2FtZS1zZXggcmVsYXRpb25zaGlwcy48YnIgLz43LiBIYXZlIGdpdmVuIHdyaXR0ZW4gaW5mb3JtZWQgY29uc2VudCB0byBwYXJ0aWNpcGF0ZSBpbiB0aGlzIHN0dWR5IGluIGFjY29yZGFuY2Ugd2l0aCBsb2NhbCByZWd1bGF0aW9ucy4IMTggWWVhcnMINjAgWWVhcnMFTWFsZXOeHUNsaW5pY2FsbHkgc2lnbmlmaWNhbnQgYWJub3JtYWwgZmluZGluZ3Mgb24gdGhlIHBoeXNpY2FsIGV4YW1pbmF0aW9uLCBtZWRpY2FsIGhpc3RvcnksIEVDRyBvciBsYWJvcmF0b3J5IHJlc3VsdHMgYXMgZGVlbWVkIGJ5IHRoZSBQSSAob3IgZGVsZWdhdGUpLjxiciAvPjIuIENsaW5pY2FsbHkgc2lnbmlmaWNhbnQgZ2FzdHJvaW50ZXN0aW5hbCwgcmVuYWwsIGhlcGF0aWMsIG5ldXJvbG9naWMsIGhhZW1hdG9sb2dpYywgZW5kb2NyaW5lLCBvbmNvbG9naWMsIHB1bG1vbmFyeSwgaW1tdW5vbG9naWMsIHBzeWNoaWF0cmljLCBza2luIG9yIGNhcmRpb3Zhc2N1bGFyIGRpc2Vhc2Ugb3IgYW55IG90aGVyIGNvbmRpdGlvbiwgd2hpY2gsIGluIHRoZSBvcGluaW9uIG9mIHRoZSBQSSAob3IgZGVsZWdhdGUpLCB3b3VsZCBqZW9wYXJkaXNlIHRoZSBzYWZldHkgb2YgdGhlIHN1YmplY3Qgb3IgaW1wYWN0IHRoZSB2YWxpZGl0eSBvZiB0aGUgc3R1ZHkgcmVzdWx0cy48YnIgLz4zLiBIaXN0b3J5IG9mIHNpZ25pZmljYW50IGRydWcgYWxsZXJnaWVzIG9yIHNpZ25pZmljYW50IGFsbGVyZ2ljIHJlYWN0aW9uIG9yIGN1cnJlbnRseSBzdWZmZXJzIGZyb20gY2xpbmljYWxseSBzaWduaWZpY2FudCBzeXN0ZW1pYyBhbGxlcmdpYyBkaXNlYXNlLiBNaWxkIGhheSBmZXZlciBpcyBhY2NlcHRhYmxlLjxiciAvPjQuIEV2aWRlbmNlIG9mIGFibm9ybWFsIHdvdW5kIGhlYWxpbmcgKGUuZy4gaHlwZXJ0cm9waGljIHNjYXJzKSBhcyB0aGUgcmVzdWx0IG9mIHN1cmdlcnkgb3IgdHJhdW1hIGFzIGRlZW1lZCBieSB0aGUgUEkgb3IgZGVsZWdhdGUuPGJyIC8%2BNS4gSGF2ZSByZWNlaXZlZCBvciBpcyBhbnRpY2lwYXRlZCB0byByZWNlaXZlIGFueSBwcmVzY3JpcHRpb24gc3lzdGVtaWMgb3IgdG9waWNhbCBtZWRpY2F0aW9uLCBvciBhbnkgb3ZlciB0aGUgY291bnRlciwgY29tcGxpbWVudGFyeSBvciBhbHRlcm5hdGl2ZSBtZWRpY2luZSA3IGRheXMgcHJpb3IgdG8gdGhlIHN0YXJ0IG9mIGRvc2luZyBvciB3aXRoaW4gNSBoYWxmLWxpdmVzIG9mIHRoZSBkcnVnIHdoaWNoZXZlciBpcyBsb25nZXIgKGV4Y2x1ZGluZyBwYXJhY2V0YW1vbCkuPGJyIC8%2BNi4gU3lzdG9saWMgQlAgPDkwIG9yID4xNDAgbW1IZywgZGlhc3RvbGljIEJQIDw0MCBvciA%2BOTAgbW1IZyBhbmQgSFIgPDQwIG9yID4xMDAgYmVhdHMgcGVyIG1pbnV0ZSAoQlBNKS48YnIgLz43LiBBTFQsIEFTVCBvciBiaWxpcnViaW4gPjEuNXggVUxOLjxiciAvPjguIEdpbGJlcnTigJlzIHN5bmRyb21lIHN1ZmZlcmVycyBhcmUgbm90IGVsaWdpYmxlLjxiciAvPjkuIEV2aWRlbmNlIG9mIHNpZ25pZmljYW50IHJlbmFsIGluc3VmZmljaWVuY3ksIGFzIGluZGljYXRlZCBieSBhbiBlc3RpbWF0ZWQgY3JlYXRpbmluZSBjbGVhcmFuY2UgdXNpbmcgdGhlIENvY2tjcm9mdC1HYXVsdCBmb3JtdWxhIG9mIGxlc3MgdGhhbiA4MCBtTC9taW4gYXQgU2NyZWVuaW5nLjxiciAvPjEwLiBQb3NpdGl2ZSBTY3JlZW5pbmcgdGVzdCBmb3IgSGVwYXRpdGlzIEIgc3VyZmFjZSBhbnRpZ2VuIG9yIEhlcGF0aXRpcyBDIGFudGlib2R5IG9yIGh1bWFuIGltbXVub2RlZmljaWVuY3kgdmlydXMgKEhJVik8YnIgLz4xMS4gQW55IGNvbmRpdGlvbiBkaXJlY3RseSBvciBpbmRpcmVjdGx5IGNhdXNlZCBieSBvciBhc3NvY2lhdGVkIHdpdGggVHJhbnNtaXNzaWJsZSBTcG9uZ2lmb3JtIEVuY2VwaGFsb3BhdGh5IChUU0UpIENyZXV0emZlbGR0LUpha29iIERpc2Vhc2UgKENKRCkgdmFyaWFudCBDcmV1dHpmZWxkdC1KYWtvYiBEaXNlYXNlICh2Q0pEKSBvciBuZXcgdmFyaWFudCBDcmV1dHpmZWxkdC1KYWtvYiBEaXNlYXNlIChudkNKRCk8YnIgLz4xMi4gSGlzdG9yeSBvZiBkcnVnIGFidXNlIGluIHRoZSBsYXN0IDIgeWVhcnM8YnIgLz5NYWxlcyB3aG8gcmVndWxhcmx5IGRyaW5rIG1vcmUgdGhhbiBmb3VyICg0KSB1bml0cyBvZiBhbGNvaG9sIGRhaWx5ICgxIHVuaXQgPSAyODUgbUwgYmVlciAoNC45JSBBbGMuL1ZvbCksIDEwMCBtTCB3aW5lICgxMiUgQWxjLi9Wb2wpLCAzMCBtTCBzcGlyaXQgKDQwJSBBbGMuL1ZvbCkpLjxiciAvPlVzZWQgbmljb3RpbmUtY29udGFpbmluZyBwcm9kdWN0cyAoZS5nLiwgY2lnYXJldHRlcywgY2lnYXJzLCBjaGV3aW5nIHRvYmFjY28sIHNudWZmKSB3aXRoaW4gNiB3ZWVrcyBiZWZvcmUgc2NyZWVuaW5nIGFuZCB1bmFibGUgdG8gYWJzdGFpbiBmcm9tIHVzaW5nIHRoZXNlIHByb2R1Y3RzIHVudGlsIHN0dWR5IGNvbXBsZXRpb24uPGJyIC8%2BMTUuIFVuYWJsZSB0byBhYnN0YWluIGZyb20gY29uc3VtaW5nIGNhZmZlaW5lIGFuZC9vciB4YW50aGluZSBwcm9kdWN0cyAoaS5lLiwgY29mZmVlLCB0ZWEsIGNob2NvbGF0ZSwgYW5kIGNhZmZlaW5lLWNvbnRhaW5pbmcgc29kYXMsIGNvbGFzLCBldGMuKSBmb3IgZGVmaW5lZCBwZXJpb2RzIChlLmcuLCBmb3IgYXQgbGVhc3QgNDggaG91cnMgcHJpb3IgdG8gYWRtaXNzaW9uIHRvIHRoZSBjbGluaWNhbCBmYWNpbGl0eSwgYW5kIHdoaWxzdCBjb25maW5lZCB0byB0aGUgY2xpbmljYWwgZmFjaWxpdHkpLjxiciAvPjE2LiBDb25zdW1wdGlvbiBvZjo8YnIgLz5hLiBHcmFwZWZydWl0LCBncmFwZWZydWl0IGp1aWNlLCBzdGFyIGZydWl0LCBvcmFuZ2VzLCBvcmFuZ2UganVpY2UsIFNldmlsbGUgb3JhbmdlcyAoQ1lQNDUwIGVuenltZXMpIHdpdGhpbiA3IGRheXMgcHJpb3IgdG8gYWRtaW5pc3RyYXRpb24gb2YgdGhlIHN0dWR5IGRydWcuPGJyIC8%2BYi4gUG9wcHkgc2VlZHMgYW5kIHBvcHB5IHNlZWQgcHJvZHVjdHMgd2l0aGluIDcgZGF5cyBwcmlvciB0byBhZG1pbmlzdHJhdGlvbiBvZiB0aGUgc3R1ZHkgZHJ1Zy48YnIgLz5jLiBBbGNvaG9sIHdpdGhpbiA0OCBob3VycyBwcmlvciB0byBhZG1pbmlzdHJhdGlvbiBvZiBzdHVkeSBkcnVnIGFuZCBkdXJpbmcgdGhlIGNvbmR1Y3Qgb2YgdGhlIHN0dWR5LjxiciAvPjE3LiBQb3NpdGl2ZSB1cmluZSBzY3JlZW4gZm9yIGRydWdzIG9mIGFidXNlIGFuZCBhbGNvaG9sIGJyZWF0aCB0ZXN0IGF0IHNjcmVlbmluZyBhbmQgc3R1ZHkgY2hlY2staW4uIFN1YmplY3RzIG1heSB1bmRlcmdvIGEgcmVwZWF0IHVyaW5lIGRydWcgc2NyZWVuIG9yIGFsY29ob2wgYnJlYXRoIHRlc3QgYXQgdGhlIGRpc2NyZXRpb24gb2YgdGhlIFBJIChvciBkZWxlZ2F0ZSkuPGJyIC8%2BMTguIFJlY2VpcHQgb2YgYmxvb2Qgb3IgYmxvb2QgcHJvZHVjdHMsIG9yIGxvc3Mgb3IgZG9uYXRpb24gb2YgNDUwIG1MIG9yIG1vcmUgb2YgYmxvb2Qgd2l0aGluIDkwIGRheXMgYmVmb3JlIHRoZSBmaXJzdCBkb3NlIGFkbWluaXN0cmF0aW9uLjxiciAvPjE5LiBBbnkgY29uZGl0aW9uIHRoYXQgd291bGQgaW50ZXJmZXJlIHdpdGggZHJ1ZyBhYnNvcnB0aW9uIChlLmcuIGNocm9uaWMgZGlhcnJob2VhKS48YnIgLz4yMC4gSGF2ZSBwYXJ0aWNpcGF0ZWQgaW4gYSBjbGluaWNhbCB0cmlhbCBvciBoYXZlIHJlY2VpdmVkIGFuIGV4cGVyaW1lbnRhbCB0aGVyYXB5IHdpdGhpbiAzIG1vbnRocyBvciA1IGhhbGYtbGl2ZXMgb2YgdGhlIGRydWcsIHdoaWNoZXZlciBpcyB0aGUgbG9uZ2VyLCBwcmlvciB0byBkb3NpbmcuPGJyIC8%2BMjEuIENsaW5pY2FsbHkgc2lnbmlmaWNhbnQgYWJub3JtYWxpdHkgZGV0ZWN0ZWQgb24gY2FyZGlhYyB0ZWxlbWV0cnkgcHJlLWRvc2UuPGJyIC8%2BMjIuIFN5c3RlbWljIGluZmVjdGlvbiBvdGhlciB0aGFuIGNvcnl6YSBpbiB0aGUgbGFzdCA0IHdlZWtzIHByaW9yIHRvIGRvc2luZy4OZXhwYW5kYWJsZS1ib3gaQ29tbWVyY2lhbCBzZWN0b3IvSW5kdXN0cnkJU3luYWlyZ2VuaUxldmVsIEYgKDgxMCkgU291dGggQmxvY2ssIFNvdXRoYW1wdG9uIEdlbmVyYWwgSG9zcGl0YWw8YnIgLz5UcmVtb25hIFJvYWQsPGJyIC8%2BU291dGhhbXB0b24sIFNPMTYgNllELCBVSw5Vbml0ZWQgS2luZ2RvbQJNchBNYXJjaW4gTWFua293c2tpb1RyYW5TY3JpcCBQYXJ0bmVycyBMTFAsPGJyIC8%2BNDAwIFRoYW1lcyBWYWxsZXkgUGFyayBEcml2ZSwgVGhhbWVzIFZhbGxleSBQYXJrLDxiciAvPlJlYWRpbmcsIFJHNiAxUFQsIFVLLjxiciAvPg5Vbml0ZWQgS2luZ2RvbRMrNDQgKDApMTE4IDk2MyA3ODQ2J21hcmNpbi5tYW5rb3dza2lAdHJhbnNjcmlwLXBhcnRuZXJzLmNvbQZoaWRkZW5kAg8PFCsABA8WBB8FZR8DZ2RkZDwrAAQBABYCHwJlZAIRDxYCHwFoZAITD2QWBgIDDw8WAh8NZWRkAgUPDxYCHw0FJS9UcmlhbFBkZi9UcmlhbFJldmlldy0zNzM5MjAucGRmP3Q9MTdkZAIvDzwrAAQBAA8WAh8DZ2RkAh8PZBYWZg8VAhByZXN1bHRzLWhlYWRlci0xEVRyaWFsIGZyb20gQU5aQ1RSZAIBDw8WAh8NBT1%2BL1RyaWFsL1JlZ2lzdHJhdGlvbi9UcmlhbFJldmlldy5hc3B4P2lkPTM3Mzg5MiZpc1Jldmlldz10cnVlZGQCAw8PFgIfDQUlL1RyaWFsUGRmL1RyaWFsUmV2aWV3LTM3Mzg5Mi5wZGY%2FdD0xN2RkAgcPDxYCHwIFBjM3Mzg5MmRkAgkPDxYCHwIFDjEyNjE3MDAxNTYzMzU4ZGQCCw8PFgIfAmVkZAINDw8WAh8CBQVGYWxzZWRkAg4PFS0QcmVzdWx0cy1oZWFkZXItMpwBRWZmZWN0cyBvZiBpbnRyYWdhc3RyaWMgYWRtaW5pc3RyYXRpb24gb2YgTC10cnlwdG9waGFuIG9uIGFwcGV0aXRlIGFuZCBlbmVyZ3kgaW50YWtlLCBhbmQgZ3V0IGhvcm1vbmUgcmVsZWFzZSwgaW4gaGVhbHRoeSwgbm9ybWFsIHdlaWdodCBhbmQgb2Jlc2Ugc3ViamVjdHMuEk5vdCB5ZXQgcmVjcnVpdGluZwdpbmZvLWxpCEFwcHJvdmVkB2luZm8tbGkYUHJvc3BlY3RpdmVseSByZWdpc3RlcmVkMUhhcyB0aGUgdHJpYWwgYmVlbiB1cGRhdGVkIGluIHRoZSBsYXN0IDEyIG1vbnRocz8KVXAgdG8gZGF0ZQoyMC8xMS8yMDE3EnJlc3VsdHMtaGVhZGVyLTEwMAhBcHByb3ZlZApVcCB0byBkYXRlE0FDVFJOMTI2MTcwMDE1NjMzNTgQMjAgTm92ZW1iZXIgMjAxNwRzaG93Q09iZXNpdHksIFR5cGUgMiBEaWFiZXRlcywgSGVhbHRoeSBIdW1hbiBHYXN0cm9pbnRlc3RpbmFsIFBoeXNpb2xvZ3kEc2hvdwlBdXN0cmFsaWEEc2hvdw9Tb3V0aCBBdXN0cmFsaWEEc2hvdwRzaG93Ek5vdCB5ZXQgcmVjcnVpdGluZxAyMCBOb3ZlbWJlciAyMDE3BHNob3cIQXBwcm92ZWTLFk9iZXNpdHkgaGFzIHJlYWNoZWQgZXBpZGVtaWMgcHJvcG9ydGlvbnMgZ2xvYmFsbHkgYW5kIGlzIGFzc29jaWF0ZWQgd2l0aCBzZXJpb3VzIGNvLW1vcmJpZGl0aWVzLCBpbmNsdWRpbmcgdHlwZSAyIGRpYWJldGVzLiBPbmNlIGFkaXBvc2UgdGlzc3VlIGhhcyBiZWVuIGFjY3VtdWxhdGVkLCBhbmQgZm9vZCBpbnRha2UgaXMgbGltaXRlZCBieSBsb3cgY2Fsb3JpZSBkaWV0cywgY291bnRlci1yZWd1bGF0b3J5IG1lY2hhbmlzbXMgaW5kdWNlIGFuIGluY3JlYXNlIGluIGFwcGV0aXRlIGFuZCBhIGRlY3JlYXNlIGluIGVuZXJneSBleHBlbmRpdHVyZSwgd2hpY2ggbWFrZXMgd2VpZ2h0IGxvc3MgdmVyeSBkaWZmaWN1bHQgdG8gbWFpbnRhaW4uIFRvIGNvbWJhdCB0aGUgZ2xvYmFsIGJ1cmRlbiBvZiBvYmVzaXR5IGFuZCBpdHMgY28tbW9yYmlkaXRpZXMsIGEgbWFqb3IgY2hhbGxlbmdlIGxpZXMgaW4gdGhlIGRldmVsb3BtZW50IG9mIGVmZmVjdGl2ZSB0aGVyYXBpZXMgdGhhdCBpbmNyZWFzZSBmdWxsbmVzcyBhbmQgc2F0aWV0eSwgYW5kIHJlc3VsdCBpbiBpbXByb3ZlbWVudHMgaW4gYmxvb2QgZ2x1Y29zZSBjb250cm9sLCB3aGlsZSBsYWNraW5nIGFkdmVyc2UgZWZmZWN0cyB0aGF0IGFyZSBvZnRlbiBhc3NvY2lhdGVkIHdpdGggY3VycmVudCB0aGVyYXBpZXMuIDxiciAvPjxiciAvPlRoZXJlIGlzIGluY3JlYXNpbmcgZXZpZGVuY2UgdGhhdCBudXRyaWVudCBzdGltdWxpIGluIHRoZSBnYXN0cm9pbnRlc3RpbmFsIHRyYWN0IHBsYXkgYSBjZW50cmFsIHJvbGUgaW4gdGhlIGNvbnRyb2wgb2YgZW5lcmd5IGludGFrZSBhbmQgYmxvb2QgZ2x1Y29zZS4gUHJvdGVpbnMsIGFuZCB0aGVpciBidWlsZGluZyBibG9ja3MsIGFtaW5vIGFjaWRzLCBhcmUgb2YgaW50ZXJlc3QsIGFzIGhpZ2gtcHJvdGVpbiBkaWV0cyBhcmUgdmVyeSBlZmZlY3RpdmUgZm9yIHdlaWdodCBsb3NzLCBwYXJ0aWN1bGFybHkgbG9zcyBvZiBmYXQsIHJhdGhlciB0aGFuIG11c2NsZSBtYXNzLCBhbmQgZm9yIGltcHJvdmluZyBwb3N0cHJhbmRpYWwgZ2x5Y2FlbWljIGNvbnRyb2wsIGluIG9iZXNlIGluZGl2aWR1YWxzIHdpdGggYW5kIHdpdGhvdXQgdHlwZSAyIGRpYWJldGVzLiBUaGVyZSBpcyBzb21lIGV2aWRlbmNlIHRoYXQgYSBudW1iZXIgb2YgYW1pbm8gYWNpZHMgKGluY2x1ZGluZyBMLXRyeXB0b3BoYW4pIGFsc28gaGF2ZSBlZmZlY3RzIG9uIGVuZXJneSBpbnRha2UsIGJsb29kIGdsdWNvc2UgYW5kIGd1dCBmdW5jdGlvbiBpbiBodW1hbnMuIFdlIGhhdmUgcHJldmlvdXNseSBpbnZlc3RpZ2F0ZWQgdGhlIGVmZmVjdHMgb2YgaW50cmFkdW9kZW5hbCB0cnlwdG9waGFuIGFuZCBmb3VuZCB0aGF0IGl0cyBlZmZlY3RzIHRvIHJlZHVjZSBzdWJzZXF1ZW50IGVuZXJneSBpbnRha2Ugd2VyZSByZWxhdGVkIHRvIHBsYXNtYSBjaG9sZWN5c3Rva2luaW4gYW5kIHRyeXB0b3BoYW4gY29uY2VudHJhdGlvbnMgcHJpb3IgdG8gdGhlIHRlc3QgbWVhbC4gVGh1cywgYW1pbm8gYWNpZHMsIGhlcmUgc3BlY2lmaWNhbGx5IHRyeXB0b3BoYW4sIG1heSByZXByZXNlbnQgcG90ZW50aWFsIHRoZXJhcGV1dGljIGFwcHJvYWNoZXMgZm9yIG9iZXNpdHkgYW5kIHR5cGUgMiBkaWFiZXRlcy48YnIgLz48YnIgLz5XZSBoYXZlIHJlY2VudGx5IGV2YWx1YXRlZCB0aGUgZWZmZWN0cyBvZiBpbnRyYWdhc3RyaWMgdHJ5cHRvcGhhbiBhdCAzIGcgb24gZ2FzdHJpYyBlbXB0eWluZywgYmxvb2QgZ2x1Y29zZSwgZ3V0IGhvcm1vbmVzLCBhbmQgYXBwZXRpdGUgZm9sbG93aW5nIGEgbWl4ZWQtbnV0cmllbnQgZHJpbmsuIEVuZXJneSBpbnRha2UgYXQgYSBzdWJzZXF1ZW50IGJ1ZmZldCBzdHlsZSBtZWFsIHdhcyBhbHNvIGFzc2Vzc2VkLiBMLXRyeXB0b3BoYW4gc2xvd2VkIGdhc3RyaWMgZW1wdHlpbmcgaW4gYm90aCBsZWFuIGFuZCBvYmVzZSBncm91cHMuIFdoaWxlIG92ZXJhbGwgZW5lcmd5IGludGFrZSB3YXMgbm90IGFmZmVjdGVkLCB0aGVyZSB3YXMgYSBkZWNyZWFzZSBpbiBlbmVyZ3kgaW50YWtlIGluIGFwcHJveGltYXRlbHkgaGFsZiB0aGUgc3ViamVjdHMgb2YgZWFjaCBncm91cCwgYnV0IGxlc3Mgc28gaW4gdGhlIG9iZXNlLiBJbiB0aGUgbGVhbiBncm91cCwgZW5lcmd5IGludGFrZSB3YXMgZm91bmQgdG8gYmUgcmVsYXRlZCB0byBlbGV2YXRlZCBjb25jZW50cmF0aW9ucyBvZiBwbGFzbWEgdHJ5cHRvcGhhbi4gQSBsaW1pdGF0aW9uIG9mIHRoaXMgc3R1ZHkgZGVzaWduIG1heSBoYXZlIGJlZW4gdG9vIGxvbmcgYSBkdXJhdGlvbiBiZXR3ZWVuIHRyeXB0b3BoYW4gYWRtaW5pc3RyYXRpb24gYW5kIHRoZSBtZWFsIGF0IHdoaWNoIGVuZXJneSBpbnRha2Ugd2FzIGFzc2Vzc2VkICgxIGhyIDE1IG1pbiksIHRodXMgbWl0aWdhdGluZyB0aGUgb3ZlcmFsbCBlZmZlY3Qgb24gZW5lcmd5IGludGFrZS4gPGJyIC8%2BPGJyIC8%2BVGhpcyBuZXcgc3R1ZHkgaGFzIGJlZW4gZGVzaWduZWQgd2l0aCBhIHNob3J0ZXIgZHVyYXRpb24gYmV0d2VlbiB0cnlwdG9waGFuIGFkbWluaXN0cmF0aW9uIGFuZCBidWZmZXQgbWVhbCAoMzAgbWluKSBhbmQgd2lsbCBpbnZlc3RpZ2F0ZSB0aGUgZWZmZWN0cyBvZiBpbnRyYWdhc3RyaWMgYWRtaW5pc3RyYXRpb24gb2YgYSAzZyBkb3NlIG9mIEwtdHJ5cHRvcGhhbiwgdnMgc2FsaW5lIGNvbnRyb2wsIG9uIGVuZXJneSBpbnRha2UgYXQgYSBzdWJzZXF1ZW50IGFkIGxpYml0dW0gYnVmZmV0IHN0eWxlIG1lYWwsIGFuZCB0aGUgcmVsYXRpb25zaGlwIHdpdGggcGxhc21hIGd1dCBob3Jtb25lIGFuZCB0cnlwdG9waGFuIGNvbmNlbnRyYXRpb25zLCBhcHBldGl0ZSBwZXJjZXB0aW9ucyBhbmQgaW50cmFnYXN0cmljIHZvbHVtZSBpbiBoZWFsdGh5LCBub3JtYWwgd2VpZ2h0IGFuZCBvYmVzZSwgc3ViamVjdHMuugFIZWFsdGh5IGxlYW4gKEJNSSAxOS0yNSBrZy9tMiksIGFuZCBoZWFsdGh5IG9iZXNlIChCTUkgMzAtMzcga2cvbTIpLCBtYWxlIHN1YmplY3RzIGFnZWQgYmV0d2VlbiAxOCAtIDU1IHllYXJzLCBub24tc21va2VyLCBhbmQgd2l0aG91dCBzaWduaWZpY2FudCBpbGxuZXNzIHdpbGwgYmUgaW5jbHVkZWQgaW4gdGhlIHN0dWR5LiAIMTggWWVhcnMINTUgWWVhcnMFTWFsZXPeClNpZ25pZmljYW50IGdhc3Ryb2ludGVzdGluYWwgc3ltcHRvbXMsIGRpc2Vhc2Ugb3Igc3VyZ2VyeTsgPGJyIC8%2BQ3VycmVudCBnYWxsYmxhZGRlciBvciBwYW5jcmVhdGljIGRpc2Vhc2U7IDxiciAvPkNhcmRpb3Zhc2N1bGFyIG9yIHJlc3BpcmF0b3J5IGRpc2Vhc2VzOyA8YnIgLz5EaWFnbm9zZWQgdHlwZSAyIGRpYWJldGVzOzxiciAvPkFueSBvdGhlciBpbGxuZXNzZXMgYXMgYXNzZXNzZWQgYnkgdGhlIGludmVzdGlnYXRvciAoaW5jbHVkaW5nIGNocm9uaWMgaWxsbmVzc2VzIG5vdCBleHBsaWNpdGx5IGxpc3RlZCBhYm92ZSk7IDxiciAvPlVzZSBvZiBwcmVzY3JpYmVkIG9yIG5vbi1wcmVzY3JpYmVkIG1lZGljYXRpb25zIChpbmNsdWRpbmcgdml0YW1pbnMgYW5kIGhlcmJhbCBzdXBwbGVtZW50cykgd2hpY2ggbWF5IGFmZmVjdCBlbmVyZ3kgbWV0YWJvbGlzbSwgZ2FzdHJvaW50ZXN0aW5hbCBmdW5jdGlvbiwgYm9keSB3ZWlnaHQgb3IgYXBwZXRpdGUgKGVnIGRvbXBlcmlkb25lLCBjaXNhcHJpZGUsIGFudGljaG9saW5lcmdpYyBkcnVncyAoZWcgYXRyb3BpbmUpLCBtZXRvY2xvcHJhbWlkZSwgZXJ5dGhyb215Y2luLCBoeW9zY2luZSwgb3JsaXN0YXQsIGdyZWVuIHRlYSBleHRyYWN0cywgQXN0cmFnYWx1cywgU3QgSm9obnMgV29ydCBldGMuKTsgPGJyIC8%2BSW5kaXZpZHVhbHMgd2l0aCBsb3cgZmVycml0aW4gKGxlc3MgdGhhbiAzMCB1Zy9MKSBvciBpcm9uIChsZXNzIHRoYW4gOCB1bW9sL0wpIGxldmVscywgb3Igd2hvIGhhdmUgZG9uYXRlZCBibG9vZCBpbiB0aGUgMTIgd2Vla3MgcHJpb3IgdG8gdGFraW5nIHBhcnQgaW4gdGhlIHN0dWR5OyA8YnIgLz5MYWN0b3NlIGludG9sZXJhbmNlL290aGVyIGZvb2QgYWxsZXJneShpZXMpOyA8YnIgLz5WZWdldGFyaWFuczsgPGJyIC8%2BQ3VycmVudCBpbnRha2Ugb2YgZ3JlYXRlciB0aGFuIDIgc3RhbmRhcmQgZHJpbmtzIG9uIGdyZWF0ZXIgdGhhbiA1IGRheXMgcGVyIHdlZWs7IDxiciAvPkN1cnJlbnQgc21va2VycyBvZiBjaWdhcmV0dGVzL2NpZ2Fycy9tYXJpanVhbmE7IDxiciAvPkN1cnJlbnQgaW50YWtlIG9mIGFueSBpbGxpY2l0IHN1YnN0YW5jZTsgPGJyIC8%2BSGlnaCBwZXJmb3JtYW5jZSBhdGhsZXRlczsgPGJyIC8%2BSW5hYmlsaXR5IHRvIGNvbXByZWhlbmQgc3R1ZHkgcHJvdG9jb2w7IDxiciAvPkluYWJpbGl0eSB0byB0b2xlcmF0ZSBuYXNvLWdhc3RyaWMgdHViZTsgPGJyIC8%2BPGJyIC8%2BSGVhbHRoeSBzdWJqZWN0cyBvbmx5OiA8YnIgLz5SZXN0cmFpbmVkIGVhdGVycyAoc2NvcmUgPjEyIG9uIHRoZSB0aHJlZSBmYWN0b3IgZWF0aW5nIHF1ZXN0aW9ubmFpcmUpLjxiciAvPjxiciAvPk9iZXNlIHN1YmplY3RzIG9ubHk6IDxiciAvPkhiQTFjID42LjUlIA5leHBhbmRhYmxlLWJveApJbmRpdmlkdWFsHVByb2YuIENocmlzdGluZSBGZWlubGUtQmlzc2V0uAFTY2hvb2wgb2YgTWVkaWNpbmUsIFVuaXZlcnNpdHkgb2YgQWRlbGFpZGU8YnIgLz5MZXZlbCA1LCBBZGVsYWlkZSBIZWFsdGggYW5kIE1lZGljYWwgU2NpZW5jZXMgQnVpbGRpbmc8YnIgLz5DbnIgTm9ydGggVGVycmFjZSBhbmQgR2VvcmdlIFN0cmVldDxiciAvPkFkZWxhaWRlIDxiciAvPlNvdXRoIEF1c3RyYWxpYSA1MDA1CUF1c3RyYWxpYQRQcm9mF0NocmlzdGluZSBGZWlubGUtQmlzc2V0uAFTY2hvb2wgb2YgTWVkaWNpbmUsIFVuaXZlcnNpdHkgb2YgQWRlbGFpZGU8YnIgLz5MZXZlbCA1LCBBZGVsYWlkZSBIZWFsdGggYW5kIE1lZGljYWwgU2NpZW5jZXMgQnVpbGRpbmc8YnIgLz5DbnIgTm9ydGggVGVycmFjZSBhbmQgR2VvcmdlIFN0cmVldDxiciAvPkFkZWxhaWRlIDxiciAvPlNvdXRoIEF1c3RyYWxpYSA1MDA1CUF1c3RyYWxpYQ8rNjEgOCA4MzEzIDYwNTMgY2hyaXN0aW5lLmZlaW5sZUBhZGVsYWlkZS5lZHUuYXUGaGlkZGVuZAIPDxQrAAQPFgQfBWUfA2dkZGQ8KwAEAQAWAh8CZWQCEQ8WAh8BaGQCEw9kFgYCAw8PFgIfDWVkZAIFDw8WAh8NBSUvVHJpYWxQZGYvVHJpYWxSZXZpZXctMzczODkyLnBkZj90PTE3ZGQCLw88KwAEAQAPFgIfA2dkZAIhD2QWFmYPFQIQcmVzdWx0cy1oZWFkZXItMRFUcmlhbCBmcm9tIEFOWkNUUmQCAQ8PFgIfDQU9fi9UcmlhbC9SZWdpc3RyYXRpb24vVHJpYWxSZXZpZXcuYXNweD9pZD0zNzM5MzImaXNSZXZpZXc9dHJ1ZWRkAgMPDxYCHw0FJS9UcmlhbFBkZi9UcmlhbFJldmlldy0zNzM5MzIucGRmP3Q9MTdkZAIHDw8WAh8CBQYzNzM5MzJkZAIJDw8WAh8CBQ4xMjYxNzAwMTU2MjM2OWRkAgsPDxYCHwJlZGQCDQ8PFgIfAgUFRmFsc2VkZAIODxUtEHJlc3VsdHMtaGVhZGVyLTJtUHVsbW9uYXJ5IGFydGVyeSBwdWxzYXRpbGl0eSBkdXJpbmcgYW5kIGFmdGVyIGV4YWNlcmJhdGlvbnMgb2YgQ09QRDogYSBwcm9zcGVjdGl2ZSBvYnNlcnZhdGlvbmFsIGNvaG9ydCBzdHVkeRJOb3QgeWV0IHJlY3J1aXRpbmcHaW5mby1saRtTdWJtaXR0ZWQsIG5vdCB5ZXQgYXBwcm92ZWQHaW5mby1saStQcm9zcGVjdGl2ZWx5IHJlZ2lzdGVyZWQ8YnIgLz4ocHJvdmlzaW9uYWwpMUhhcyB0aGUgdHJpYWwgYmVlbiB1cGRhdGVkIGluIHRoZSBsYXN0IDEyIG1vbnRocz8KVXAgdG8gZGF0ZQoxNy8xMS8yMDE3EnJlc3VsdHMtaGVhZGVyLTEwMBtTdWJtaXR0ZWQsIG5vdCB5ZXQgYXBwcm92ZWQKVXAgdG8gZGF0ZRRBQ1RSTjEyNjE3MDAxNTYyMzY5cBAxNyBOb3ZlbWJlciAyMDE3BHNob3csQ09QRCAtIGNocm9uaWMgb2JzdHJ1Y3RpdmUgcHVsbW9uYXJ5IGRpc2Vhc2UEc2hvdwlBdXN0cmFsaWEEc2hvdwhWaWN0b3JpYQRzaG93BHNob3cSTm90IHlldCByZWNydWl0aW5nEDEyIEZlYnJ1YXJ5IDIwMTgEc2hvdxtTdWJtaXR0ZWQsIG5vdCB5ZXQgYXBwcm92ZWT0A01hbnkgcGF0aWVudHMgd2l0aCBDaHJvbmljIE9ic3RydWN0aXZlIFB1bG1vbmFyeSBEaXNlYXNlIChDT1BEKSBhbHNvIGhhdmUgZWxldmF0ZWQgbHVuZyBibG9vZCBwcmVzc3VyZXMsIG9yIHB1bG1vbmFyeSBoeXBlcnRlbnNpb24gKFBIKS4gSGF2aW5nIGJvdGggY29uZGl0aW9ucyBpbmNyZWFzZXMgdGhlIHJpc2sgb2YgZGVhdGguIEl0IGlzIGRpZmZpY3VsdCB0byBkaWFnbm9zZSBQSCBpbiBDT1BELiBXZSB3aWxsIGJlIHVzaW5nIGEgbmV3IENvbXB1dGVkIFRvbW9ncmFwaHkgKFgtcmF5IGltYWdpbmcpIHRlY2huaXF1ZSB0byBpbnZlc3RpZ2F0ZSBhIG1hcmtlciBvZiBQSCBjYWxsZWQg4oCYcHVsbW9uYXJ5IGFydGVyeSBwdWxzYXRpbGl0eeKAmS4gSWYgUEggY2FuIGJlIGRpYWdub3NlZCBlYXNpbHkgYW5kIGFjY3VyYXRlbHkgbmV3IHRyZWF0bWVudHMgY2FuIGJlIGRldmlzZWQgYW5kIHJlc2VhcmNoZWQgcG90ZW50aWFsbHkgaW1wcm92aW5nIG91dGNvbWVzIGluIENPUEQubUFjdXRlIGV4YWNlcmJhdGlvbnMgb2YgQ09QRCBhZG1pdHRlZCB0byBNb25hc2ggTWVkaWNhbCBDZW50cmUsIENsYXl0b24sIFZpY3RvcmlhLCBBdXN0cmFsaWE8YnIgLz5TaW51cyByaHl0aG0IMzUgWWVhcnMIODUgWWVhcnMWQm90aCBtYWxlcyBhbmQgZmVtYWxlc%2BMBV0hPIGdyb3VwIEkgb3IgSUlJIHB1bG1vbmFyeSBoeXBlcnRlbnNpb248YnIgLz5VbmFibGUgdG8gdW5kZXJnbyBDVCAoZWcgYWxsZXJneSB0byBpbnRyYXZlbm91cyBpb2RpbmF0ZWQgY29udHJhc3QsIGVnZnIgPDYwLCB3ZWlnaHQgPjIwNGtnIGR1ZSB0byBzY2FubmVyIGxpbWl0YXRpb25zLCBwcmVnbmFudCk8YnIgLz5VbmFibGUgdG8gY29uc2VudCBvciBwYXJ0aWNpcGF0ZSBpbiBmb2xsb3cgdXAOZXhwYW5kYWJsZS1ib3gISG9zcGl0YWwNTW9uYXNoIEhlYWx0aDZNb25hc2ggSGVhbHRoLCAyNDYgQ2xheXRvbiBSZCwgQ2xheXRvbiwgMzE2OCwgVmljdG9yaWEJQXVzdHJhbGlhAkRyClBhdWwgTGVvbmdTTW9uYXNoIEx1bmcgJiBTbGVlcDxiciAvPk1vbmFzaCBIZWFsdGg8YnIgLz4yNDYgQ2xheXRvbiBSZCwgQ2xheXRvbiwgMzE2OCwgVmljdG9yaWEJQXVzdHJhbGlhECs2MSAwMyA5NTk0IDI5MDAbcGF1bC5sZW9uZ0Btb25hc2hoZWFsdGgub3JnBmhpZGRlbmQCDw8UKwAEDxYEHwVlHwNnZGRkPCsABAEAFgIfAmVkAhEPFgIfAWhkAhMPZBYGAgMPDxYCHw1lZGQCBQ8PFgIfDQUlL1RyaWFsUGRmL1RyaWFsUmV2aWV3LTM3MzkzMi5wZGY%2FdD0xN2RkAi8PPCsABAEADxYCHwNnZGQCIw9kFhZmDxUCEHJlc3VsdHMtaGVhZGVyLTERVHJpYWwgZnJvbSBBTlpDVFJkAgEPDxYCHw0FPX4vVHJpYWwvUmVnaXN0cmF0aW9uL1RyaWFsUmV2aWV3LmFzcHg%2FaWQ9MzczNTM3JmlzUmV2aWV3PXRydWVkZAIDDw8WAh8NBSUvVHJpYWxQZGYvVHJpYWxSZXZpZXctMzczNTM3LnBkZj90PTE3ZGQCBw8PFgIfAgUGMzczNTM3ZGQCCQ8PFgIfAgUOMTI2MTcwMDE1NjEzNzBkZAILDw8WAh8CZWRkAg0PDxYCHwIFBUZhbHNlZGQCDg8VLRByZXN1bHRzLWhlYWRlci0ywAFBIFBoYXNlIDEgRXhwbG9yYXRvcnkgUGxhY2VibyBhbmQgQWN0aXZlLUNvbnRyb2xsZWQsIERvdWJsZS1CbGluZCwgU2luZ2xlIGFuZCBNdWx0aXBsZS1Eb3NlIEVzY2FsYXRpb24sIFBoYXJtYWNva2luZXRpYywgUGhhcm1hY29keW5hbWljIGFuZCBGb29kIEVmZmVjdCBTdHVkeSBvZiBDTlNBLTAwMSBpbiBIZWFsdGh5IFZvbHVudGVlcnMKUmVjcnVpdGluZwdpbmZvLWxpCEFwcHJvdmVkB2luZm8tbGkaUmV0cm9zcGVjdGl2ZWx5IHJlZ2lzdGVyZWQxSGFzIHRoZSB0cmlhbCBiZWVuIHVwZGF0ZWQgaW4gdGhlIGxhc3QgMTIgbW9udGhzPwpVcCB0byBkYXRlCjE2LzExLzIwMTcScmVzdWx0cy1oZWFkZXItMTAwCEFwcHJvdmVkClVwIHRvIGRhdGUTQUNUUk4xMjYxNzAwMTU2MTM3MBAxNiBOb3ZlbWJlciAyMDE3BHNob3cQU2VnYXdhIFN5bmRyb21lIARzaG93CUF1c3RyYWxpYQRzaG93CFZpY3RvcmlhBHNob3cEc2hvdwpSZWNydWl0aW5nA24vYQRzaG93CEFwcHJvdmVkmQJUaGUgcHVycG9zZSBvZiB0aGlzIHN0dWR5IGlzIHRvIGVzdGFibGlzaCB0aGUgc2FmZXR5IGFuZCB0b2xlcmFiaWxpdHkgb2Ygb3JhbGx5IGFkbWluaXN0ZXJlZCBDTlNBLTAwMSBpbiBoZWFsdGh5IHN1YmplY3RzIGZvbGxvdyBzaW5nbGUgYW5kIG11bHRpcGxlLWRvc2UgZXNjYWxhdGlvbjxiciAvPjxiciAvPlRoaXMgUGhhc2UgMSBzdHVkeSB3aWxsIHN1cHBvcnQgZG9zZSBzZWxlY3Rpb24gZm9yIGZ1dHVyZSBzdHVkaWVzIGluIHBhdGllbnRzIHdpdGggU2VnYXdhIFN5bmRyb21lIDxiciAvPpUNMS4JTWFsZXMgb3IgZmVtYWxlcyAxOCB5ZWFycyBvbGQgYW5kIGFib3ZlIGFuZCB3ZWlnaGluZyBlcXVhbCB0byBvciBncmVhdGVyIHRoYW4gNTUga2cgYW5kIGxlc3MgdGhhbiBvciBlcXVhbCAxMDAga2c8YnIgLz4yLglJbmZvcm1lZCBjb25zZW50IDxiciAvPjMuCUZlbWFsZXMgbXVzdCBiZSBlaXRoZXIgcG9zdG1lbm9wYXVzYWwgZm9yIGF0IGxlYXN0IDEgeWVhciBvciBzdXJnaWNhbGx5IHN0ZXJpbGUgKGhhdmluZyB1bmRlcmdvbmUgdHViYWwgbGlnYXRpb24sIGh5c3RlcmVjdG9teSwgb3IgYmlsYXRlcmFsIG9vcGhvcmVjdG9teSkgZm9yIGF0IGxlYXN0IDYgbW9udGhzIG9yLCBpZiBvZiBjaGlsZGJlYXJpbmcgcG90ZW50aWFsIGFuZCBub3QgYWJzdGluZW50LCB3aWxsaW5nIHRvIHVzZSBhbiBlZmZlY3RpdmUgbWV0aG9kIG9mIGNvbnRyYWNlcHRpb24gZnJvbSBTY3JlZW5pbmcgdGhyb3VnaCAzMCBkYXlzIGFmdGVyIHRoZSBsYXN0IGRvc2Ugb2Ygc3R1ZHkgZHJ1Zzo8YnIgLz4tSG9ybW9uYWwgY29udHJhY2VwdGlvbiAoc3RhYmxlIGRvc2UgZm9yIDMgbW9udGhzKTxiciAvPi1JbnRyYXV0ZXJpbmUgZGV2aWNlL0ludHJhdXRlcmluZSBIb3Jtb25lLXJlbGVhc2luZyBTeXN0ZW08YnIgLz4tQmFycmllciBjb250cmFjZXB0aXZlIG1ldGhvZCAoZGlhcGhyYWdtLCBjZXJ2aWNhbCBjYXAsIGNvbnRyYWNlcHRpdmUgc3BvbmdlLCBjb25kb20pIDxiciAvPkZlbWFsZXMgd2hvIGFyZSBhYnN0aW5lbnQgd2lsbCBub3QgYmUgcmVxdWlyZWQgdG8gdXNlIGEgY29udHJhY2VwdGl2ZSBtZXRob2QgdW5sZXNzIHRoZXkgYmVjb21lIHNleHVhbGx5IGFjdGl2ZS48YnIgLz40LglNYWxlcyB3aXRoIGZlbWFsZSBwYXJ0bmVycyBvZiBjaGlsZGJlYXJpbmcgcG90ZW50aWFsIG11c3QgYWdyZWUgdG8gdXNlIGJhcnJpZXIgY29udHJhY2VwdGl2ZSAoaS5lLiwgY29uZG9tKSBhbmQgdGhlaXIgZmVtYWxlIHBhcnRuZXJzIG11c3QgdXNlIGEgaGlnaGx5IGVmZmVjdGl2ZSBtZXRob2Qgb2YgY29udHJhY2VwdGlvbiBmcm9tIFNjcmVlbmluZyB0aHJvdWdoIDMwIGRheXMgYWZ0ZXIgdGhlIGxhc3QgZG9zZSBvZiBzdHVkeSBkcnVnLiBNYWxlcyBtdXN0IGFsc28gcmVmcmFpbiBmcm9tIHNwZXJtIGRvbmF0aW9ucyBkdXJpbmcgdGhpcyB0aW1lIHBlcmlvZC48YnIgLz41LglNYWxlcyB3aG8gYXJlIGFic3RpbmVudCB3aWxsIG5vdCBiZSByZXF1aXJlZCB0byB1c2UgYSBjb250cmFjZXB0aXZlIG1ldGhvZCB1bmxlc3MgdGhleSBiZWNvbWUgc2V4dWFsbHkgYWN0aXZlLjxiciAvPjYuCUZlbWFsZXMgd2l0aCBhIG5lZ2F0aXZlIHByZWduYW5jeSB0ZXN0IGF0IFNjcmVlbmluZyBhbmQgb24gRGF5IDEgcHJpb3IgdG8gZG9zaW5nPGJyIC8%2BNy4JQ3JlYXRpbmluZSBjbGVhcmFuY2UgKENyQ2wpID45MCBtTC9taW48YnIgLz44LglXaWxsaW5nIGFuZCBhYmxlIHRvIGNvbXBseSB3aXRoIHRoZSBwcm90b2NvbDxiciAvPjkuCUhhdmUgbm90IHVzZWQgdG9iYWNjbyAoZS5nLiwgY2lnYXJldHRlcywgZS1jaWdhcmV0dGVzLCBjaWdhcnMsIHNtb2tlbGVzcyB0b2JhY2NvKSBmb3IgMiB3ZWVrcyBwcmlvciB0byB0aGUgU2NyZWVuaW5nIHZpc2l0IGFuZCB3aWxsaW5nbmVzcyB0byBhYnN0YWluIGZyb20gdGhlc2UgcHJvZHVjdHMgdGhyb3VnaCB0aGUgY29tcGxldGlvbiBvZiB0aGUgc3R1ZHk8YnIgLz4IMTggWWVhcnMJIE5vIGxpbWl0FkJvdGggbWFsZXMgYW5kIGZlbWFsZXOEFDEuCUFueSBzaWduaWZpY2FudCBjaHJvbmljIG1lZGljYWwgaWxsbmVzcywgYXMgZGV0ZXJtaW5lZCBieSB0aGUgSW52ZXN0aWdhdG9yPGJyIC8%2BMi4JR2FzdHJvaW50ZXN0aW5hbCBkaXNlYXNlIChzdWNoIGFzIGlycml0YWJsZSBib3dlbCBzeW5kcm9tZSwgaW5mbGFtbWF0b3J5IGJvd2VsIGRpc2Vhc2UsIGNocm9uaWMgZ2FzdHJpdGlzLCBwZXB0aWMgdWxjZXIgZGlzZWFzZSwgZXRjLikgdGhhdCBjb3VsZCBhZmZlY3QgdGhlIGFic29ycHRpb24gb2YgdGhlIHN0dWR5IGRydWcgQ05TQS0wMDE8YnIgLz4zLglIaXN0b3J5IG9mIGdhc3RyaWMgc3VyZ2VyeSwgaW5jbHVkaW5nIFJvdXgtZW4tWSBnYXN0cmljIGJ5cGFzcyBzdXJnZXJ5IG9yIGFuIGFudHJlY3RvbXkgd2l0aCB2YWdvdG9teSwgb3IgZ2FzdHJlY3RvbXk8YnIgLz40LglJbmFiaWxpdHkgdG8gdG9sZXJhdGUgb3JhbCBtZWRpY2F0aW9uPGJyIC8%2BNS4JSGlzdG9yeSBvZiBhbGxlcmdpZXMgb3IgYWR2ZXJzZSByZWFjdGlvbnMgdG8gQkg0IG9yIHJlbGF0ZWQgY29tcG91bmRzIG9yIHRvIGFueSBleGNpcGllbnRzIGluIHRoZSBzdHVkeSBkcnVnIGZvcm11bGF0aW9uPGJyIC8%2BNi4JQW55IGNsaW5pY2FsbHkgc2lnbmlmaWNhbnQgbWVkaWNhbCBvciBwc3ljaGlhdHJpYyBjb25kaXRpb24gb3IgbWVkaWNhbCBoaXN0b3J5LCB0aGF0IGluIHRoZSBvcGluaW9uIG9mIHRoZSBJbnZlc3RpZ2F0b3Igb3IgdGhlIE1lZGljYWwgTW9uaXRvciwgd291bGQgaW50ZXJmZXJlIHdpdGggdGhlIHN1YmplY3TigJlzIGFiaWxpdHkgdG8gcGFydGljaXBhdGUgaW4gdGhlIHN0dWR5IG9yIGluY3JlYXNlIHRoZSByaXNrIG9mIHBhcnRpY2lwYXRpb24gZm9yIHRoYXQgc3ViamVjdDxiciAvPjcuCUFsYW5pbmUgYW1pbm90cmFuc2ZlcmFzZSAoQUxUKSBvciBhc3BhcnRhdGUgYW1pbm90cmFuc2ZlcmFzZSAoQVNUKSBsYWJvcmF0b3J5IHZhbHVlcyBncmVhdGVyIHRoYW4gMiB0aW1lcyB0aGUgdXBwZXIgbGltaXQgb2Ygbm9ybWFsIChVTE4pPGJyIC8%2BOC4JR2lsYmVydOKAmXMgU3luZHJvbWU8YnIgLz45LglBbnkgb3RoZXIgY2xpbmljYWxseSBzaWduaWZpY2FudCBsYWJvcmF0b3J5IGFibm9ybWFsaXR5IGF0IHRoZSBTY3JlZW5pbmcgdmlzaXQgb3IgcHJpb3IgdG8gdGhlIGFkbWluaXN0cmF0aW9uIG9mIHRoZSBmaXJzdCBkb3NlIG9mIHN0dWR5IGRydWcuIEluIGdlbmVyYWwsIGVhY2ggbGFib3JhdG9yeSB2YWx1ZSBmcm9tIHNjcmVlbmluZyBhbmQgYmFzZWxpbmUgY2hlbWlzdHJ5IGFuZCBoZW1hdG9sb2d5IHBhbmVscyBzaG91bGQgZmFsbCB3aXRoaW4gdGhlIGxpbWl0cyBvZiB0aGUgbm9ybWFsIGxhYm9yYXRvcnkgcmVmZXJlbmNlIHJhbmdlLiA8YnIgLz4xMC4JQ3VycmVudCBwYXJ0aWNpcGF0aW9uIGluIGFueSBvdGhlciBpbnZlc3RpZ2F0aW9uYWwgZHJ1ZyBzdHVkeSBvciBwYXJ0aWNpcGF0aW9uIHdpdGhpbiAzMCBkYXlzIHByaW9yIHRvIFNjcmVlbmluZzxiciAvPjExLglIaXN0b3J5IG9mIGFsY29ob2wgb3IgZHJ1ZyBhYnVzZSB3aXRoaW4gbGFzdCA2IG1vbnRocyBwcmlvciB0byBzY3JlZW5pbmcsIGN1cnJlbnQgZXZpZGVuY2Ugb2Ygc3Vic3RhbmNlIGRlcGVuZGVuY2Ugb3Igc2VsZi1yZXBvcnRlZCBhbGNvaG9saWMgaW50YWtlID4yIGRyaW5rcy9kYXk8YnIgLz4xMi4JQSBmZW1hbGUgd2hvIGlzIG51cnNpbmcgb3Igd2hvIGlzIHBsYW5uaW5nIHRvIGJlY29tZSBwcmVnbmFudDxiciAvPjEzLglRVGNGIChRVCB3aXRoIEZyZWRlcmljaWHigJlzIGNvcnJlY3Rpb24pIGVxdWFsIHRvIDQ2MCBtc2VjIGluIG1hbGVzIGFuZCBlcXVhbCB0byA0ODAgbXNlYyBpbiBmZW1hbGVzIChiYXNlZCBvbiB0aGUgbWVhbiBvZiB0cmlwbGljYXRlIG1lYXN1cmVtZW50cyB0YWtlbiBhdCBTY3JlZW5pbmcpPGJyIC8%2BMTQuCVJlc3RpbmcgaGVhcnQgcmF0ZSBvZiBlcXVhbCB0byBvciBsZXNzIHRoYW4gNDAgb3IgZXF1YWwgdG8gb3IgZ3JlYXRlciB0aGFuIDExMCBiZWF0cyBwZXIgbWludXRlIChicG0pIG9yIHJlc3RpbmcgYmxvb2QgcHJlc3N1cmUgbGVzcyB0aGFuIDkwLzQwIG1tSGcgb3IgZ3JlYXRlciB0aGFuIDE1MC85MCBtbUhnIGF0IFNjcmVlbmluZyBvciBwcmlvciB0byB0aGUgZmlyc3QgYWRtaW5pc3RyYXRpb24gb2Ygc3R1ZHkgZHJ1ZzxiciAvPjE1LglBbnkgb3RoZXIgYWJub3JtYWwgdml0YWwgc2lnbnMgdGhhdCBhcmUgY29uc2lkZXJlZCB0byBiZSBjbGluaWNhbGx5IHNpZ25pZmljYW50IGJ5IHRoZSBJbnZlc3RpZ2F0b3I8YnIgLz4xNi4JSXMsIGluIHRoZSBvcGluaW9uIG9mIHRoZSBJbnZlc3RpZ2F0b3IsIHVud2lsbGluZyBvciB1bmFibGUgdG8gYWRoZXJlIHRvIHRoZSByZXF1aXJlbWVudHMgb2YgdGhlIHN0dWR5PGJyIC8%2BMTcuCU1ham9yIHN1cmdlcnkgd2l0aGluIHRoZSBwcmlvciA5MCBkYXlzPGJyIC8%2BMTguCUN1cnJlbnRseSB0YWtpbmcgYW4gYW50aWZvbGF0ZSBpbmNsdWRpbmcsIGJ1dCBub3QgbGltaXRlZCB0bywgbWV0aG90cmV4YXRlPGJyIC8%2BMTkuCVBvc2l0aXZlIHRlc3QgZm9yIEhJViwgaGVwYXRpdGlzIEIsIG9yIGhlcGF0aXRpcyBDPGJyIC8%2BDmV4cGFuZGFibGUtYm94GkNvbW1lcmNpYWwgc2VjdG9yL0luZHVzdHJ5J0NlbnNhIFBoYXJtYWNldXRpY2FscyBBdXN0cmFsaWEgUHR5IEx0ZFdDLy1QUklNRSBGRzxiciAvPkxldmVsIDkgSFdUIFRvd2VyIEJ1aWxkaW5nPGJyIC8%2BNDAgQ2l0eSBSb2FkPGJyIC8%2BU291dGhiYW5rLCBWSUMgIDMwMDYJQXVzdHJhbGlhAk1yDlRheWxvciBLaWxmb2lsbENlbnNhIFBoYXJtYWNldXRpY2FscyBBdXN0cmFsaWEgUHR5IEx0ZDxiciAvPkZsb29yIDE5LCBIV1QgVG93ZXI8YnIgLz40MCBDaXR5IFJvYWQ8YnIgLz5Tb3V0aGJhbmssIFZJQywgMzAwNglBdXN0cmFsaWEPKzYxIDQwOCA4ODAgNDAzHXRheWxvcmtpbGZvaWxAY2Vuc2FwaGFybWEuY29tBmhpZGRlbmQCDw8UKwAEDxYEHwVlHwNnZGRkPCsABAEAFgIfAmVkAhEPFgIfAWhkAhMPZBYGAgMPDxYCHw1lZGQCBQ8PFgIfDQUlL1RyaWFsUGRmL1RyaWFsUmV2aWV3LTM3MzUzNy5wZGY%2FdD0xN2RkAi8PPCsABAEADxYCHwNnZGQCJQ9kFhZmDxUCEHJlc3VsdHMtaGVhZGVyLTERVHJpYWwgZnJvbSBBTlpDVFJkAgEPDxYCHw0FPX4vVHJpYWwvUmVnaXN0cmF0aW9uL1RyaWFsUmV2aWV3LmFzcHg%2FaWQ9MzczOTQxJmlzUmV2aWV3PXRydWVkZAIDDw8WAh8NBSUvVHJpYWxQZGYvVHJpYWxSZXZpZXctMzczOTQxLnBkZj90PTE3ZGQCBw8PFgIfAgUGMzczOTQxZGQCCQ8PFgIfAgUOMTI2MTcwMDE1NjAzODFkZAILDw8WAh8CZWRkAg0PDxYCHwIFBUZhbHNlZGQCDg8VLRByZXN1bHRzLWhlYWRlci0ykgFDaXJjdWxhdGluZyBUdW1vdXIgRE5BIEFuYWx5c2lzIEluZm9ybWluZyBBZGp1dmFudCBDaGVtb3RoZXJhcHkgaW4gTG9jYWxseSBBZHZhbmNlZCBSZWN0YWwgQ2FuY2VyOiBBIE11bHRpY2VudHJlIFJhbmRvbWlzZWQgU3R1ZHkgKERZTkFNSUMtUkVDVEFMKRJOb3QgeWV0IHJlY3J1aXRpbmcHaW5mby1saQhBcHByb3ZlZAdpbmZvLWxpGFByb3NwZWN0aXZlbHkgcmVnaXN0ZXJlZDFIYXMgdGhlIHRyaWFsIGJlZW4gdXBkYXRlZCBpbiB0aGUgbGFzdCAxMiBtb250aHM%2FClVwIHRvIGRhdGUKMTUvMTEvMjAxNxJyZXN1bHRzLWhlYWRlci0xMDAIQXBwcm92ZWQKVXAgdG8gZGF0ZRNBQ1RSTjEyNjE3MDAxNTYwMzgxEDE1IE5vdmVtYmVyIDIwMTcEc2hvd2FMb2NhbGx5IGFkdmFuY2VkIHJlY3RhbCBjYW5jZXIgdHJlYXRlZCB3aXRoIHByZS1vcGVyYXRpdmUgbG9uZyBjb3Vyc2UgY2hlbW8tcmFkaWF0aW9uIGFuZCBzdXJnZXJ5BHNob3cJQXVzdHJhbGlhBHNob3cIVmljdG9yaWEEc2hvdwRzaG93Ek5vdCB5ZXQgcmVjcnVpdGluZxAwNCBEZWNlbWJlciAyMDE3BHNob3cIQXBwcm92ZWT8DVRoZSBwcmltYXJ5IHB1cnBvc2Ugb2YgdGhpcyBzdHVkeSBpcyB0byBzaG93IHRoYXQgYnkgdXNpbmcgY3RETkEgcmVzdWx0cywgaW4gYWRkaXRpb24gdG8gYXNzZXNzaW5nIHRoZSByaXNrIG9mIHR1bW91ciByZWN1cnJlbmNlIGJ5IHN0YW5kYXJkIHBhdGhvbG9neSBhc3Nlc3NtZW50cywgdGhlIG51bWJlciBvZiBwYXRpZW50cyByZWNlaXZpbmcgYWRqdXZhbnQgKHBvc3Qgc3VyZ2VyeSkgY2hlbW90aGVyYXB5IHdpbGwgYmUgcmVkdWNlZC48YnIgLz5XaG8gaXMgaXQgZm9yPzxiciAvPllvdSBtYXkgYmUgZWxpZ2libGUgdG8gam9pbiB0aGlzIHN0dWR5IGlmIHlvdSBhcmUgYWdlZCAxOCBvciBvdmVyLCBhbmQgaGF2ZSByZWNlaXZlZCBjaGVtby1yYWRpYXRpb24gZm9sbG93ZWQgYnkgc3VyZ2VyeSBmb3IgbG9jYWxseSBhZHZhbmNlZCByZWN0YWwgY2FuY2VyLjxiciAvPlN0dWR5IGRldGFpbHM6PGJyIC8%2BQWxsIHBhdGllbnRzIGVucm9sbGVkIGluIHRoaXMgc3R1ZHkgYXJlIHJhbmRvbWx5IGFsbG9jYXRlZCAoYnkgY2hhbmNlKSB0byBvbmUgb2YgdHdvIGdyb3VwczsgU3RhbmRhcmQgb2YgY2FyZSAoU09DKSBncm91cCBvciB0aGUgY3RETkEtaW5mb3JtZWQgZ3JvdXAuICBUaGUgZGVjaXNpb24gdG8gcHJvY2VlZCB3aXRoIGNoZW1vdGhlcmFweSBmb3IgdGhvc2UgaW4gdGhlIFNPQyBncm91cCBpcyBiYXNlZCBvbmx5IG9uIHRoZSBzdGFuZGFyZCByaXNrIGFzc2Vzc21lbnQgb2YgdGhlIHR1bW91ciAoaG93IGxpa2VseSB5b3VyIHR1bW91ciBpcyB0byBjb21lIGJhY2sgb3IgcmVjdXIpLiBUaGVpciBjdEROQSByZXN1bHQgd2lsbCBub3QgYmUgZGlzY2xvc2VkLiAgVGhvc2Ugd2hvIGFyZSByYW5kb21pc2VkIHRvIHRoZSBjdEROQS1pbmZvcm1lZCBncm91cCB3aWxsIGJlIHRyZWF0ZWQgd2l0aCBjaGVtb3RoZXJhcHkgaWYgdGhleSBhcmUgY3RETkEgcG9zaXRpdmUgT1IgaWYgdGhleSBhcmUgY3RETkEgbmVnYXRpdmUgQU5EIGFyZSBjb25zaWRlcmVkIHRvIGhhdmUgYSB0dW1vdXIgYXQgaGlnaCByaXNrIG9mIHJlY3VycmluZyBiYXNlZCBvbiB0aGUgc3RhbmRhcmQgcmlzayBhc3Nlc3NtZW50LiAgT25seSB0aG9zZSBpbiB0aGUgY3RETkEtaW5mb3JtZWQgZ3JvdXAgd2hvIGhhdmUgY2hlbW90aGVyYXB5IHdpbGwgaGF2ZSBtb250aGx5IGN0RE5BIHNhbXBsZXMgY29sbGVjdGVkOyB1cCB0byBmb3VyIHNhbXBsZXMgY29sbGVjdGVkIG92ZXIgNCBtb250aHMgdGhlbiBhIGZpbmFsIHNhbXBsZSBhZnRlciBjaGVtb3RoZXJhcHkgaGFzIGZpbmlzaGVkLjxiciAvPkFsbCBwYXJ0aWNpcGFudHMgd2lsbCBiZSBmb2xsb3dlZCB1cCAzIG1vbnRobHkgZm9yIDIgeWVhcnMsIHRoZW4gNiBtb250aGx5IGZvciAzIHllYXJzIHRocm91Z2ggdGhlaXIgaG9zcGl0YWwgZm9yIGEgdG90YWwgb2YgZml2ZSB5ZWFycyBmb3IgZGlzZWFzZSByZWN1cnJlbmNlIGFuZCBzdXJ2aXZhbC48YnIgLz5JdCBpcyBob3BlZCB0aGF0IHRoZSBmaW5kaW5ncyBmcm9tIHRoaXMgc3R1ZHkgd2lsbCBkZW1vbnN0cmF0ZSB0aGF0IHVzaW5nIGN0RE5BIHJlc3VsdHMgdG8gaGVscCBtYWtlIGEgZGVjaXNpb24gYXMgdG8gd2hvIHJlY2VpdmVzIGFkanV2YW50IGNoZW1vdGhlcmFweSB3aWxsIHJlc3VsdCBpbiBhIHJlZHVjdGlvbiBpbiB0aGUgbnVtYmVyIG9mIHBhdGllbnRzIGhhdmluZyBjaGVtb3RoZXJhcHkgYW5kIGRvaW5nIHNvLCB3aXRob3V0IGNvbXByb21pc2luZyB0aGUgcmF0ZSBvZiBkaXNlYXNlIHJlY3VycmVuY2Ugd2hlbiBjb21wYXJlZCB0byBzdGFuZGFyZCBvZiBjYXJlLocEMS4JQWdlZCAgMTggeWVhcnMgb2YgYWdlIGFuZCBvdmVyPGJyIC8%2BMi4JU3ViamVjdHMgd2l0aCBsb2NhbGx5IGFkdmFuY2VkIHJlY3RhbCBjYW5jZXIgdHJlYXRlZCB3aXRoIGN1cmF0aXZlIGludGVudCA8YnIgLz4zLglTdWJqZWN0cyB0cmVhdGVkIHdpdGggcHJlLW9wZXJhdGl2ZSBsb25nIGNvdXJzZSBjaGVtby1yYWRpYXRpb24gYW5kIHN1cmdlcnkgPGJyIC8%2BNC4JQ1Qgc2NhbiBvZiBjaGVzdC9hYmRvbWVuL3BlbHZpcyBwcmlvciB0byBjb21tZW5jaW5nIHByZS1vcGVyYXRpdmUgY2hlbW8tcmFkaWF0aW9uIGRlbW9uc3RyYXRpbmcgbm8gbWV0YXN0YXRpYyBkaXNlYXNlPGJyIC8%2BNS4JQSB0dW1vdXIgc2FtcGxlIChmcm9tIHRoZSBwcmUtdHJlYXRtZW50IGJpb3BzeSBvciBzdXJnZXJ5IHNwZWNpbWVuIGlzIGF2YWlsYWJsZSBmb3IgbW9sZWN1bGFyIHRlc3Rpbmcgd2l0aGluIDM1IGRheXMgYWZ0ZXIgc3VyZ2VyeTxiciAvPjYuCUZpdCBmb3IgYWRqdXZhbnQgKHBvc3Qgc3VyZ2VyeSkgY2hlbW90aGVyYXB5CDE4IFllYXJzCSBObyBsaW1pdBZCb3RoIG1hbGVzIGFuZCBmZW1hbGVz9AMxLglIaXN0b3J5IG9mIGFub3RoZXIgcHJpbWFyeSBjYW5jZXIgd2l0aGluIHRoZSBsYXN0IDMgeWVhcnMgKHdpdGggdGhlIGV4Y2VwdGlvbiBvZiBub24tbWVsYW5vbWEgc2tpbiBjYW5jZXIgYW5kIGNhcmNpbm9tYSBpbiBzaXR1KS48YnIgLz4yLglQYXRpZW50cyB3aXRoIG11bHRpcGxlIHByaW1hcnkgY29sb3JlY3RhbCBjYW5jZXJzPGJyIC8%2BMy4JSW5hZGVxdWF0ZSBib25lIG1hcnJvdywga2lkbmV5IGFuZCBsaXZlciBmdW5jdGlvbiwgYXMgZGV0ZXJtaW5lZCBieSBibG9vZCB0ZXN0czxiciAvPjQuCUV2aWRlbmNlIG9mIGFjdGl2ZSBpbmZlY3Rpb248YnIgLz41LglDbGluaWNhbGx5IHNpZ25pZmljYW50IGNhcmRpb3Zhc2N1bGFyIGRpc2Vhc2U8YnIgLz42LglNZWRpY2FsIG9yIHBzeWNoaWF0cmljIGNvbmRpdGlvbiBvciBvY2N1cGF0aW9uYWwgcmVzcG9uc2liaWxpdGllcyB0aGF0IG1heSBwcmVjbHVkZSBjb21wbGlhbmNlIHdpdGggdGhlIHN0dWR5IHJlcXVpcmVtZW50cw5leHBhbmRhYmxlLWJveBpPdGhlciBDb2xsYWJvcmF0aXZlIGdyb3VwcwVBR0lUR1tHSSBDYW5jZXIgSW5zdGl0dXRlIEAgTGlmZWhvdXNlPGJyIC8%2BTGV2ZWwgNiwgMTE5LTE0MyBNaXNzZW5kZW4gUmQ8YnIgLz5DYW1wZXJkb3duIE5TVyAyMDUwCUF1c3RyYWxpYQJNcxBUaW5hIENhdmljY2hpb2xvbFRoZSBXYWx0ZXIgYW5kIEVsaXphIEhhbGwgSW5zdGl0dXRlIG9mIE1lZGljYWwgUmVzZWFyY2g8YnIgLz4xRyBSb3lhbCBQYXJhZGU8YnIgLz5QYXJrdmlsbGUgIFZpY3RvcmlhLCAgMzA1MglBdXN0cmFsaWEPKzYxIDMgOTM0NSAyODgwGnRpbmEuY2F2aWNjaGlvbG9AbWgub3JnLmF1BmhpZGRlbmQCDw8UKwAEDxYEHwVlHwNnZGRkPCsABAEAFgIfAmVkAhEPFgIfAWhkAhMPZBYGAgMPDxYCHw1lZGQCBQ8PFgIfDQUlL1RyaWFsUGRmL1RyaWFsUmV2aWV3LTM3Mzk0MS5wZGY%2FdD0xN2RkAi8PPCsABAEADxYCHwNnZGQCJw9kFhZmDxUCEHJlc3VsdHMtaGVhZGVyLTERVHJpYWwgZnJvbSBBTlpDVFJkAgEPDxYCHw0FPX4vVHJpYWwvUmVnaXN0cmF0aW9uL1RyaWFsUmV2aWV3LmFzcHg%2FaWQ9MzcyODA4JmlzUmV2aWV3PXRydWVkZAIDDw8WAh8NBSUvVHJpYWxQZGYvVHJpYWxSZXZpZXctMzcyODA4LnBkZj90PTE3ZGQCBw8PFgIfAgUGMzcyODA4ZGQCCQ8PFgIfAgUOMTI2MTcwMDE1NTkzMDNkZAILDw8WAh8CZWRkAg0PDxYCHwIFBUZhbHNlZGQCDg8VLRByZXN1bHRzLWhlYWRlci0yjgFEZXRlcm1pbmluZyB0aGUgZmVhc2liaWxpdHkgb2YgdXNpbmcgcGF0aWVudCBjb250cm9sbGVkIGFuYWxnZXNpYSBpbiBlbWVyZ2VuY3kgZGVwYXJ0bWVudHM6IA0KQSBmZWFzaWJpbGl0eSBwaWxvdCByYW5kb21pc2VkIGNvbnRyb2xsZWQgdHJpYWwgEk5vdCB5ZXQgcmVjcnVpdGluZwdpbmZvLWxpEU5vdCB5ZXQgc3VibWl0dGVkB2luZm8tbGkrUHJvc3BlY3RpdmVseSByZWdpc3RlcmVkPGJyIC8%2BKHByb3Zpc2lvbmFsKTFIYXMgdGhlIHRyaWFsIGJlZW4gdXBkYXRlZCBpbiB0aGUgbGFzdCAxMiBtb250aHM%2FClVwIHRvIGRhdGUKMTUvMTEvMjAxNxJyZXN1bHRzLWhlYWRlci0xMDARTm90IHlldCBzdWJtaXR0ZWQKVXAgdG8gZGF0ZRRBQ1RSTjEyNjE3MDAxNTU5MzAzcBAxNSBOb3ZlbWJlciAyMDE3BHNob3cuUGFpbiBtYW5hZ2VtZW50LCBQYXRpZW50IGNvbnRyb2xsZWQgYW5hbGdhZXNpYQRzaG93CUF1c3RyYWxpYQRzaG93EVdlc3Rlcm4gQXVzdHJhbGlhBHNob3cEc2hvdxJOb3QgeWV0IHJlY3J1aXRpbmcPMDEgSmFudWFyeSAyMDIxBHNob3cRTm90IHlldCBzdWJtaXR0ZWSPCERlc3BpdGUgcGFpbiBiZWluZyB0aGUgcHJpbWFyeSByZWFzb24gbW9zdCBwYXRpZW50cyBwcmVzZW50IHRvIGVtZXJnZW5jeSBkZXBhcnRtZW50cyAoRURzKSwgY3VycmVudCBtZXRob2RzIG9mIHBhaW4gbWFuYWdlbWVudCBpbiBFRHMgYXJlIHN1Ym9wdGltYWwuIFBhdGllbnQgY29udHJvbGxlZCBhbmFsZ2VzaWEgKFBDQSkgaW52b2x2ZXMgdGhlIHBhdGllbnQgc2VsZi1hZG1pbmlzdGVyaW5nIGludHJhdmVub3VzIGFuYWxnZXNpYSB2aWEgYSBwcmUtc2V0IG1lZGljYXRpb24gYWRtaW5pc3RyYXRpb24gcHVtcC4gIEFsdGhvdWdoIFBDQXMgaGF2ZSBiZWluZyByaWdvcm91c2x5IGV2YWx1YXRlZCBhbmQgd2lkZWx5IHVzZWQgaW4gb3RoZXIgY2xpbmljYWwgYXJlYXMsIHRoZXkgYXJlIG5vdCByb3V0aW5lbHkgdXNlZCBpbiBFRHMuICBUaGlzIHN0dWR5IHdpbGwgZGV0ZXJtaW5lIGlmIFBDQXMgYXJlIGEgZmVhc2libGUgbW9kZSBvZiBhbmFsZ2VzaWMgZGVsaXZlcnkgaW4gdGhlIEVEIGVudmlyb25tZW50LiBBIGZlYXNpYmlsaXR5IHBpbG90IHJhbmRvbWlzZWQgY29udHJvbGxlZCB0cmlhbCAoUkNUKSB3aWxsIGJlIGNvbmR1Y3RlZCBpbiBvbmUgcHJpdmF0ZSBob3NwaXRhbCBFRCB0byBkZXRlcm1pbmUgdGhlIGZlYXNpYmlsaXR5IG9mIHVzaW5nIFBDQXMgaW4gRURzLiBUaGlzIHJlc2VhcmNoIHdpbGwgYWRkIHRvIGEgbGltaXRlZCBib2R5IG9mIGtub3dsZWRnZSBpbiB0aGUgYXJlYSBvZiBwYWluIG1hbmFnZW1lbnQgaW4gRURzIGFuZCBwb3RlbnRpYWxseSBlbmhhbmNlIHBhaW4gbWFuYWdlbWVudCBpbiB0aGUgRUQgdGhyb3VnaCB0aGUgdXNlIG9mIFBDQXMuIEFzIHRoaXMgaXMgYSBmZWFzaWJpbGl0eSBwaWxvdCBSQ1QsIHdlIGh5cG90aGVzaXNlIHRoYXQgUENBIHdpbGwgYmUgYSBmZWFzaWJsZSBtb2RlIG9mIGFuYWxnZXNpYyBkZWxpdmVyeSBpbiBFRHMsIEhvd2V2ZXIgYSBsYXJnZXItc2NhbGUsIG11bHRpLXNpdGUgUkNUIHdpbGwgYmUgbmVlZGVkIHRvIGZ1cnRoZXIgaW52ZXN0aWdhdGUgdGhpcyB0b3BpYy4gLiCvAVBhdGllbnRzIHByZXNlbnRpbmcgd2l0aCBzZXZlcmUgYWJkb21pbmFsIHBhaW4gd2l0aCBhIG51bWVyaWMgcmF0aW5nIHNjYWxlIChOUlMpIGdyZWF0ZXIgdGhhbiBvciBlcXVhbCB0byBmaXZlIG91dCBvZiB0ZW4gYW5kIGFyZSBsaWtlbHkgdG8gcmVxdWlyZSBhbiBpbnRyYXZlbm91cyBvcGlvaWQ8YnIgLz4IMTggWWVhcnMJIE5vIGxpbWl0FkJvdGggbWFsZXMgYW5kIGZlbWFsZXPJBjwxOCB5ZWFycyBvbGQsIG5vdCBhYmxlIHRvIHJlYWQgYW5kIHVuZGVyc3RhbmQgRW5nbGlzaCwgYWJub3JtYWwgdml0YWwgc2lnbiBwYXJhbWV0ZXJzLCBjb250cmFpbmRpY2F0aW9ucyB0byB1c2luZyBhIFBDQSBkZXZpY2UsIHdyaXR0ZW4gaW5mb3JtZWQgY29uc2VudCBub3QgcHJvdmlkZWQsIGtub3duIGFsbGVyZ3kgdG8gb3BpYXRlcywgcmVkdWNlZCBsZXZlbCBvZiBjb25zY2lvdXNuZXNzIGV2aWRlbmNlZCBieSBhIEdsYXNnb3cgQ29tYSBTY29yZSA8MTUsIGluYWJpbGl0eSB0byBvcGVyYXRlIGEgUENBIGRldmljZSAoZS5nLiBkZWNyZWFzZWQgaGFuZCBkZXh0ZXJpdHkgb3IgdmlzdWFsbHkgaW1wYWlyZWQpLCBpbmFiaWxpdHkgdG8gdW5kZXJzdGFuZCBpbmZvcm1hdGlvbiBhYm91dCB0aGUgc3R1ZHkgKGUuZy4gZGVtZW50aWEsIGxlYXJuaW5nIGRpZmZpY3VsdGllcywgZHJ1ZyBvciBhbGNvaG9sIGludG94aWNhdGlvbiwgb3IgYWN1dGUgY29uZnVzaW9uKSwgaGlzdG9yeSBvZiBjaHJvbmljIHBhaW4sICBoaXN0b3J5IG9mIHRvbGVyYW5jZSBvciBhbiBhZGRpY3Rpb24gdG8gb3Bpb2lkcywgaGlzdG9yeSBvZiBjaHJvbmljIGV4cG9zdXJlIHRvIG9waW9pZHMgKGUuIGcuIElWIGRydWcgdXNlciwgcmVnaW9uYWwgcGFpbiBzeW5kcm9tZSwgb3Igb25jb2xvZ3kgcmVsYXRlZCBwYWluIG1hbmFnZW1lbnQpLCBoaXN0b3J5IG9mIHJlbmFsIGZhaWx1cmUgb3IgaW5zdWZmaWNpZW5jeSwgaW5hYmlsaXR5IHRvIGdhaW4gSVYgYWNjZXNzLCBwcmVnbmFudCBvciBicmVhc3QgZmVlZGluZywgY2xpbmljYWwgc3VzcGljaW9uIG9mIG9waW9pZCBkZXBlbmRlbmNlIG9yIGFidXNlLiAOZXhwYW5kYWJsZS1ib3gKSW5kaXZpZHVhbB1OYXRhc3lhIFJhamEgKFBoRCBDYW5kaWRhdGUpII0BU3QgSm9obiBvZiBHb2QgSG9zcGl0YWwgTXVyZG9jaCA8YnIgLz5DZW50cmUgZm9yIE51cnNpbmcgYW5kIE1pZHdpZmVyeSBSZXNlYXJjaCAobG93ZXIgZ3JvdW5kIGZsb29yKSA8YnIgLz4xMDAgTXVyZG9jaCBEcml2ZSwgTXVyZG9jaCBXQSA2MTUwCUF1c3RyYWxpYQJNcwxOYXRhc3lhIFJhamGfAVN0IEpvaG4gb2YgR29kIEhvc3BpdGFsIE11cmRvY2ggPGJyIC8%2BQ2VudGVyIGZvciBOdXJzaW5nIGFuZCBNaWR3aWZlcnkgUmVzZWFyY2ggKGxvd2VyIGdyb3VuZCBmbG9vcikgPGJyIC8%2BMTAwIE11cmRvY2ggRHJpdmUsIE11cmRvY2ggNjE1MDxiciAvPk11cmRvY2ggV0EgNjE1MAlBdXN0cmFsaWEOKzYxIDggOTQzODkwMDUjUmFqYU5hdGFzeWEuUmFqYUF6bGFuMUBteS5uZC5lZHUuYXUGaGlkZGVuZAIPDxQrAAQPFgQfBWUfA2dkZGQ8KwAEAQAWAh8CZWQCEQ8WAh8BaGQCEw9kFgYCAw8PFgIfDWVkZAIFDw8WAh8NBSUvVHJpYWxQZGYvVHJpYWxSZXZpZXctMzcyODA4LnBkZj90PTE3ZGQCLw88KwAEAQAPFgIfA2dkZAIpDxQrAAJkZGQCFw8WAh8BaGQYBQUeX19Db250cm9sc1JlcXVpcmVQb3N0QmFja0tleV9fFioFI2N0bDAwJGJvZHkkcmVnaXN0cmF0aW9uRnJvbURhdGUkREREBSljdGwwMCRib2R5JHJlZ2lzdHJhdGlvbkZyb21EYXRlJERERCRDJEZOUAUvY3RsMDAkYm9keSRMc3R2d1NlYXJjaFJlc3VsdCRjdHJsMCRjaGtfZG93bmxvYWQFMmN0bDAwJGJvZHkkTHN0dndTZWFyY2hSZXN1bHQkY3RybDAkY2hrX2R1cERvd25sb2FkBS9jdGwwMCRib2R5JExzdHZ3U2VhcmNoUmVzdWx0JGN0cmwyJGNoa19kb3dubG9hZAUyY3RsMDAkYm9keSRMc3R2d1NlYXJjaFJlc3VsdCRjdHJsMiRjaGtfZHVwRG93bmxvYWQFL2N0bDAwJGJvZHkkTHN0dndTZWFyY2hSZXN1bHQkY3RybDQkY2hrX2Rvd25sb2FkBTJjdGwwMCRib2R5JExzdHZ3U2VhcmNoUmVzdWx0JGN0cmw0JGNoa19kdXBEb3dubG9hZAUvY3RsMDAkYm9keSRMc3R2d1NlYXJjaFJlc3VsdCRjdHJsNiRjaGtfZG93bmxvYWQFMmN0bDAwJGJvZHkkTHN0dndTZWFyY2hSZXN1bHQkY3RybDYkY2hrX2R1cERvd25sb2FkBS9jdGwwMCRib2R5JExzdHZ3U2VhcmNoUmVzdWx0JGN0cmw4JGNoa19kb3dubG9hZAUyY3RsMDAkYm9keSRMc3R2d1NlYXJjaFJlc3VsdCRjdHJsOCRjaGtfZHVwRG93bmxvYWQFMGN0bDAwJGJvZHkkTHN0dndTZWFyY2hSZXN1bHQkY3RybDEwJGNoa19kb3dubG9hZAUzY3RsMDAkYm9keSRMc3R2d1NlYXJjaFJlc3VsdCRjdHJsMTAkY2hrX2R1cERvd25sb2FkBTBjdGwwMCRib2R5JExzdHZ3U2VhcmNoUmVzdWx0JGN0cmwxMiRjaGtfZG93bmxvYWQFM2N0bDAwJGJvZHkkTHN0dndTZWFyY2hSZXN1bHQkY3RybDEyJGNoa19kdXBEb3dubG9hZAUwY3RsMDAkYm9keSRMc3R2d1NlYXJjaFJlc3VsdCRjdHJsMTQkY2hrX2Rvd25sb2FkBTNjdGwwMCRib2R5JExzdHZ3U2VhcmNoUmVzdWx0JGN0cmwxNCRjaGtfZHVwRG93bmxvYWQFMGN0bDAwJGJvZHkkTHN0dndTZWFyY2hSZXN1bHQkY3RybDE2JGNoa19kb3dubG9hZAUzY3RsMDAkYm9keSRMc3R2d1NlYXJjaFJlc3VsdCRjdHJsMTYkY2hrX2R1cERvd25sb2FkBTBjdGwwMCRib2R5JExzdHZ3U2VhcmNoUmVzdWx0JGN0cmwxOCRjaGtfZG93bmxvYWQFM2N0bDAwJGJvZHkkTHN0dndTZWFyY2hSZXN1bHQkY3RybDE4JGNoa19kdXBEb3dubG9hZAUwY3RsMDAkYm9keSRMc3R2d1NlYXJjaFJlc3VsdCRjdHJsMjAkY2hrX2Rvd25sb2FkBTNjdGwwMCRib2R5JExzdHZ3U2VhcmNoUmVzdWx0JGN0cmwyMCRjaGtfZHVwRG93bmxvYWQFMGN0bDAwJGJvZHkkTHN0dndTZWFyY2hSZXN1bHQkY3RybDIyJGNoa19kb3dubG9hZAUzY3RsMDAkYm9keSRMc3R2d1NlYXJjaFJlc3VsdCRjdHJsMjIkY2hrX2R1cERvd25sb2FkBTBjdGwwMCRib2R5JExzdHZ3U2VhcmNoUmVzdWx0JGN0cmwyNCRjaGtfZG93bmxvYWQFM2N0bDAwJGJvZHkkTHN0dndTZWFyY2hSZXN1bHQkY3RybDI0JGNoa19kdXBEb3dubG9hZAUwY3RsMDAkYm9keSRMc3R2d1NlYXJjaFJlc3VsdCRjdHJsMjYkY2hrX2Rvd25sb2FkBTNjdGwwMCRib2R5JExzdHZ3U2VhcmNoUmVzdWx0JGN0cmwyNiRjaGtfZHVwRG93bmxvYWQFMGN0bDAwJGJvZHkkTHN0dndTZWFyY2hSZXN1bHQkY3RybDI4JGNoa19kb3dubG9hZAUzY3RsMDAkYm9keSRMc3R2d1NlYXJjaFJlc3VsdCRjdHJsMjgkY2hrX2R1cERvd25sb2FkBTBjdGwwMCRib2R5JExzdHZ3U2VhcmNoUmVzdWx0JGN0cmwzMCRjaGtfZG93bmxvYWQFM2N0bDAwJGJvZHkkTHN0dndTZWFyY2hSZXN1bHQkY3RybDMwJGNoa19kdXBEb3dubG9hZAUwY3RsMDAkYm9keSRMc3R2d1NlYXJjaFJlc3VsdCRjdHJsMzIkY2hrX2Rvd25sb2FkBTNjdGwwMCRib2R5JExzdHZ3U2VhcmNoUmVzdWx0JGN0cmwzMiRjaGtfZHVwRG93bmxvYWQFMGN0bDAwJGJvZHkkTHN0dndTZWFyY2hSZXN1bHQkY3RybDM0JGNoa19kb3dubG9hZAUzY3RsMDAkYm9keSRMc3R2d1NlYXJjaFJlc3VsdCRjdHJsMzQkY2hrX2R1cERvd25sb2FkBTBjdGwwMCRib2R5JExzdHZ3U2VhcmNoUmVzdWx0JGN0cmwzNiRjaGtfZG93bmxvYWQFM2N0bDAwJGJvZHkkTHN0dndTZWFyY2hSZXN1bHQkY3RybDM2JGNoa19kdXBEb3dubG9hZAUwY3RsMDAkYm9keSRMc3R2d1NlYXJjaFJlc3VsdCRjdHJsMzgkY2hrX2Rvd25sb2FkBTNjdGwwMCRib2R5JExzdHZ3U2VhcmNoUmVzdWx0JGN0cmwzOCRjaGtfZHVwRG93bmxvYWQFImN0bDAwJGJvZHkkTHN0dndTZWFyY2hSZXN1bHQkcGFnZXIPFCsABGRkAhQCFGQFHGN0bDAwJGJvZHkkTHN0dndTZWFyY2hSZXN1bHQPPCsACgIHPCsAFAAIAhRkBRJjdGwwMCRib2R5JGx2RHVtbXkPPCsACgIHPCsAFAAIAuukAWQFF2N0bDAwJGJvZHkkbHN0Vmlld1BhZ2VyDxQrAARkZAIUAuukAWSLeKZIiiAtVAi63ZyI2PWl2UdFtg%3D%3D&__VIEWSTATEGENERATOR=9247CB99&__SCROLLPOSITIONX=0&__SCROLLPOSITIONY=219&__EVENTVALIDATION=%2FwEWlAEC2p2X2Q8CjZP7qQcCirKr1wcC57unSQLc7siGCwLjr%2BnnCAL%2Bhv2iDQLeobTOAwL05ZRGAuD4jNgKAtmH3vkCAqjHjLwEAp7bqaEHArXeutYKAsu0pLQKAqqw9ucNAtf%2FuIwHAvXxiaAFAt%2BP1LMOAt%2BP1LMOArTK3YIKAs67%2Ft0PAtiLw4sKAtOUiYEJAuSNjtwEAsfag6MFArS8xKQLArON85gIAtig8ZAEAo%2FK3c4BAsSPl84KArm%2Bi20CoPDwrAUC9PqaiwsC1PrG2AMCp8ONugsCztj4hQ4CiKu6tAcCrZjwxgkCncWE%2BgkCrNa11wkCx5DiEgL%2F6qisCALlm%2FX0CgLVv5OZDgL27cWwAwLToKLiCQKfwO%2B6AQL29oCVCgKvv7qBBQLS8PTqDwKMn4q1BgLK%2B7KUDwL13fSTDQKIkrr4BwKtiNeqBAKP15ejBwLW8%2FyCDwK1za2QAwKN4NrxBgKfgrw8At%2FwjP8DAsDQ7PsFAr2fopAPAr7v0oYDAqryypgJAsSu964MAvni1fwKAsi%2Fk44MAsbQxWMCw9D5YwLhkZ60BwLY0LlgAqHMvcQPAqq09KMNAoLX%2Bb8MAqDCxNoCAra4%2BGsC1djlvQsCjLK2wAkC7oWIlQ8C9ujTwwYCtOCCoAYCv5jLxwQCl%2FvG2wUCte77vgsCo5THjwkCwPTa2QICmZ6JJALBmPXTCQLjxOynDwLKyMazDALw4LW5CwLusfaZBgLD2NWmDALYo4yvDAKk7rPMCQKmhsWJAgKZ9ZHZBwLk1Lf7CwLa1u7MDgLczYP2CgLcse3iCAKoz8CFDwKAwO3MDQLa5MebDwKDpIOBBALFgtWuDgKlorimAQLc27PHDgKiosDoAwK%2B2pvPAgKjoqg5ApjawyECoKKwgwMC6tbrqQQCqaLYtwkCsNyT9goC9MqorQYC4ZqMEQLq2rLqAgKXt6roBQLgoMqlDQL168%2BfDALWsNTiCQKriO72AQLcsPm4DAKZqov0DgL3yrTQAQLumYCbBQLt2r6NDgKktp7yCgLjoNbICAKC68OpAQLZsOCFBQK4h%2BKABwLfsIXcBwKmqf%2F9AwLbyrDnBQLhksSGAQLR2rqkAgKXr%2BLdBgLHoNLfDAL144eVDQK9sNycCQKrgKbsAgLDsIHzCwKZosPpDzvQOG%2F2abvSIn2o4OFCjef3Vnyp&ctl00%24body%24searchTermTxtBx=&ctl00%24body%24registryRdBtnLst=ALL&ctl00%24body%24interventionDescriptionTxtBx=&ctl00%24body%24interventionCodeOperatorDrpDwnLst=OR&ctl00%24body%24interventionCodeChckListBx=&ctl00%24body%24studyTypeDrpDwnLst=&ctl00%24body%24recruitmentStatusChckListBx=&ctl00%24body%24healthConditionTxtBx=&ctl00%24body%24conditionCategoryDrpDwnLst=&ctl00_body_registrationFromDate_Raw=N&ctl00%24body%24registrationFromDate=&ctl00_body_registrationFromDate_DDDWS=0%3A0%3A-1%3A-10000%3A-10000%3A0%3A-10000%3A-10000%3A1&ctl00_body_registrationFromDate_DDD_C_FNPWS=0%3A0%3A-1%3A-10000%3A-10000%3A0%3A0px%3A-10000%3A1&ctl00%24body%24registrationFromDate%24DDD%24C=11%2F24%2F2017&ctl00_body_registrationToDate_Raw=N&ctl00%24body%24registrationToDate=&ctl00_body_trialStartFromDate_Raw=N&ctl00%24body%24trialStartFromDate=&ctl00_body_trialStartToDate_Raw=N&ctl00%24body%24trialStartToDate=&ctl00%24body%24recruitmentCountryOperatorDrpDwnLst=OR&ctl00_body_recruitmentCountriesChckListBxDeletedItems=&ctl00_body_recruitmentCountriesChckListBxInsertedItems=&ctl00_body_recruitmentCountriesChckListBxCustomCallback=&ctl00%24body%24recruitmentCountriesChckListBx=&ctl00%24body%24txtBxPostcode=&ctl00%24body%24drpDwnLstDistance=&ctl00%24body%24primarySponsorTypeDrpDwnLst=&ctl00%24body%24fundingSourceDrpDwnLst=&ctl00%24body%24phaseDrpDwnLst=&ctl00%24body%24pnlSearch_CollapsiblePanelExtender_ClientState=true&ctl00%24body%24drpDwnLstDownload=Download+ALL+trials&ctl00%24body%24btnDownload=DOWNLOAD&DXScript=1_32%2C1_61%2C2_22%2C2_24%2C2_29%2C2_21%2C1_36%2C1_54%2C1_51%2C2_16'

echo "ANZCTR download complete" >> $targetfile_semaphore
